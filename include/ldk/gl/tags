!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APIENTRY	.\glcorearb.h	26;"	d
APIENTRYP	.\glcorearb.h	29;"	d
DeviceName	.\wglext.h	/^    CHAR   DeviceName[32];$/;"	m	struct:_GPU_DEVICE
DeviceString	.\wglext.h	/^    CHAR   DeviceString[128];$/;"	m	struct:_GPU_DEVICE
ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV	.\wglext.h	683;"	d
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	.\wglext.h	111;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	.\wglext.h	110;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	.\wglext.h	384;"	d
ERROR_INVALID_PROFILE_ARB	.\wglext.h	84;"	d
ERROR_INVALID_VERSION_ARB	.\wglext.h	67;"	d
ERROR_MISSING_AFFINITY_MASK_NV	.\wglext.h	684;"	d
Flags	.\wglext.h	/^    DWORD  Flags;$/;"	m	struct:_GPU_DEVICE
GLAPI	.\glcorearb.h	32;"	d
GLDEBUGPROC	.\glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCARB	.\glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLVULKANPROCNV	.\glcorearb.h	/^typedef void (APIENTRY  *GLVULKANPROCNV)(void);$/;"	t
GL_ACCUM_ADJACENT_PAIRS_NV	.\glcorearb.h	5391;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2100;"	d
GL_ACTIVE_ATTRIBUTES	.\glcorearb.h	745;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	.\glcorearb.h	746;"	d
GL_ACTIVE_PROGRAM	.\glcorearb.h	1870;"	d
GL_ACTIVE_PROGRAM_EXT	.\glcorearb.h	4618;"	d
GL_ACTIVE_RESOURCES	.\glcorearb.h	2400;"	d
GL_ACTIVE_SUBROUTINES	.\glcorearb.h	1699;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	.\glcorearb.h	1702;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	.\glcorearb.h	1700;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	.\glcorearb.h	1701;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	.\glcorearb.h	1703;"	d
GL_ACTIVE_TEXTURE	.\glcorearb.h	496;"	d
GL_ACTIVE_UNIFORMS	.\glcorearb.h	742;"	d
GL_ACTIVE_UNIFORM_BLOCKS	.\glcorearb.h	1431;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	.\glcorearb.h	1430;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	.\glcorearb.h	743;"	d
GL_ACTIVE_VARIABLES	.\glcorearb.h	2416;"	d
GL_ADJACENT_PAIRS_NV	.\glcorearb.h	5392;"	d
GL_AFFINE_2D_NV	.\glcorearb.h	5369;"	d
GL_AFFINE_3D_NV	.\glcorearb.h	5370;"	d
GL_ALIASED_LINE_WIDTH_RANGE	.\glcorearb.h	449;"	d
GL_ALL_BARRIER_BITS	.\glcorearb.h	2115;"	d
GL_ALL_SHADER_BITS	.\glcorearb.h	1868;"	d
GL_ALPHA	.\glcorearb.h	220;"	d
GL_ALPHA_REF_COMMAND_NV	.\glcorearb.h	4925;"	d
GL_ALREADY_SIGNALED	.\glcorearb.h	1519;"	d
GL_ALWAYS	.\glcorearb.h	92;"	d
GL_AMD_framebuffer_multisample_advanced	.\glcorearb.h	3947;"	d
GL_AMD_performance_monitor	.\glcorearb.h	3963;"	d
GL_AND	.\glcorearb.h	196;"	d
GL_AND_INVERTED	.\glcorearb.h	199;"	d
GL_AND_REVERSE	.\glcorearb.h	197;"	d
GL_ANY_SAMPLES_PASSED	.\glcorearb.h	1595;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	.\glcorearb.h	2216;"	d
GL_APPLE_rgb_422	.\glcorearb.h	3998;"	d
GL_ARB_ES2_compatibility	.\glcorearb.h	2879;"	d
GL_ARB_ES3_1_compatibility	.\glcorearb.h	2883;"	d
GL_ARB_ES3_2_compatibility	.\glcorearb.h	2887;"	d
GL_ARB_ES3_compatibility	.\glcorearb.h	2898;"	d
GL_ARB_arrays_of_arrays	.\glcorearb.h	2902;"	d
GL_ARB_base_instance	.\glcorearb.h	2906;"	d
GL_ARB_bindless_texture	.\glcorearb.h	2910;"	d
GL_ARB_blend_func_extended	.\glcorearb.h	2950;"	d
GL_ARB_buffer_storage	.\glcorearb.h	2954;"	d
GL_ARB_cl_event	.\glcorearb.h	2958;"	d
GL_ARB_clear_buffer_object	.\glcorearb.h	2970;"	d
GL_ARB_clear_texture	.\glcorearb.h	2974;"	d
GL_ARB_clip_control	.\glcorearb.h	2978;"	d
GL_ARB_compressed_texture_pixel_storage	.\glcorearb.h	2982;"	d
GL_ARB_compute_shader	.\glcorearb.h	2986;"	d
GL_ARB_compute_variable_group_size	.\glcorearb.h	2990;"	d
GL_ARB_conditional_render_inverted	.\glcorearb.h	3002;"	d
GL_ARB_conservative_depth	.\glcorearb.h	3006;"	d
GL_ARB_copy_buffer	.\glcorearb.h	3010;"	d
GL_ARB_copy_image	.\glcorearb.h	3014;"	d
GL_ARB_cull_distance	.\glcorearb.h	3018;"	d
GL_ARB_debug_output	.\glcorearb.h	3022;"	d
GL_ARB_depth_buffer_float	.\glcorearb.h	3059;"	d
GL_ARB_depth_clamp	.\glcorearb.h	3063;"	d
GL_ARB_derivative_control	.\glcorearb.h	3067;"	d
GL_ARB_direct_state_access	.\glcorearb.h	3071;"	d
GL_ARB_draw_buffers_blend	.\glcorearb.h	3075;"	d
GL_ARB_draw_elements_base_vertex	.\glcorearb.h	3089;"	d
GL_ARB_draw_indirect	.\glcorearb.h	3093;"	d
GL_ARB_draw_instanced	.\glcorearb.h	3097;"	d
GL_ARB_enhanced_layouts	.\glcorearb.h	3107;"	d
GL_ARB_explicit_attrib_location	.\glcorearb.h	3111;"	d
GL_ARB_explicit_uniform_location	.\glcorearb.h	3115;"	d
GL_ARB_fragment_coord_conventions	.\glcorearb.h	3119;"	d
GL_ARB_fragment_layer_viewport	.\glcorearb.h	3123;"	d
GL_ARB_fragment_shader_interlock	.\glcorearb.h	3127;"	d
GL_ARB_framebuffer_no_attachments	.\glcorearb.h	3131;"	d
GL_ARB_framebuffer_object	.\glcorearb.h	3135;"	d
GL_ARB_framebuffer_sRGB	.\glcorearb.h	3139;"	d
GL_ARB_geometry_shader4	.\glcorearb.h	3143;"	d
GL_ARB_get_program_binary	.\glcorearb.h	3175;"	d
GL_ARB_get_texture_sub_image	.\glcorearb.h	3179;"	d
GL_ARB_gl_spirv	.\glcorearb.h	3183;"	d
GL_ARB_gpu_shader5	.\glcorearb.h	3193;"	d
GL_ARB_gpu_shader_fp64	.\glcorearb.h	3197;"	d
GL_ARB_gpu_shader_int64	.\glcorearb.h	3201;"	d
GL_ARB_half_float_vertex	.\glcorearb.h	3286;"	d
GL_ARB_imaging	.\glcorearb.h	3290;"	d
GL_ARB_indirect_parameters	.\glcorearb.h	3294;"	d
GL_ARB_instanced_arrays	.\glcorearb.h	3306;"	d
GL_ARB_internalformat_query	.\glcorearb.h	3315;"	d
GL_ARB_internalformat_query2	.\glcorearb.h	3319;"	d
GL_ARB_invalidate_subdata	.\glcorearb.h	3343;"	d
GL_ARB_map_buffer_alignment	.\glcorearb.h	3347;"	d
GL_ARB_map_buffer_range	.\glcorearb.h	3351;"	d
GL_ARB_multi_bind	.\glcorearb.h	3355;"	d
GL_ARB_multi_draw_indirect	.\glcorearb.h	3359;"	d
GL_ARB_occlusion_query2	.\glcorearb.h	3363;"	d
GL_ARB_parallel_shader_compile	.\glcorearb.h	3367;"	d
GL_ARB_pipeline_statistics_query	.\glcorearb.h	3377;"	d
GL_ARB_pixel_buffer_object	.\glcorearb.h	3391;"	d
GL_ARB_polygon_offset_clamp	.\glcorearb.h	3399;"	d
GL_ARB_post_depth_coverage	.\glcorearb.h	3403;"	d
GL_ARB_program_interface_query	.\glcorearb.h	3407;"	d
GL_ARB_provoking_vertex	.\glcorearb.h	3411;"	d
GL_ARB_query_buffer_object	.\glcorearb.h	3415;"	d
GL_ARB_robust_buffer_access_behavior	.\glcorearb.h	3419;"	d
GL_ARB_robustness	.\glcorearb.h	3423;"	d
GL_ARB_robustness_isolation	.\glcorearb.h	3452;"	d
GL_ARB_sample_locations	.\glcorearb.h	3456;"	d
GL_ARB_sample_shading	.\glcorearb.h	3476;"	d
GL_ARB_sampler_objects	.\glcorearb.h	3486;"	d
GL_ARB_seamless_cube_map	.\glcorearb.h	3490;"	d
GL_ARB_seamless_cubemap_per_texture	.\glcorearb.h	3494;"	d
GL_ARB_separate_shader_objects	.\glcorearb.h	3498;"	d
GL_ARB_shader_atomic_counter_ops	.\glcorearb.h	3502;"	d
GL_ARB_shader_atomic_counters	.\glcorearb.h	3506;"	d
GL_ARB_shader_ballot	.\glcorearb.h	3510;"	d
GL_ARB_shader_bit_encoding	.\glcorearb.h	3514;"	d
GL_ARB_shader_clock	.\glcorearb.h	3518;"	d
GL_ARB_shader_draw_parameters	.\glcorearb.h	3522;"	d
GL_ARB_shader_group_vote	.\glcorearb.h	3526;"	d
GL_ARB_shader_image_load_store	.\glcorearb.h	3530;"	d
GL_ARB_shader_image_size	.\glcorearb.h	3534;"	d
GL_ARB_shader_precision	.\glcorearb.h	3538;"	d
GL_ARB_shader_stencil_export	.\glcorearb.h	3542;"	d
GL_ARB_shader_storage_buffer_object	.\glcorearb.h	3546;"	d
GL_ARB_shader_subroutine	.\glcorearb.h	3550;"	d
GL_ARB_shader_texture_image_samples	.\glcorearb.h	3554;"	d
GL_ARB_shader_viewport_layer_array	.\glcorearb.h	3558;"	d
GL_ARB_shading_language_420pack	.\glcorearb.h	3562;"	d
GL_ARB_shading_language_include	.\glcorearb.h	3566;"	d
GL_ARB_shading_language_packing	.\glcorearb.h	3587;"	d
GL_ARB_sparse_buffer	.\glcorearb.h	3591;"	d
GL_ARB_sparse_texture	.\glcorearb.h	3605;"	d
GL_ARB_sparse_texture2	.\glcorearb.h	3624;"	d
GL_ARB_sparse_texture_clamp	.\glcorearb.h	3628;"	d
GL_ARB_spirv_extensions	.\glcorearb.h	3632;"	d
GL_ARB_stencil_texturing	.\glcorearb.h	3636;"	d
GL_ARB_sync	.\glcorearb.h	3640;"	d
GL_ARB_tessellation_shader	.\glcorearb.h	3644;"	d
GL_ARB_texture_barrier	.\glcorearb.h	3648;"	d
GL_ARB_texture_border_clamp	.\glcorearb.h	3652;"	d
GL_ARB_texture_buffer_object	.\glcorearb.h	3657;"	d
GL_ARB_texture_buffer_object_rgb32	.\glcorearb.h	3670;"	d
GL_ARB_texture_buffer_range	.\glcorearb.h	3674;"	d
GL_ARB_texture_compression_bptc	.\glcorearb.h	3678;"	d
GL_ARB_texture_compression_rgtc	.\glcorearb.h	3686;"	d
GL_ARB_texture_cube_map_array	.\glcorearb.h	3690;"	d
GL_ARB_texture_filter_anisotropic	.\glcorearb.h	3701;"	d
GL_ARB_texture_filter_minmax	.\glcorearb.h	3705;"	d
GL_ARB_texture_gather	.\glcorearb.h	3711;"	d
GL_ARB_texture_mirror_clamp_to_edge	.\glcorearb.h	3718;"	d
GL_ARB_texture_mirrored_repeat	.\glcorearb.h	3722;"	d
GL_ARB_texture_multisample	.\glcorearb.h	3727;"	d
GL_ARB_texture_non_power_of_two	.\glcorearb.h	3731;"	d
GL_ARB_texture_query_levels	.\glcorearb.h	3735;"	d
GL_ARB_texture_query_lod	.\glcorearb.h	3739;"	d
GL_ARB_texture_rg	.\glcorearb.h	3743;"	d
GL_ARB_texture_rgb10_a2ui	.\glcorearb.h	3747;"	d
GL_ARB_texture_stencil8	.\glcorearb.h	3751;"	d
GL_ARB_texture_storage	.\glcorearb.h	3755;"	d
GL_ARB_texture_storage_multisample	.\glcorearb.h	3759;"	d
GL_ARB_texture_swizzle	.\glcorearb.h	3763;"	d
GL_ARB_texture_view	.\glcorearb.h	3767;"	d
GL_ARB_timer_query	.\glcorearb.h	3771;"	d
GL_ARB_transform_feedback2	.\glcorearb.h	3775;"	d
GL_ARB_transform_feedback3	.\glcorearb.h	3779;"	d
GL_ARB_transform_feedback_instanced	.\glcorearb.h	3783;"	d
GL_ARB_transform_feedback_overflow_query	.\glcorearb.h	3787;"	d
GL_ARB_uniform_buffer_object	.\glcorearb.h	3793;"	d
GL_ARB_vertex_array_bgra	.\glcorearb.h	3797;"	d
GL_ARB_vertex_array_object	.\glcorearb.h	3801;"	d
GL_ARB_vertex_attrib_64bit	.\glcorearb.h	3805;"	d
GL_ARB_vertex_attrib_binding	.\glcorearb.h	3809;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	.\glcorearb.h	3813;"	d
GL_ARB_vertex_type_2_10_10_10_rev	.\glcorearb.h	3817;"	d
GL_ARB_viewport_array	.\glcorearb.h	3821;"	d
GL_ARC_TO_NV	.\glcorearb.h	5438;"	d
GL_ARRAY_BUFFER	.\glcorearb.h	606;"	d
GL_ARRAY_BUFFER_BINDING	.\glcorearb.h	608;"	d
GL_ARRAY_SIZE	.\glcorearb.h	2406;"	d
GL_ARRAY_STRIDE	.\glcorearb.h	2409;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	.\glcorearb.h	2114;"	d
GL_ATOMIC_COUNTER_BUFFER	.\glcorearb.h	2074;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	.\glcorearb.h	2079;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	.\glcorearb.h	2080;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	.\glcorearb.h	2075;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	.\glcorearb.h	2078;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	.\glcorearb.h	2412;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	.\glcorearb.h	2232;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	.\glcorearb.h	2085;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	.\glcorearb.h	2084;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV	.\glcorearb.h	5323;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV	.\glcorearb.h	5324;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	.\glcorearb.h	2082;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	.\glcorearb.h	2083;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	.\glcorearb.h	2081;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	.\glcorearb.h	2077;"	d
GL_ATOMIC_COUNTER_BUFFER_START	.\glcorearb.h	2076;"	d
GL_ATTACHED_MEMORY_OBJECT_NV	.\glcorearb.h	5235;"	d
GL_ATTACHED_MEMORY_OFFSET_NV	.\glcorearb.h	5236;"	d
GL_ATTACHED_SHADERS	.\glcorearb.h	741;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	.\glcorearb.h	4919;"	d
GL_AUTO_GENERATE_MIPMAP	.\glcorearb.h	2321;"	d
GL_BACK	.\glcorearb.h	110;"	d
GL_BACK_LEFT	.\glcorearb.h	107;"	d
GL_BACK_RIGHT	.\glcorearb.h	108;"	d
GL_BEVEL_NV	.\glcorearb.h	5385;"	d
GL_BGR	.\glcorearb.h	436;"	d
GL_BGRA	.\glcorearb.h	437;"	d
GL_BGRA_INTEGER	.\glcorearb.h	1055;"	d
GL_BGR_INTEGER	.\glcorearb.h	1054;"	d
GL_BLACKHOLE_RENDER_INTEL	.\glcorearb.h	4692;"	d
GL_BLEND	.\glcorearb.h	151;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	.\glcorearb.h	3855;"	d
GL_BLEND_ADVANCED_COHERENT_NV	.\glcorearb.h	4888;"	d
GL_BLEND_COLOR	.\glcorearb.h	563;"	d
GL_BLEND_COLOR_COMMAND_NV	.\glcorearb.h	4921;"	d
GL_BLEND_DST	.\glcorearb.h	149;"	d
GL_BLEND_DST_ALPHA	.\glcorearb.h	549;"	d
GL_BLEND_DST_RGB	.\glcorearb.h	547;"	d
GL_BLEND_EQUATION	.\glcorearb.h	564;"	d
GL_BLEND_EQUATION_ALPHA	.\glcorearb.h	705;"	d
GL_BLEND_EQUATION_RGB	.\glcorearb.h	676;"	d
GL_BLEND_OVERLAP_NV	.\glcorearb.h	4829;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	.\glcorearb.h	4830;"	d
GL_BLEND_SRC	.\glcorearb.h	150;"	d
GL_BLEND_SRC_ALPHA	.\glcorearb.h	550;"	d
GL_BLEND_SRC_RGB	.\glcorearb.h	548;"	d
GL_BLOCK_INDEX	.\glcorearb.h	2408;"	d
GL_BLUE	.\glcorearb.h	219;"	d
GL_BLUE_INTEGER	.\glcorearb.h	1051;"	d
GL_BLUE_NV	.\glcorearb.h	4831;"	d
GL_BOLD_BIT_NV	.\glcorearb.h	5440;"	d
GL_BOOL	.\glcorearb.h	723;"	d
GL_BOOL_VEC2	.\glcorearb.h	724;"	d
GL_BOOL_VEC3	.\glcorearb.h	725;"	d
GL_BOOL_VEC4	.\glcorearb.h	726;"	d
GL_BOUNDING_BOX_NV	.\glcorearb.h	5364;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	.\glcorearb.h	5375;"	d
GL_BUFFER	.\glcorearb.h	2264;"	d
GL_BUFFER_ACCESS	.\glcorearb.h	614;"	d
GL_BUFFER_ACCESS_FLAGS	.\glcorearb.h	1080;"	d
GL_BUFFER_BINDING	.\glcorearb.h	2413;"	d
GL_BUFFER_DATA_SIZE	.\glcorearb.h	2414;"	d
GL_BUFFER_GPU_ADDRESS_NV	.\glcorearb.h	5678;"	d
GL_BUFFER_IMMUTABLE_STORAGE	.\glcorearb.h	2561;"	d
GL_BUFFER_MAPPED	.\glcorearb.h	615;"	d
GL_BUFFER_MAP_LENGTH	.\glcorearb.h	1081;"	d
GL_BUFFER_MAP_OFFSET	.\glcorearb.h	1082;"	d
GL_BUFFER_MAP_POINTER	.\glcorearb.h	616;"	d
GL_BUFFER_OBJECT_EXT	.\glcorearb.h	4025;"	d
GL_BUFFER_SIZE	.\glcorearb.h	600;"	d
GL_BUFFER_STORAGE_FLAGS	.\glcorearb.h	2562;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	.\glcorearb.h	2111;"	d
GL_BUFFER_USAGE	.\glcorearb.h	601;"	d
GL_BUFFER_VARIABLE	.\glcorearb.h	2385;"	d
GL_BYTE	.\glcorearb.h	186;"	d
GL_CAVEAT_SUPPORT	.\glcorearb.h	2353;"	d
GL_CCW	.\glcorearb.h	120;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	.\glcorearb.h	5435;"	d
GL_CIRCULAR_CW_ARC_TO_NV	.\glcorearb.h	5436;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	.\glcorearb.h	5437;"	d
GL_CLAMP_READ_COLOR	.\glcorearb.h	1008;"	d
GL_CLAMP_TO_BORDER	.\glcorearb.h	522;"	d
GL_CLAMP_TO_BORDER_ARB	.\glcorearb.h	3653;"	d
GL_CLAMP_TO_EDGE	.\glcorearb.h	440;"	d
GL_CLEAR	.\glcorearb.h	195;"	d
GL_CLEAR_BUFFER	.\glcorearb.h	2349;"	d
GL_CLEAR_TEXTURE	.\glcorearb.h	2563;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	.\glcorearb.h	2560;"	d
GL_CLIENT_STORAGE_BIT	.\glcorearb.h	2559;"	d
GL_CLIPPING_INPUT_PRIMITIVES	.\glcorearb.h	2857;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	.\glcorearb.h	3386;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES	.\glcorearb.h	2858;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	.\glcorearb.h	3387;"	d
GL_CLIP_DEPTH_MODE	.\glcorearb.h	2600;"	d
GL_CLIP_DISTANCE0	.\glcorearb.h	984;"	d
GL_CLIP_DISTANCE1	.\glcorearb.h	985;"	d
GL_CLIP_DISTANCE2	.\glcorearb.h	986;"	d
GL_CLIP_DISTANCE3	.\glcorearb.h	987;"	d
GL_CLIP_DISTANCE4	.\glcorearb.h	988;"	d
GL_CLIP_DISTANCE5	.\glcorearb.h	989;"	d
GL_CLIP_DISTANCE6	.\glcorearb.h	990;"	d
GL_CLIP_DISTANCE7	.\glcorearb.h	991;"	d
GL_CLIP_ORIGIN	.\glcorearb.h	2599;"	d
GL_CLOSE_PATH_NV	.\glcorearb.h	5406;"	d
GL_COLOR	.\glcorearb.h	212;"	d
GL_COLORBURN_KHR	.\glcorearb.h	3838;"	d
GL_COLORBURN_NV	.\glcorearb.h	4832;"	d
GL_COLORDODGE_KHR	.\glcorearb.h	3837;"	d
GL_COLORDODGE_NV	.\glcorearb.h	4833;"	d
GL_COLOR_ARRAY_ADDRESS_NV	.\glcorearb.h	5853;"	d
GL_COLOR_ARRAY_LENGTH_NV	.\glcorearb.h	5863;"	d
GL_COLOR_ATTACHMENT0	.\glcorearb.h	1128;"	d
GL_COLOR_ATTACHMENT1	.\glcorearb.h	1129;"	d
GL_COLOR_ATTACHMENT10	.\glcorearb.h	1138;"	d
GL_COLOR_ATTACHMENT11	.\glcorearb.h	1139;"	d
GL_COLOR_ATTACHMENT12	.\glcorearb.h	1140;"	d
GL_COLOR_ATTACHMENT13	.\glcorearb.h	1141;"	d
GL_COLOR_ATTACHMENT14	.\glcorearb.h	1142;"	d
GL_COLOR_ATTACHMENT15	.\glcorearb.h	1143;"	d
GL_COLOR_ATTACHMENT16	.\glcorearb.h	1144;"	d
GL_COLOR_ATTACHMENT17	.\glcorearb.h	1145;"	d
GL_COLOR_ATTACHMENT18	.\glcorearb.h	1146;"	d
GL_COLOR_ATTACHMENT19	.\glcorearb.h	1147;"	d
GL_COLOR_ATTACHMENT2	.\glcorearb.h	1130;"	d
GL_COLOR_ATTACHMENT20	.\glcorearb.h	1148;"	d
GL_COLOR_ATTACHMENT21	.\glcorearb.h	1149;"	d
GL_COLOR_ATTACHMENT22	.\glcorearb.h	1150;"	d
GL_COLOR_ATTACHMENT23	.\glcorearb.h	1151;"	d
GL_COLOR_ATTACHMENT24	.\glcorearb.h	1152;"	d
GL_COLOR_ATTACHMENT25	.\glcorearb.h	1153;"	d
GL_COLOR_ATTACHMENT26	.\glcorearb.h	1154;"	d
GL_COLOR_ATTACHMENT27	.\glcorearb.h	1155;"	d
GL_COLOR_ATTACHMENT28	.\glcorearb.h	1156;"	d
GL_COLOR_ATTACHMENT29	.\glcorearb.h	1157;"	d
GL_COLOR_ATTACHMENT3	.\glcorearb.h	1131;"	d
GL_COLOR_ATTACHMENT30	.\glcorearb.h	1158;"	d
GL_COLOR_ATTACHMENT31	.\glcorearb.h	1159;"	d
GL_COLOR_ATTACHMENT4	.\glcorearb.h	1132;"	d
GL_COLOR_ATTACHMENT5	.\glcorearb.h	1133;"	d
GL_COLOR_ATTACHMENT6	.\glcorearb.h	1134;"	d
GL_COLOR_ATTACHMENT7	.\glcorearb.h	1135;"	d
GL_COLOR_ATTACHMENT8	.\glcorearb.h	1136;"	d
GL_COLOR_ATTACHMENT9	.\glcorearb.h	1137;"	d
GL_COLOR_BUFFER_BIT	.\glcorearb.h	74;"	d
GL_COLOR_CLEAR_VALUE	.\glcorearb.h	157;"	d
GL_COLOR_COMPONENTS	.\glcorearb.h	2303;"	d
GL_COLOR_ENCODING	.\glcorearb.h	2322;"	d
GL_COLOR_LOGIC_OP	.\glcorearb.h	349;"	d
GL_COLOR_RENDERABLE	.\glcorearb.h	2306;"	d
GL_COLOR_SAMPLES_NV	.\glcorearb.h	5087;"	d
GL_COLOR_WRITEMASK	.\glcorearb.h	158;"	d
GL_COMMAND_BARRIER_BIT	.\glcorearb.h	2108;"	d
GL_COMPARE_REF_TO_TEXTURE	.\glcorearb.h	983;"	d
GL_COMPATIBLE_SUBROUTINES	.\glcorearb.h	1707;"	d
GL_COMPILE_STATUS	.\glcorearb.h	737;"	d
GL_COMPLETION_STATUS_ARB	.\glcorearb.h	3369;"	d
GL_COMPLETION_STATUS_KHR	.\glcorearb.h	3874;"	d
GL_COMPRESSED_R11_EAC	.\glcorearb.h	2211;"	d
GL_COMPRESSED_RED	.\glcorearb.h	997;"	d
GL_COMPRESSED_RED_RGTC1	.\glcorearb.h	1187;"	d
GL_COMPRESSED_RG	.\glcorearb.h	998;"	d
GL_COMPRESSED_RG11_EAC	.\glcorearb.h	2213;"	d
GL_COMPRESSED_RGB	.\glcorearb.h	515;"	d
GL_COMPRESSED_RGB8_ETC2	.\glcorearb.h	2205;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	.\glcorearb.h	2207;"	d
GL_COMPRESSED_RGBA	.\glcorearb.h	516;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	.\glcorearb.h	2209;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	.\glcorearb.h	3919;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	.\glcorearb.h	3916;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	.\glcorearb.h	3917;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	.\glcorearb.h	3918;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	.\glcorearb.h	3920;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	.\glcorearb.h	3921;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	.\glcorearb.h	3908;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	.\glcorearb.h	3909;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	.\glcorearb.h	3910;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	.\glcorearb.h	3911;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	.\glcorearb.h	3912;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	.\glcorearb.h	3913;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	.\glcorearb.h	3914;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	.\glcorearb.h	3915;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	.\glcorearb.h	2167;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	.\glcorearb.h	3679;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	.\glcorearb.h	4649;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	.\glcorearb.h	4650;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	.\glcorearb.h	4651;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	.\glcorearb.h	2169;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	.\glcorearb.h	3681;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	.\glcorearb.h	2170;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	.\glcorearb.h	3682;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	.\glcorearb.h	4648;"	d
GL_COMPRESSED_RG_RGTC2	.\glcorearb.h	1189;"	d
GL_COMPRESSED_SIGNED_R11_EAC	.\glcorearb.h	2212;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	.\glcorearb.h	1188;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	.\glcorearb.h	2214;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	.\glcorearb.h	1190;"	d
GL_COMPRESSED_SRGB	.\glcorearb.h	962;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	.\glcorearb.h	3933;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	.\glcorearb.h	3930;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	.\glcorearb.h	3931;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	.\glcorearb.h	3932;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	.\glcorearb.h	3934;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	.\glcorearb.h	3935;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	.\glcorearb.h	3922;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	.\glcorearb.h	3923;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	.\glcorearb.h	3924;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	.\glcorearb.h	3925;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	.\glcorearb.h	3926;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	.\glcorearb.h	3927;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	.\glcorearb.h	3928;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	.\glcorearb.h	3929;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	.\glcorearb.h	2210;"	d
GL_COMPRESSED_SRGB8_ETC2	.\glcorearb.h	2206;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	.\glcorearb.h	2208;"	d
GL_COMPRESSED_SRGB_ALPHA	.\glcorearb.h	963;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	.\glcorearb.h	2168;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	.\glcorearb.h	3680;"	d
GL_COMPRESSED_TEXTURE_FORMATS	.\glcorearb.h	521;"	d
GL_COMPUTE_SHADER	.\glcorearb.h	2218;"	d
GL_COMPUTE_SHADER_BIT	.\glcorearb.h	2235;"	d
GL_COMPUTE_SHADER_INVOCATIONS	.\glcorearb.h	2856;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	.\glcorearb.h	3385;"	d
GL_COMPUTE_SUBROUTINE	.\glcorearb.h	2392;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	.\glcorearb.h	2398;"	d
GL_COMPUTE_TEXTURE	.\glcorearb.h	2331;"	d
GL_COMPUTE_WORK_GROUP_SIZE	.\glcorearb.h	2230;"	d
GL_CONDITION_SATISFIED	.\glcorearb.h	1521;"	d
GL_CONFORMANT_NV	.\glcorearb.h	5226;"	d
GL_CONIC_CURVE_TO_NV	.\glcorearb.h	5477;"	d
GL_CONJOINT_NV	.\glcorearb.h	4834;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	.\glcorearb.h	4697;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	.\glcorearb.h	4987;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	.\glcorearb.h	5001;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	.\glcorearb.h	4999;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	.\glcorearb.h	5000;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	.\glcorearb.h	5015;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	.\glcorearb.h	5016;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV	.\glcorearb.h	5010;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	.\glcorearb.h	5017;"	d
GL_CONSTANT_ALPHA	.\glcorearb.h	567;"	d
GL_CONSTANT_COLOR	.\glcorearb.h	565;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	.\glcorearb.h	1483;"	d
GL_CONTEXT_CORE_PROFILE_BIT	.\glcorearb.h	1482;"	d
GL_CONTEXT_FLAGS	.\glcorearb.h	996;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	.\glcorearb.h	2272;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	.\glcorearb.h	999;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT	.\glcorearb.h	2848;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	.\glcorearb.h	3868;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	.\glcorearb.h	2615;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	.\glcorearb.h	3424;"	d
GL_CONTEXT_LOST	.\glcorearb.h	2596;"	d
GL_CONTEXT_PROFILE_MASK	.\glcorearb.h	1503;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	.\glcorearb.h	2616;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	.\glcorearb.h	2617;"	d
GL_CONTEXT_ROBUST_ACCESS	.\glcorearb.h	3887;"	d
GL_CONTRAST_NV	.\glcorearb.h	4835;"	d
GL_CONVEX_HULL_NV	.\glcorearb.h	5363;"	d
GL_COPY	.\glcorearb.h	198;"	d
GL_COPY_INVERTED	.\glcorearb.h	207;"	d
GL_COPY_READ_BUFFER	.\glcorearb.h	1414;"	d
GL_COPY_READ_BUFFER_BINDING	.\glcorearb.h	2060;"	d
GL_COPY_WRITE_BUFFER	.\glcorearb.h	1415;"	d
GL_COPY_WRITE_BUFFER_BINDING	.\glcorearb.h	2061;"	d
GL_COUNTER_RANGE_AMD	.\glcorearb.h	3965;"	d
GL_COUNTER_TYPE_AMD	.\glcorearb.h	3964;"	d
GL_COUNT_DOWN_NV	.\glcorearb.h	5361;"	d
GL_COUNT_UP_NV	.\glcorearb.h	5360;"	d
GL_COVERAGE_MODULATION_NV	.\glcorearb.h	5092;"	d
GL_COVERAGE_MODULATION_TABLE_NV	.\glcorearb.h	5086;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	.\glcorearb.h	5093;"	d
GL_CUBIC_CURVE_TO_NV	.\glcorearb.h	5417;"	d
GL_CULL_FACE	.\glcorearb.h	130;"	d
GL_CULL_FACE_MODE	.\glcorearb.h	131;"	d
GL_CURRENT_PROGRAM	.\glcorearb.h	749;"	d
GL_CURRENT_QUERY	.\glcorearb.h	603;"	d
GL_CURRENT_VERTEX_ATTRIB	.\glcorearb.h	681;"	d
GL_CW	.\glcorearb.h	119;"	d
GL_DARKEN_KHR	.\glcorearb.h	3835;"	d
GL_DARKEN_NV	.\glcorearb.h	4836;"	d
GL_DEBUG_CALLBACK_FUNCTION	.\glcorearb.h	2238;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	.\glcorearb.h	3026;"	d
GL_DEBUG_CALLBACK_USER_PARAM	.\glcorearb.h	2239;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	.\glcorearb.h	3027;"	d
GL_DEBUG_GROUP_STACK_DEPTH	.\glcorearb.h	2263;"	d
GL_DEBUG_LOGGED_MESSAGES	.\glcorearb.h	2254;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	.\glcorearb.h	3042;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	.\glcorearb.h	2237;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	.\glcorearb.h	3025;"	d
GL_DEBUG_OUTPUT	.\glcorearb.h	2271;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	.\glcorearb.h	2236;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	.\glcorearb.h	3024;"	d
GL_DEBUG_SEVERITY_HIGH	.\glcorearb.h	2255;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	.\glcorearb.h	3043;"	d
GL_DEBUG_SEVERITY_LOW	.\glcorearb.h	2257;"	d
GL_DEBUG_SEVERITY_LOW_ARB	.\glcorearb.h	3045;"	d
GL_DEBUG_SEVERITY_MEDIUM	.\glcorearb.h	2256;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	.\glcorearb.h	3044;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	.\glcorearb.h	2261;"	d
GL_DEBUG_SOURCE_API	.\glcorearb.h	2240;"	d
GL_DEBUG_SOURCE_API_ARB	.\glcorearb.h	3028;"	d
GL_DEBUG_SOURCE_APPLICATION	.\glcorearb.h	2244;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	.\glcorearb.h	3032;"	d
GL_DEBUG_SOURCE_OTHER	.\glcorearb.h	2245;"	d
GL_DEBUG_SOURCE_OTHER_ARB	.\glcorearb.h	3033;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	.\glcorearb.h	2242;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	.\glcorearb.h	3030;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	.\glcorearb.h	2243;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	.\glcorearb.h	3031;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	.\glcorearb.h	2241;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	.\glcorearb.h	3029;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	.\glcorearb.h	2247;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	.\glcorearb.h	3035;"	d
GL_DEBUG_TYPE_ERROR	.\glcorearb.h	2246;"	d
GL_DEBUG_TYPE_ERROR_ARB	.\glcorearb.h	3034;"	d
GL_DEBUG_TYPE_MARKER	.\glcorearb.h	2258;"	d
GL_DEBUG_TYPE_OTHER	.\glcorearb.h	2251;"	d
GL_DEBUG_TYPE_OTHER_ARB	.\glcorearb.h	3039;"	d
GL_DEBUG_TYPE_PERFORMANCE	.\glcorearb.h	2250;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	.\glcorearb.h	3038;"	d
GL_DEBUG_TYPE_POP_GROUP	.\glcorearb.h	2260;"	d
GL_DEBUG_TYPE_PORTABILITY	.\glcorearb.h	2249;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	.\glcorearb.h	3037;"	d
GL_DEBUG_TYPE_PUSH_GROUP	.\glcorearb.h	2259;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	.\glcorearb.h	2248;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	.\glcorearb.h	3036;"	d
GL_DECODE_EXT	.\glcorearb.h	4668;"	d
GL_DECR	.\glcorearb.h	229;"	d
GL_DECR_WRAP	.\glcorearb.h	559;"	d
GL_DELETE_STATUS	.\glcorearb.h	736;"	d
GL_DEPTH	.\glcorearb.h	213;"	d
GL_DEPTH24_STENCIL8	.\glcorearb.h	1101;"	d
GL_DEPTH32F_STENCIL8	.\glcorearb.h	1084;"	d
GL_DEPTH32F_STENCIL8_NV	.\glcorearb.h	5031;"	d
GL_DEPTH_ATTACHMENT	.\glcorearb.h	1160;"	d
GL_DEPTH_BUFFER_BIT	.\glcorearb.h	72;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	.\glcorearb.h	5033;"	d
GL_DEPTH_CLAMP	.\glcorearb.h	1504;"	d
GL_DEPTH_CLEAR_VALUE	.\glcorearb.h	136;"	d
GL_DEPTH_COMPONENT	.\glcorearb.h	216;"	d
GL_DEPTH_COMPONENT16	.\glcorearb.h	552;"	d
GL_DEPTH_COMPONENT24	.\glcorearb.h	553;"	d
GL_DEPTH_COMPONENT32	.\glcorearb.h	554;"	d
GL_DEPTH_COMPONENT32F	.\glcorearb.h	1083;"	d
GL_DEPTH_COMPONENT32F_NV	.\glcorearb.h	5030;"	d
GL_DEPTH_COMPONENTS	.\glcorearb.h	2304;"	d
GL_DEPTH_FUNC	.\glcorearb.h	137;"	d
GL_DEPTH_RANGE	.\glcorearb.h	133;"	d
GL_DEPTH_RENDERABLE	.\glcorearb.h	2307;"	d
GL_DEPTH_SAMPLES_NV	.\glcorearb.h	5088;"	d
GL_DEPTH_STENCIL	.\glcorearb.h	1099;"	d
GL_DEPTH_STENCIL_ATTACHMENT	.\glcorearb.h	1097;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	.\glcorearb.h	2444;"	d
GL_DEPTH_TEST	.\glcorearb.h	134;"	d
GL_DEPTH_WRITEMASK	.\glcorearb.h	135;"	d
GL_DETACHED_BUFFERS_NV	.\glcorearb.h	5242;"	d
GL_DETACHED_MEMORY_INCARNATION_NV	.\glcorearb.h	5240;"	d
GL_DETACHED_TEXTURES_NV	.\glcorearb.h	5241;"	d
GL_DIFFERENCE_KHR	.\glcorearb.h	3841;"	d
GL_DIFFERENCE_NV	.\glcorearb.h	4837;"	d
GL_DISJOINT_NV	.\glcorearb.h	4838;"	d
GL_DISPATCH_INDIRECT_BUFFER	.\glcorearb.h	2233;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	.\glcorearb.h	2234;"	d
GL_DITHER	.\glcorearb.h	148;"	d
GL_DONT_CARE	.\glcorearb.h	183;"	d
GL_DOUBLE	.\glcorearb.h	362;"	d
GL_DOUBLEBUFFER	.\glcorearb.h	159;"	d
GL_DOUBLE_MAT2	.\glcorearb.h	1690;"	d
GL_DOUBLE_MAT2x3	.\glcorearb.h	1693;"	d
GL_DOUBLE_MAT2x4	.\glcorearb.h	1694;"	d
GL_DOUBLE_MAT3	.\glcorearb.h	1691;"	d
GL_DOUBLE_MAT3x2	.\glcorearb.h	1695;"	d
GL_DOUBLE_MAT3x4	.\glcorearb.h	1696;"	d
GL_DOUBLE_MAT4	.\glcorearb.h	1692;"	d
GL_DOUBLE_MAT4x2	.\glcorearb.h	1697;"	d
GL_DOUBLE_MAT4x3	.\glcorearb.h	1698;"	d
GL_DOUBLE_VEC2	.\glcorearb.h	1687;"	d
GL_DOUBLE_VEC3	.\glcorearb.h	1688;"	d
GL_DOUBLE_VEC4	.\glcorearb.h	1689;"	d
GL_DRAW_ARRAYS_COMMAND_NV	.\glcorearb.h	4913;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	.\glcorearb.h	4917;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	.\glcorearb.h	4915;"	d
GL_DRAW_BUFFER	.\glcorearb.h	153;"	d
GL_DRAW_BUFFER0	.\glcorearb.h	689;"	d
GL_DRAW_BUFFER1	.\glcorearb.h	690;"	d
GL_DRAW_BUFFER10	.\glcorearb.h	699;"	d
GL_DRAW_BUFFER11	.\glcorearb.h	700;"	d
GL_DRAW_BUFFER12	.\glcorearb.h	701;"	d
GL_DRAW_BUFFER13	.\glcorearb.h	702;"	d
GL_DRAW_BUFFER14	.\glcorearb.h	703;"	d
GL_DRAW_BUFFER15	.\glcorearb.h	704;"	d
GL_DRAW_BUFFER2	.\glcorearb.h	691;"	d
GL_DRAW_BUFFER3	.\glcorearb.h	692;"	d
GL_DRAW_BUFFER4	.\glcorearb.h	693;"	d
GL_DRAW_BUFFER5	.\glcorearb.h	694;"	d
GL_DRAW_BUFFER6	.\glcorearb.h	695;"	d
GL_DRAW_BUFFER7	.\glcorearb.h	696;"	d
GL_DRAW_BUFFER8	.\glcorearb.h	697;"	d
GL_DRAW_BUFFER9	.\glcorearb.h	698;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	.\glcorearb.h	4912;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	.\glcorearb.h	4916;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	.\glcorearb.h	4914;"	d
GL_DRAW_FRAMEBUFFER	.\glcorearb.h	1113;"	d
GL_DRAW_FRAMEBUFFER_BINDING	.\glcorearb.h	1110;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	.\glcorearb.h	5871;"	d
GL_DRAW_INDIRECT_BUFFER	.\glcorearb.h	1679;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	.\glcorearb.h	1680;"	d
GL_DRAW_INDIRECT_LENGTH_NV	.\glcorearb.h	5872;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	.\glcorearb.h	5870;"	d
GL_DST_ALPHA	.\glcorearb.h	99;"	d
GL_DST_ATOP_NV	.\glcorearb.h	4839;"	d
GL_DST_COLOR	.\glcorearb.h	101;"	d
GL_DST_IN_NV	.\glcorearb.h	4840;"	d
GL_DST_NV	.\glcorearb.h	4841;"	d
GL_DST_OUT_NV	.\glcorearb.h	4842;"	d
GL_DST_OVER_NV	.\glcorearb.h	4843;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	.\glcorearb.h	5432;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	.\glcorearb.h	5433;"	d
GL_DYNAMIC_COPY	.\glcorearb.h	625;"	d
GL_DYNAMIC_DRAW	.\glcorearb.h	623;"	d
GL_DYNAMIC_READ	.\glcorearb.h	624;"	d
GL_DYNAMIC_STORAGE_BIT	.\glcorearb.h	2558;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	.\glcorearb.h	5856;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	.\glcorearb.h	5866;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	.\glcorearb.h	4609;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	.\glcorearb.h	4918;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	.\glcorearb.h	5859;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	.\glcorearb.h	2104;"	d
GL_ELEMENT_ARRAY_BUFFER	.\glcorearb.h	607;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	.\glcorearb.h	609;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	.\glcorearb.h	5869;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	.\glcorearb.h	5849;"	d
GL_EQUAL	.\glcorearb.h	87;"	d
GL_EQUIV	.\glcorearb.h	204;"	d
GL_EXCLUSION_KHR	.\glcorearb.h	3842;"	d
GL_EXCLUSION_NV	.\glcorearb.h	4844;"	d
GL_EXCLUSIVE_EXT	.\glcorearb.h	4679;"	d
GL_EXTENSIONS	.\glcorearb.h	233;"	d
GL_EXT_EGL_image_storage	.\glcorearb.h	4006;"	d
GL_EXT_EGL_sync	.\glcorearb.h	4017;"	d
GL_EXT_debug_label	.\glcorearb.h	4021;"	d
GL_EXT_debug_marker	.\glcorearb.h	4037;"	d
GL_EXT_direct_state_access	.\glcorearb.h	4049;"	d
GL_EXT_draw_instanced	.\glcorearb.h	4568;"	d
GL_EXT_multiview_tessellation_geometry_shader	.\glcorearb.h	4578;"	d
GL_EXT_multiview_texture_multisample	.\glcorearb.h	4582;"	d
GL_EXT_multiview_timer_query	.\glcorearb.h	4586;"	d
GL_EXT_polygon_offset_clamp	.\glcorearb.h	4590;"	d
GL_EXT_post_depth_coverage	.\glcorearb.h	4599;"	d
GL_EXT_raster_multisample	.\glcorearb.h	4603;"	d
GL_EXT_separate_shader_objects	.\glcorearb.h	4617;"	d
GL_EXT_shader_framebuffer_fetch	.\glcorearb.h	4630;"	d
GL_EXT_shader_framebuffer_fetch_non_coherent	.\glcorearb.h	4635;"	d
GL_EXT_shader_integer_mix	.\glcorearb.h	4643;"	d
GL_EXT_texture_compression_s3tc	.\glcorearb.h	4647;"	d
GL_EXT_texture_filter_minmax	.\glcorearb.h	4655;"	d
GL_EXT_texture_sRGB_R8	.\glcorearb.h	4661;"	d
GL_EXT_texture_sRGB_decode	.\glcorearb.h	4666;"	d
GL_EXT_texture_shadow_lod	.\glcorearb.h	4673;"	d
GL_EXT_window_rectangles	.\glcorearb.h	4677;"	d
GL_FACTOR_MAX_AMD	.\glcorearb.h	4894;"	d
GL_FACTOR_MIN_AMD	.\glcorearb.h	4893;"	d
GL_FALSE	.\glcorearb.h	75;"	d
GL_FASTEST	.\glcorearb.h	184;"	d
GL_FILE_NAME_NV	.\glcorearb.h	5343;"	d
GL_FILL	.\glcorearb.h	225;"	d
GL_FILL_RECTANGLE_NV	.\glcorearb.h	5063;"	d
GL_FILTER	.\glcorearb.h	2325;"	d
GL_FIRST_TO_REST_NV	.\glcorearb.h	5393;"	d
GL_FIRST_VERTEX_CONVENTION	.\glcorearb.h	1506;"	d
GL_FIXED	.\glcorearb.h	1843;"	d
GL_FIXED_ONLY	.\glcorearb.h	1009;"	d
GL_FLOAT	.\glcorearb.h	192;"	d
GL_FLOAT16_NV	.\glcorearb.h	5147;"	d
GL_FLOAT16_VEC2_NV	.\glcorearb.h	5148;"	d
GL_FLOAT16_VEC3_NV	.\glcorearb.h	5149;"	d
GL_FLOAT16_VEC4_NV	.\glcorearb.h	5150;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	.\glcorearb.h	1085;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	.\glcorearb.h	5032;"	d
GL_FLOAT_MAT2	.\glcorearb.h	727;"	d
GL_FLOAT_MAT2x3	.\glcorearb.h	952;"	d
GL_FLOAT_MAT2x4	.\glcorearb.h	953;"	d
GL_FLOAT_MAT3	.\glcorearb.h	728;"	d
GL_FLOAT_MAT3x2	.\glcorearb.h	954;"	d
GL_FLOAT_MAT3x4	.\glcorearb.h	955;"	d
GL_FLOAT_MAT4	.\glcorearb.h	729;"	d
GL_FLOAT_MAT4x2	.\glcorearb.h	956;"	d
GL_FLOAT_MAT4x3	.\glcorearb.h	957;"	d
GL_FLOAT_VEC2	.\glcorearb.h	717;"	d
GL_FLOAT_VEC3	.\glcorearb.h	718;"	d
GL_FLOAT_VEC4	.\glcorearb.h	719;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	.\glcorearb.h	5858;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	.\glcorearb.h	5868;"	d
GL_FONT_ASCENDER_BIT_NV	.\glcorearb.h	5456;"	d
GL_FONT_DESCENDER_BIT_NV	.\glcorearb.h	5457;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	.\glcorearb.h	5473;"	d
GL_FONT_HAS_KERNING_BIT_NV	.\glcorearb.h	5463;"	d
GL_FONT_HEIGHT_BIT_NV	.\glcorearb.h	5458;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	.\glcorearb.h	5460;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	.\glcorearb.h	5459;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	.\glcorearb.h	5479;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	.\glcorearb.h	5474;"	d
GL_FONT_UNAVAILABLE_NV	.\glcorearb.h	5475;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	.\glcorearb.h	5461;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	.\glcorearb.h	5462;"	d
GL_FONT_UNINTELLIGIBLE_NV	.\glcorearb.h	5476;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	.\glcorearb.h	5455;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	.\glcorearb.h	5453;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	.\glcorearb.h	5451;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	.\glcorearb.h	5454;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	.\glcorearb.h	5452;"	d
GL_FRACTIONAL_EVEN	.\glcorearb.h	1719;"	d
GL_FRACTIONAL_ODD	.\glcorearb.h	1718;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	.\glcorearb.h	5069;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	.\glcorearb.h	5068;"	d
GL_FRAGMENT_INPUT_NV	.\glcorearb.h	5491;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	.\glcorearb.h	1685;"	d
GL_FRAGMENT_SHADER	.\glcorearb.h	709;"	d
GL_FRAGMENT_SHADER_BIT	.\glcorearb.h	1864;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	.\glcorearb.h	747;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	.\glcorearb.h	4631;"	d
GL_FRAGMENT_SHADER_INVOCATIONS	.\glcorearb.h	2855;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	.\glcorearb.h	3384;"	d
GL_FRAGMENT_SUBROUTINE	.\glcorearb.h	2391;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	.\glcorearb.h	2397;"	d
GL_FRAGMENT_TEXTURE	.\glcorearb.h	2330;"	d
GL_FRAMEBUFFER	.\glcorearb.h	1162;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	.\glcorearb.h	1092;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	.\glcorearb.h	1091;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	.\glcorearb.h	1087;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	.\glcorearb.h	1088;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	.\glcorearb.h	1093;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	.\glcorearb.h	1090;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	.\glcorearb.h	1490;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	.\glcorearb.h	3150;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	.\glcorearb.h	1117;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	.\glcorearb.h	1116;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	.\glcorearb.h	1089;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	.\glcorearb.h	1094;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	.\glcorearb.h	5928;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	.\glcorearb.h	1119;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	.\glcorearb.h	1120;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	.\glcorearb.h	1118;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	.\glcorearb.h	5927;"	d
GL_FRAMEBUFFER_BARRIER_BIT	.\glcorearb.h	2112;"	d
GL_FRAMEBUFFER_BINDING	.\glcorearb.h	1109;"	d
GL_FRAMEBUFFER_BLEND	.\glcorearb.h	2311;"	d
GL_FRAMEBUFFER_COMPLETE	.\glcorearb.h	1121;"	d
GL_FRAMEBUFFER_DEFAULT	.\glcorearb.h	1095;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	.\glcorearb.h	2278;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	.\glcorearb.h	2275;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	.\glcorearb.h	2276;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	.\glcorearb.h	2277;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	.\glcorearb.h	2274;"	d
GL_FRAMEBUFFER_FLIP_X_MESA	.\glcorearb.h	4756;"	d
GL_FRAMEBUFFER_FLIP_Y_MESA	.\glcorearb.h	4761;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	.\glcorearb.h	1122;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	.\glcorearb.h	1124;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	.\glcorearb.h	3152;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	.\glcorearb.h	1491;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	.\glcorearb.h	3151;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	.\glcorearb.h	1123;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	.\glcorearb.h	1177;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	.\glcorearb.h	1125;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	.\glcorearb.h	5930;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	.\glcorearb.h	3463;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	.\glcorearb.h	5628;"	d
GL_FRAMEBUFFER_RENDERABLE	.\glcorearb.h	2309;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	.\glcorearb.h	2310;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	.\glcorearb.h	3464;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	.\glcorearb.h	5629;"	d
GL_FRAMEBUFFER_SRGB	.\glcorearb.h	1179;"	d
GL_FRAMEBUFFER_SWAP_XY_MESA	.\glcorearb.h	4772;"	d
GL_FRAMEBUFFER_UNDEFINED	.\glcorearb.h	1096;"	d
GL_FRAMEBUFFER_UNSUPPORTED	.\glcorearb.h	1126;"	d
GL_FRONT	.\glcorearb.h	109;"	d
GL_FRONT_AND_BACK	.\glcorearb.h	113;"	d
GL_FRONT_FACE	.\glcorearb.h	132;"	d
GL_FRONT_FACE_COMMAND_NV	.\glcorearb.h	4928;"	d
GL_FRONT_LEFT	.\glcorearb.h	105;"	d
GL_FRONT_RIGHT	.\glcorearb.h	106;"	d
GL_FULL_SUPPORT	.\glcorearb.h	2352;"	d
GL_FUNC_ADD	.\glcorearb.h	569;"	d
GL_FUNC_REVERSE_SUBTRACT	.\glcorearb.h	570;"	d
GL_FUNC_SUBTRACT	.\glcorearb.h	571;"	d
GL_GEOMETRY_INPUT_TYPE	.\glcorearb.h	1494;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	.\glcorearb.h	3155;"	d
GL_GEOMETRY_OUTPUT_TYPE	.\glcorearb.h	1495;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	.\glcorearb.h	3156;"	d
GL_GEOMETRY_SHADER	.\glcorearb.h	1492;"	d
GL_GEOMETRY_SHADER_ARB	.\glcorearb.h	3153;"	d
GL_GEOMETRY_SHADER_BIT	.\glcorearb.h	1865;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	.\glcorearb.h	1681;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED	.\glcorearb.h	2854;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	.\glcorearb.h	3383;"	d
GL_GEOMETRY_SUBROUTINE	.\glcorearb.h	2390;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	.\glcorearb.h	2396;"	d
GL_GEOMETRY_TEXTURE	.\glcorearb.h	2329;"	d
GL_GEOMETRY_VERTICES_OUT	.\glcorearb.h	1493;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	.\glcorearb.h	3154;"	d
GL_GEQUAL	.\glcorearb.h	91;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	.\glcorearb.h	2317;"	d
GL_GET_TEXTURE_IMAGE_TYPE	.\glcorearb.h	2318;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	.\glcorearb.h	5450;"	d
GL_GLYPH_HEIGHT_BIT_NV	.\glcorearb.h	5443;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	.\glcorearb.h	5446;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	.\glcorearb.h	5444;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	.\glcorearb.h	5445;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	.\glcorearb.h	5449;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	.\glcorearb.h	5447;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	.\glcorearb.h	5448;"	d
GL_GLYPH_WIDTH_BIT_NV	.\glcorearb.h	5442;"	d
GL_GPU_ADDRESS_NV	.\glcorearb.h	5679;"	d
GL_GREATER	.\glcorearb.h	89;"	d
GL_GREEN	.\glcorearb.h	218;"	d
GL_GREEN_INTEGER	.\glcorearb.h	1050;"	d
GL_GREEN_NV	.\glcorearb.h	4845;"	d
GL_GUILTY_CONTEXT_RESET	.\glcorearb.h	2609;"	d
GL_GUILTY_CONTEXT_RESET_ARB	.\glcorearb.h	3426;"	d
GL_HALF_FLOAT	.\glcorearb.h	1180;"	d
GL_HARDLIGHT_KHR	.\glcorearb.h	3839;"	d
GL_HARDLIGHT_NV	.\glcorearb.h	4846;"	d
GL_HARDMIX_NV	.\glcorearb.h	4847;"	d
GL_HIGH_FLOAT	.\glcorearb.h	1848;"	d
GL_HIGH_INT	.\glcorearb.h	1851;"	d
GL_HORIZONTAL_LINE_TO_NV	.\glcorearb.h	5411;"	d
GL_HSL_COLOR_KHR	.\glcorearb.h	3845;"	d
GL_HSL_COLOR_NV	.\glcorearb.h	4848;"	d
GL_HSL_HUE_KHR	.\glcorearb.h	3843;"	d
GL_HSL_HUE_NV	.\glcorearb.h	4849;"	d
GL_HSL_LUMINOSITY_KHR	.\glcorearb.h	3846;"	d
GL_HSL_LUMINOSITY_NV	.\glcorearb.h	4850;"	d
GL_HSL_SATURATION_KHR	.\glcorearb.h	3844;"	d
GL_HSL_SATURATION_NV	.\glcorearb.h	4851;"	d
GL_IMAGE_1D	.\glcorearb.h	2123;"	d
GL_IMAGE_1D_ARRAY	.\glcorearb.h	2129;"	d
GL_IMAGE_2D	.\glcorearb.h	2124;"	d
GL_IMAGE_2D_ARRAY	.\glcorearb.h	2130;"	d
GL_IMAGE_2D_MULTISAMPLE	.\glcorearb.h	2132;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	2133;"	d
GL_IMAGE_2D_RECT	.\glcorearb.h	2126;"	d
GL_IMAGE_3D	.\glcorearb.h	2125;"	d
GL_IMAGE_BINDING_ACCESS	.\glcorearb.h	2122;"	d
GL_IMAGE_BINDING_FORMAT	.\glcorearb.h	2157;"	d
GL_IMAGE_BINDING_LAYER	.\glcorearb.h	2121;"	d
GL_IMAGE_BINDING_LAYERED	.\glcorearb.h	2120;"	d
GL_IMAGE_BINDING_LEVEL	.\glcorearb.h	2119;"	d
GL_IMAGE_BINDING_NAME	.\glcorearb.h	2118;"	d
GL_IMAGE_BUFFER	.\glcorearb.h	2128;"	d
GL_IMAGE_CLASS_10_10_10_2	.\glcorearb.h	2364;"	d
GL_IMAGE_CLASS_11_11_10	.\glcorearb.h	2363;"	d
GL_IMAGE_CLASS_1_X_16	.\glcorearb.h	2359;"	d
GL_IMAGE_CLASS_1_X_32	.\glcorearb.h	2356;"	d
GL_IMAGE_CLASS_1_X_8	.\glcorearb.h	2362;"	d
GL_IMAGE_CLASS_2_X_16	.\glcorearb.h	2358;"	d
GL_IMAGE_CLASS_2_X_32	.\glcorearb.h	2355;"	d
GL_IMAGE_CLASS_2_X_8	.\glcorearb.h	2361;"	d
GL_IMAGE_CLASS_4_X_16	.\glcorearb.h	2357;"	d
GL_IMAGE_CLASS_4_X_32	.\glcorearb.h	2354;"	d
GL_IMAGE_CLASS_4_X_8	.\glcorearb.h	2360;"	d
GL_IMAGE_COMPATIBILITY_CLASS	.\glcorearb.h	2339;"	d
GL_IMAGE_CUBE	.\glcorearb.h	2127;"	d
GL_IMAGE_CUBE_MAP_ARRAY	.\glcorearb.h	2131;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	.\glcorearb.h	2160;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	.\glcorearb.h	2159;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	.\glcorearb.h	2158;"	d
GL_IMAGE_PIXEL_FORMAT	.\glcorearb.h	2340;"	d
GL_IMAGE_PIXEL_TYPE	.\glcorearb.h	2341;"	d
GL_IMAGE_TEXEL_SIZE	.\glcorearb.h	2338;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	.\glcorearb.h	1845;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	.\glcorearb.h	1844;"	d
GL_INCLUSIVE_EXT	.\glcorearb.h	4678;"	d
GL_INCR	.\glcorearb.h	228;"	d
GL_INCR_WRAP	.\glcorearb.h	558;"	d
GL_INDEX_ARRAY_ADDRESS_NV	.\glcorearb.h	5854;"	d
GL_INDEX_ARRAY_LENGTH_NV	.\glcorearb.h	5864;"	d
GL_INFO_LOG_LENGTH	.\glcorearb.h	740;"	d
GL_INNOCENT_CONTEXT_RESET	.\glcorearb.h	2610;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	.\glcorearb.h	3427;"	d
GL_INT	.\glcorearb.h	190;"	d
GL_INT16_NV	.\glcorearb.h	5129;"	d
GL_INT16_VEC2_NV	.\glcorearb.h	5130;"	d
GL_INT16_VEC3_NV	.\glcorearb.h	5131;"	d
GL_INT16_VEC4_NV	.\glcorearb.h	5132;"	d
GL_INT64_ARB	.\glcorearb.h	3202;"	d
GL_INT64_NV	.\glcorearb.h	5123;"	d
GL_INT64_VEC2_ARB	.\glcorearb.h	3203;"	d
GL_INT64_VEC2_NV	.\glcorearb.h	5133;"	d
GL_INT64_VEC3_ARB	.\glcorearb.h	3204;"	d
GL_INT64_VEC3_NV	.\glcorearb.h	5134;"	d
GL_INT64_VEC4_ARB	.\glcorearb.h	3205;"	d
GL_INT64_VEC4_NV	.\glcorearb.h	5135;"	d
GL_INT8_NV	.\glcorearb.h	5125;"	d
GL_INT8_VEC2_NV	.\glcorearb.h	5126;"	d
GL_INT8_VEC3_NV	.\glcorearb.h	5127;"	d
GL_INT8_VEC4_NV	.\glcorearb.h	5128;"	d
GL_INTEL_blackhole_render	.\glcorearb.h	4691;"	d
GL_INTEL_conservative_rasterization	.\glcorearb.h	4696;"	d
GL_INTEL_framebuffer_CMAA	.\glcorearb.h	4701;"	d
GL_INTEL_performance_query	.\glcorearb.h	4709;"	d
GL_INTERLEAVED_ATTRIBS	.\glcorearb.h	1033;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	.\glcorearb.h	2288;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	.\glcorearb.h	2295;"	d
GL_INTERNALFORMAT_BLUE_SIZE	.\glcorearb.h	2287;"	d
GL_INTERNALFORMAT_BLUE_TYPE	.\glcorearb.h	2294;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	.\glcorearb.h	2289;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	.\glcorearb.h	2296;"	d
GL_INTERNALFORMAT_GREEN_SIZE	.\glcorearb.h	2286;"	d
GL_INTERNALFORMAT_GREEN_TYPE	.\glcorearb.h	2293;"	d
GL_INTERNALFORMAT_PREFERRED	.\glcorearb.h	2284;"	d
GL_INTERNALFORMAT_RED_SIZE	.\glcorearb.h	2285;"	d
GL_INTERNALFORMAT_RED_TYPE	.\glcorearb.h	2292;"	d
GL_INTERNALFORMAT_SHARED_SIZE	.\glcorearb.h	2291;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	.\glcorearb.h	2290;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	.\glcorearb.h	2297;"	d
GL_INTERNALFORMAT_SUPPORTED	.\glcorearb.h	2283;"	d
GL_INT_2_10_10_10_REV	.\glcorearb.h	1605;"	d
GL_INT_IMAGE_1D	.\glcorearb.h	2134;"	d
GL_INT_IMAGE_1D_ARRAY	.\glcorearb.h	2140;"	d
GL_INT_IMAGE_2D	.\glcorearb.h	2135;"	d
GL_INT_IMAGE_2D_ARRAY	.\glcorearb.h	2141;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	.\glcorearb.h	2143;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	2144;"	d
GL_INT_IMAGE_2D_RECT	.\glcorearb.h	2137;"	d
GL_INT_IMAGE_3D	.\glcorearb.h	2136;"	d
GL_INT_IMAGE_BUFFER	.\glcorearb.h	2139;"	d
GL_INT_IMAGE_CUBE	.\glcorearb.h	2138;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	.\glcorearb.h	2142;"	d
GL_INT_SAMPLER_1D	.\glcorearb.h	1064;"	d
GL_INT_SAMPLER_1D_ARRAY	.\glcorearb.h	1068;"	d
GL_INT_SAMPLER_2D	.\glcorearb.h	1065;"	d
GL_INT_SAMPLER_2D_ARRAY	.\glcorearb.h	1069;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	.\glcorearb.h	1538;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	1541;"	d
GL_INT_SAMPLER_2D_RECT	.\glcorearb.h	1391;"	d
GL_INT_SAMPLER_3D	.\glcorearb.h	1066;"	d
GL_INT_SAMPLER_BUFFER	.\glcorearb.h	1392;"	d
GL_INT_SAMPLER_CUBE	.\glcorearb.h	1067;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	.\glcorearb.h	1677;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	.\glcorearb.h	3696;"	d
GL_INT_VEC2	.\glcorearb.h	720;"	d
GL_INT_VEC3	.\glcorearb.h	721;"	d
GL_INT_VEC4	.\glcorearb.h	722;"	d
GL_INVALID_ENUM	.\glcorearb.h	115;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	.\glcorearb.h	1086;"	d
GL_INVALID_INDEX	.\glcorearb.h	1448;"	d
GL_INVALID_OPERATION	.\glcorearb.h	117;"	d
GL_INVALID_VALUE	.\glcorearb.h	116;"	d
GL_INVERT	.\glcorearb.h	205;"	d
GL_INVERT_OVG_NV	.\glcorearb.h	4852;"	d
GL_INVERT_RGB_NV	.\glcorearb.h	4853;"	d
GL_ISOLINES	.\glcorearb.h	1717;"	d
GL_IS_PER_PATCH	.\glcorearb.h	2427;"	d
GL_IS_ROW_MAJOR	.\glcorearb.h	2411;"	d
GL_ITALIC_BIT_NV	.\glcorearb.h	5441;"	d
GL_KEEP	.\glcorearb.h	226;"	d
GL_KHR_blend_equation_advanced	.\glcorearb.h	3831;"	d
GL_KHR_blend_equation_advanced_coherent	.\glcorearb.h	3854;"	d
GL_KHR_context_flush_control	.\glcorearb.h	3859;"	d
GL_KHR_debug	.\glcorearb.h	3863;"	d
GL_KHR_no_error	.\glcorearb.h	3867;"	d
GL_KHR_parallel_shader_compile	.\glcorearb.h	3872;"	d
GL_KHR_robust_buffer_access_behavior	.\glcorearb.h	3882;"	d
GL_KHR_robustness	.\glcorearb.h	3886;"	d
GL_KHR_shader_subgroup	.\glcorearb.h	3891;"	d
GL_KHR_texture_compression_astc_hdr	.\glcorearb.h	3907;"	d
GL_KHR_texture_compression_astc_ldr	.\glcorearb.h	3939;"	d
GL_KHR_texture_compression_astc_sliced_3d	.\glcorearb.h	3943;"	d
GL_LARGE_CCW_ARC_TO_NV	.\glcorearb.h	5427;"	d
GL_LARGE_CW_ARC_TO_NV	.\glcorearb.h	5429;"	d
GL_LAST_VERTEX_CONVENTION	.\glcorearb.h	1507;"	d
GL_LAYER_PROVOKING_VERTEX	.\glcorearb.h	1875;"	d
GL_LEFT	.\glcorearb.h	111;"	d
GL_LEQUAL	.\glcorearb.h	88;"	d
GL_LESS	.\glcorearb.h	86;"	d
GL_LIGHTEN_KHR	.\glcorearb.h	3836;"	d
GL_LIGHTEN_NV	.\glcorearb.h	4854;"	d
GL_LINE	.\glcorearb.h	224;"	d
GL_LINEAR	.\glcorearb.h	235;"	d
GL_LINEARBURN_NV	.\glcorearb.h	4855;"	d
GL_LINEARDODGE_NV	.\glcorearb.h	4856;"	d
GL_LINEARLIGHT_NV	.\glcorearb.h	4857;"	d
GL_LINEAR_MIPMAP_LINEAR	.\glcorearb.h	239;"	d
GL_LINEAR_MIPMAP_NEAREST	.\glcorearb.h	237;"	d
GL_LINES	.\glcorearb.h	78;"	d
GL_LINES_ADJACENCY	.\glcorearb.h	1484;"	d
GL_LINES_ADJACENCY_ARB	.\glcorearb.h	3144;"	d
GL_LINE_LOOP	.\glcorearb.h	79;"	d
GL_LINE_SMOOTH	.\glcorearb.h	124;"	d
GL_LINE_SMOOTH_HINT	.\glcorearb.h	161;"	d
GL_LINE_STRIP	.\glcorearb.h	80;"	d
GL_LINE_STRIP_ADJACENCY	.\glcorearb.h	1485;"	d
GL_LINE_STRIP_ADJACENCY_ARB	.\glcorearb.h	3145;"	d
GL_LINE_TO_NV	.\glcorearb.h	5409;"	d
GL_LINE_WIDTH	.\glcorearb.h	125;"	d
GL_LINE_WIDTH_COMMAND_NV	.\glcorearb.h	4923;"	d
GL_LINE_WIDTH_GRANULARITY	.\glcorearb.h	127;"	d
GL_LINE_WIDTH_RANGE	.\glcorearb.h	126;"	d
GL_LINK_STATUS	.\glcorearb.h	738;"	d
GL_LOCATION	.\glcorearb.h	2425;"	d
GL_LOCATION_COMPONENT	.\glcorearb.h	2564;"	d
GL_LOCATION_INDEX	.\glcorearb.h	2426;"	d
GL_LOGIC_OP_MODE	.\glcorearb.h	152;"	d
GL_LOSE_CONTEXT_ON_RESET	.\glcorearb.h	2613;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	.\glcorearb.h	3425;"	d
GL_LOWER_LEFT	.\glcorearb.h	751;"	d
GL_LOW_FLOAT	.\glcorearb.h	1846;"	d
GL_LOW_INT	.\glcorearb.h	1849;"	d
GL_MAJOR_VERSION	.\glcorearb.h	993;"	d
GL_MANUAL_GENERATE_MIPMAP	.\glcorearb.h	2320;"	d
GL_MAP_COHERENT_BIT	.\glcorearb.h	2557;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	.\glcorearb.h	1185;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	.\glcorearb.h	1184;"	d
GL_MAP_INVALIDATE_RANGE_BIT	.\glcorearb.h	1183;"	d
GL_MAP_PERSISTENT_BIT	.\glcorearb.h	2556;"	d
GL_MAP_READ_BIT	.\glcorearb.h	1181;"	d
GL_MAP_UNSYNCHRONIZED_BIT	.\glcorearb.h	1186;"	d
GL_MAP_WRITE_BIT	.\glcorearb.h	1182;"	d
GL_MATRIX_STRIDE	.\glcorearb.h	2410;"	d
GL_MAX	.\glcorearb.h	573;"	d
GL_MAX_3D_TEXTURE_SIZE	.\glcorearb.h	428;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	.\glcorearb.h	1005;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	.\glcorearb.h	2099;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	.\glcorearb.h	2098;"	d
GL_MAX_CLIP_DISTANCES	.\glcorearb.h	992;"	d
GL_MAX_COARSE_FRAGMENT_SAMPLES_NV	.\glcorearb.h	5757;"	d
GL_MAX_COLOR_ATTACHMENTS	.\glcorearb.h	1127;"	d
GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD	.\glcorearb.h	3949;"	d
GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD	.\glcorearb.h	3950;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	.\glcorearb.h	1543;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	.\glcorearb.h	2097;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2091;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	.\glcorearb.h	2606;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	.\glcorearb.h	2226;"	d
GL_MAX_COMBINED_DIMENSIONS	.\glcorearb.h	2302;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	.\glcorearb.h	1428;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	.\glcorearb.h	1427;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	.\glcorearb.h	2166;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	.\glcorearb.h	2117;"	d
GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV	.\glcorearb.h	5286;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	.\glcorearb.h	2443;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2438;"	d
GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV	.\glcorearb.h	5294;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	.\glcorearb.h	1734;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	.\glcorearb.h	1735;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	.\glcorearb.h	715;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	.\glcorearb.h	1423;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	.\glcorearb.h	1426;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	.\glcorearb.h	2225;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2224;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	.\glcorearb.h	2992;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	.\glcorearb.h	2994;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	.\glcorearb.h	2221;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2437;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	.\glcorearb.h	2222;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	.\glcorearb.h	2220;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	.\glcorearb.h	2219;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	.\glcorearb.h	2223;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	.\glcorearb.h	2991;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	.\glcorearb.h	2993;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	.\glcorearb.h	2228;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	.\glcorearb.h	2227;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	.\glcorearb.h	2229;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	.\glcorearb.h	514;"	d
GL_MAX_CULL_DISTANCES	.\glcorearb.h	2605;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	.\glcorearb.h	2262;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	.\glcorearb.h	2253;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	.\glcorearb.h	3041;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	.\glcorearb.h	2252;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	.\glcorearb.h	3040;"	d
GL_MAX_DEPTH	.\glcorearb.h	2300;"	d
GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD	.\glcorearb.h	3951;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	.\glcorearb.h	1544;"	d
GL_MAX_DETACHED_BUFFERS_NV	.\glcorearb.h	5244;"	d
GL_MAX_DETACHED_TEXTURES_NV	.\glcorearb.h	5243;"	d
GL_MAX_DRAW_BUFFERS	.\glcorearb.h	688;"	d
GL_MAX_DRAW_MESH_TASKS_COUNT_NV	.\glcorearb.h	5302;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	.\glcorearb.h	1594;"	d
GL_MAX_ELEMENTS_INDICES	.\glcorearb.h	439;"	d
GL_MAX_ELEMENTS_VERTICES	.\glcorearb.h	438;"	d
GL_MAX_ELEMENT_INDEX	.\glcorearb.h	2217;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	.\glcorearb.h	2096;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2090;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	.\glcorearb.h	2165;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	.\glcorearb.h	1502;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	.\glcorearb.h	1684;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2436;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	.\glcorearb.h	1422;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	.\glcorearb.h	711;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	.\glcorearb.h	1857;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	.\glcorearb.h	2280;"	d
GL_MAX_FRAMEBUFFER_LAYERS	.\glcorearb.h	2281;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	.\glcorearb.h	2282;"	d
GL_MAX_FRAMEBUFFER_WIDTH	.\glcorearb.h	2279;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	.\glcorearb.h	2095;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2089;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	.\glcorearb.h	2164;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	.\glcorearb.h	1500;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	.\glcorearb.h	1501;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	.\glcorearb.h	1497;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	.\glcorearb.h	3160;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	.\glcorearb.h	1682;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2433;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	.\glcorearb.h	1489;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	.\glcorearb.h	3149;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	.\glcorearb.h	1498;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	.\glcorearb.h	3161;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	.\glcorearb.h	1421;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	.\glcorearb.h	1496;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	.\glcorearb.h	3159;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	.\glcorearb.h	3157;"	d
GL_MAX_HEIGHT	.\glcorearb.h	2299;"	d
GL_MAX_IMAGE_SAMPLES	.\glcorearb.h	2156;"	d
GL_MAX_IMAGE_UNITS	.\glcorearb.h	2116;"	d
GL_MAX_INTEGER_SAMPLES	.\glcorearb.h	1545;"	d
GL_MAX_LABEL_LENGTH	.\glcorearb.h	2270;"	d
GL_MAX_LAYERS	.\glcorearb.h	2301;"	d
GL_MAX_MESH_ATOMIC_COUNTERS_NV	.\glcorearb.h	5284;"	d
GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV	.\glcorearb.h	5283;"	d
GL_MAX_MESH_IMAGE_UNIFORMS_NV	.\glcorearb.h	5281;"	d
GL_MAX_MESH_OUTPUT_PRIMITIVES_NV	.\glcorearb.h	5300;"	d
GL_MAX_MESH_OUTPUT_VERTICES_NV	.\glcorearb.h	5299;"	d
GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV	.\glcorearb.h	5285;"	d
GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV	.\glcorearb.h	5280;"	d
GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV	.\glcorearb.h	5297;"	d
GL_MAX_MESH_UNIFORM_BLOCKS_NV	.\glcorearb.h	5279;"	d
GL_MAX_MESH_UNIFORM_COMPONENTS_NV	.\glcorearb.h	5282;"	d
GL_MAX_MESH_VIEWS_NV	.\glcorearb.h	5303;"	d
GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV	.\glcorearb.h	5295;"	d
GL_MAX_MESH_WORK_GROUP_SIZE_NV	.\glcorearb.h	5306;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	.\glcorearb.h	5108;"	d
GL_MAX_NAME_LENGTH	.\glcorearb.h	2401;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	.\glcorearb.h	2402;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	.\glcorearb.h	2403;"	d
GL_MAX_PATCH_VERTICES	.\glcorearb.h	1720;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	.\glcorearb.h	1007;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	.\glcorearb.h	3714;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	.\glcorearb.h	1671;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	.\glcorearb.h	3713;"	d
GL_MAX_RASTER_SAMPLES_EXT	.\glcorearb.h	4606;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	.\glcorearb.h	1402;"	d
GL_MAX_RENDERBUFFER_SIZE	.\glcorearb.h	1098;"	d
GL_MAX_SAMPLES	.\glcorearb.h	1178;"	d
GL_MAX_SAMPLE_MASK_WORDS	.\glcorearb.h	1528;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	.\glcorearb.h	1510;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	.\glcorearb.h	5680;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	.\glcorearb.h	3368;"	d
GL_MAX_SHADER_COMPILER_THREADS_KHR	.\glcorearb.h	3873;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	.\glcorearb.h	2440;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	.\glcorearb.h	2439;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	.\glcorearb.h	3614;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	.\glcorearb.h	3615;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	.\glcorearb.h	3613;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	.\glcorearb.h	4990;"	d
GL_MAX_SUBROUTINES	.\glcorearb.h	1704;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	.\glcorearb.h	1705;"	d
GL_MAX_TASK_ATOMIC_COUNTERS_NV	.\glcorearb.h	5292;"	d
GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV	.\glcorearb.h	5291;"	d
GL_MAX_TASK_IMAGE_UNIFORMS_NV	.\glcorearb.h	5289;"	d
GL_MAX_TASK_OUTPUT_COUNT_NV	.\glcorearb.h	5301;"	d
GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV	.\glcorearb.h	5293;"	d
GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV	.\glcorearb.h	5288;"	d
GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV	.\glcorearb.h	5298;"	d
GL_MAX_TASK_UNIFORM_BLOCKS_NV	.\glcorearb.h	5287;"	d
GL_MAX_TASK_UNIFORM_COMPONENTS_NV	.\glcorearb.h	5290;"	d
GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV	.\glcorearb.h	5296;"	d
GL_MAX_TASK_WORK_GROUP_SIZE_NV	.\glcorearb.h	5307;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	.\glcorearb.h	2093;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2087;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	.\glcorearb.h	2162;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	.\glcorearb.h	1732;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	.\glcorearb.h	1726;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2434;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	.\glcorearb.h	1724;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	.\glcorearb.h	1728;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	.\glcorearb.h	1730;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	.\glcorearb.h	1722;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	.\glcorearb.h	2094;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2088;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	.\glcorearb.h	2163;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	.\glcorearb.h	1733;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	.\glcorearb.h	1729;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2435;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	.\glcorearb.h	1725;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	.\glcorearb.h	1731;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	.\glcorearb.h	1723;"	d
GL_MAX_TESS_GEN_LEVEL	.\glcorearb.h	1721;"	d
GL_MAX_TESS_PATCH_COMPONENTS	.\glcorearb.h	1727;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	.\glcorearb.h	1396;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	.\glcorearb.h	3659;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	.\glcorearb.h	708;"	d
GL_MAX_TEXTURE_LOD_BIAS	.\glcorearb.h	556;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY	.\glcorearb.h	2863;"	d
GL_MAX_TEXTURE_SIZE	.\glcorearb.h	175;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	.\glcorearb.h	1744;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	.\glcorearb.h	1031;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	.\glcorearb.h	1032;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	.\glcorearb.h	1024;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	.\glcorearb.h	1425;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	.\glcorearb.h	1424;"	d
GL_MAX_UNIFORM_LOCATIONS	.\glcorearb.h	2273;"	d
GL_MAX_VARYING_COMPONENTS	.\glcorearb.h	1010;"	d
GL_MAX_VARYING_FLOATS	.\glcorearb.h	713;"	d
GL_MAX_VARYING_VECTORS	.\glcorearb.h	1856;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	.\glcorearb.h	2092;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	.\glcorearb.h	2086;"	d
GL_MAX_VERTEX_ATTRIBS	.\glcorearb.h	706;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	.\glcorearb.h	2459;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	.\glcorearb.h	2458;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	.\glcorearb.h	2553;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	.\glcorearb.h	2161;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	.\glcorearb.h	1499;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	.\glcorearb.h	2432;"	d
GL_MAX_VERTEX_STREAMS	.\glcorearb.h	1686;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	.\glcorearb.h	714;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	.\glcorearb.h	1420;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	.\glcorearb.h	712;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	.\glcorearb.h	1855;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	.\glcorearb.h	3158;"	d
GL_MAX_VIEWPORTS	.\glcorearb.h	1872;"	d
GL_MAX_VIEWPORT_DIMS	.\glcorearb.h	176;"	d
GL_MAX_VIEWS_OVR	.\glcorearb.h	5929;"	d
GL_MAX_WIDTH	.\glcorearb.h	2298;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	.\glcorearb.h	4682;"	d
GL_MEDIUM_FLOAT	.\glcorearb.h	1847;"	d
GL_MEDIUM_INT	.\glcorearb.h	1850;"	d
GL_MEMORY_ATTACHABLE_ALIGNMENT_NV	.\glcorearb.h	5237;"	d
GL_MEMORY_ATTACHABLE_NV	.\glcorearb.h	5239;"	d
GL_MEMORY_ATTACHABLE_SIZE_NV	.\glcorearb.h	5238;"	d
GL_MESA_framebuffer_flip_x	.\glcorearb.h	4755;"	d
GL_MESA_framebuffer_flip_y	.\glcorearb.h	4760;"	d
GL_MESA_framebuffer_swap_xy	.\glcorearb.h	4771;"	d
GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV	.\glcorearb.h	5305;"	d
GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV	.\glcorearb.h	5304;"	d
GL_MESH_OUTPUT_TYPE_NV	.\glcorearb.h	5312;"	d
GL_MESH_PRIMITIVES_OUT_NV	.\glcorearb.h	5311;"	d
GL_MESH_SHADER_BIT_NV	.\glcorearb.h	5317;"	d
GL_MESH_SHADER_NV	.\glcorearb.h	5277;"	d
GL_MESH_SUBROUTINE_NV	.\glcorearb.h	5319;"	d
GL_MESH_SUBROUTINE_UNIFORM_NV	.\glcorearb.h	5321;"	d
GL_MESH_VERTICES_OUT_NV	.\glcorearb.h	5310;"	d
GL_MESH_WORK_GROUP_SIZE_NV	.\glcorearb.h	5308;"	d
GL_MIN	.\glcorearb.h	572;"	d
GL_MINOR_VERSION	.\glcorearb.h	994;"	d
GL_MINUS_CLAMPED_NV	.\glcorearb.h	4858;"	d
GL_MINUS_NV	.\glcorearb.h	4859;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	.\glcorearb.h	1683;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	.\glcorearb.h	2073;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	.\glcorearb.h	1006;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	.\glcorearb.h	1670;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	.\glcorearb.h	3712;"	d
GL_MIN_SAMPLE_SHADING_VALUE	.\glcorearb.h	1669;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	.\glcorearb.h	3478;"	d
GL_MIPMAP	.\glcorearb.h	2319;"	d
GL_MIRRORED_REPEAT	.\glcorearb.h	555;"	d
GL_MIRRORED_REPEAT_ARB	.\glcorearb.h	3723;"	d
GL_MIRROR_CLAMP_TO_EDGE	.\glcorearb.h	2571;"	d
GL_MITER_REVERT_NV	.\glcorearb.h	5386;"	d
GL_MITER_TRUNCATE_NV	.\glcorearb.h	5387;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	.\glcorearb.h	5090;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	.\glcorearb.h	5091;"	d
GL_MOVE_TO_CONTINUES_NV	.\glcorearb.h	5405;"	d
GL_MOVE_TO_NV	.\glcorearb.h	5407;"	d
GL_MOVE_TO_RESETS_NV	.\glcorearb.h	5404;"	d
GL_MULTIPLY_KHR	.\glcorearb.h	3832;"	d
GL_MULTIPLY_NV	.\glcorearb.h	4860;"	d
GL_MULTISAMPLE	.\glcorearb.h	497;"	d
GL_MULTISAMPLES_NV	.\glcorearb.h	5223;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	.\glcorearb.h	5109;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	.\glcorearb.h	2890;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	.\glcorearb.h	2889;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	.\glcorearb.h	4608;"	d
GL_NAMED_STRING_LENGTH_ARB	.\glcorearb.h	3568;"	d
GL_NAMED_STRING_TYPE_ARB	.\glcorearb.h	3569;"	d
GL_NAME_LENGTH	.\glcorearb.h	2404;"	d
GL_NAND	.\glcorearb.h	209;"	d
GL_NEAREST	.\glcorearb.h	234;"	d
GL_NEAREST_MIPMAP_LINEAR	.\glcorearb.h	238;"	d
GL_NEAREST_MIPMAP_NEAREST	.\glcorearb.h	236;"	d
GL_NEGATIVE_ONE_TO_ONE	.\glcorearb.h	2597;"	d
GL_NEVER	.\glcorearb.h	85;"	d
GL_NICEST	.\glcorearb.h	185;"	d
GL_NONE	.\glcorearb.h	104;"	d
GL_NOOP	.\glcorearb.h	200;"	d
GL_NOP_COMMAND_NV	.\glcorearb.h	4911;"	d
GL_NOR	.\glcorearb.h	203;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	.\glcorearb.h	5852;"	d
GL_NORMAL_ARRAY_LENGTH_NV	.\glcorearb.h	5862;"	d
GL_NOTEQUAL	.\glcorearb.h	90;"	d
GL_NO_ERROR	.\glcorearb.h	114;"	d
GL_NO_RESET_NOTIFICATION	.\glcorearb.h	2614;"	d
GL_NO_RESET_NOTIFICATION_ARB	.\glcorearb.h	3430;"	d
GL_NUM_ACTIVE_VARIABLES	.\glcorearb.h	2415;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	.\glcorearb.h	1706;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	.\glcorearb.h	520;"	d
GL_NUM_EXTENSIONS	.\glcorearb.h	995;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	.\glcorearb.h	1861;"	d
GL_NUM_SAMPLE_COUNTS	.\glcorearb.h	2072;"	d
GL_NUM_SHADER_BINARY_FORMATS	.\glcorearb.h	1854;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	.\glcorearb.h	2203;"	d
GL_NUM_SPARSE_LEVELS_ARB	.\glcorearb.h	3608;"	d
GL_NUM_SPIR_V_EXTENSIONS	.\glcorearb.h	2861;"	d
GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD	.\glcorearb.h	3952;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	.\glcorearb.h	3609;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	.\glcorearb.h	4683;"	d
GL_NV_bindless_multi_draw_indirect	.\glcorearb.h	4776;"	d
GL_NV_bindless_multi_draw_indirect_count	.\glcorearb.h	4786;"	d
GL_NV_bindless_texture	.\glcorearb.h	4796;"	d
GL_NV_blend_equation_advanced	.\glcorearb.h	4828;"	d
GL_NV_blend_equation_advanced_coherent	.\glcorearb.h	4887;"	d
GL_NV_blend_minmax_factor	.\glcorearb.h	4892;"	d
GL_NV_clip_space_w_scaling	.\glcorearb.h	4898;"	d
GL_NV_command_list	.\glcorearb.h	4909;"	d
GL_NV_compute_shader_derivatives	.\glcorearb.h	4968;"	d
GL_NV_conditional_render	.\glcorearb.h	4972;"	d
GL_NV_conservative_raster	.\glcorearb.h	4986;"	d
GL_NV_conservative_raster_dilate	.\glcorearb.h	4998;"	d
GL_NV_conservative_raster_pre_snap	.\glcorearb.h	5009;"	d
GL_NV_conservative_raster_pre_snap_triangles	.\glcorearb.h	5014;"	d
GL_NV_conservative_raster_underestimation	.\glcorearb.h	5025;"	d
GL_NV_depth_buffer_float	.\glcorearb.h	5029;"	d
GL_NV_draw_vulkan_image	.\glcorearb.h	5045;"	d
GL_NV_fill_rectangle	.\glcorearb.h	5062;"	d
GL_NV_fragment_coverage_to_color	.\glcorearb.h	5067;"	d
GL_NV_fragment_shader_barycentric	.\glcorearb.h	5077;"	d
GL_NV_fragment_shader_interlock	.\glcorearb.h	5081;"	d
GL_NV_framebuffer_mixed_samples	.\glcorearb.h	5085;"	d
GL_NV_framebuffer_multisample_coverage	.\glcorearb.h	5105;"	d
GL_NV_geometry_shader_passthrough	.\glcorearb.h	5117;"	d
GL_NV_gpu_shader5	.\glcorearb.h	5121;"	d
GL_NV_internalformat_sample_query	.\glcorearb.h	5222;"	d
GL_NV_memory_attachment	.\glcorearb.h	5234;"	d
GL_NV_memory_object_sparse	.\glcorearb.h	5262;"	d
GL_NV_mesh_shader	.\glcorearb.h	5276;"	d
GL_NV_path_rendering	.\glcorearb.h	5338;"	d
GL_NV_path_rendering_shared_edge	.\glcorearb.h	5611;"	d
GL_NV_representative_fragment_test	.\glcorearb.h	5616;"	d
GL_NV_sample_locations	.\glcorearb.h	5621;"	d
GL_NV_sample_mask_override_coverage	.\glcorearb.h	5641;"	d
GL_NV_scissor_exclusive	.\glcorearb.h	5645;"	d
GL_NV_shader_atomic_counters	.\glcorearb.h	5657;"	d
GL_NV_shader_atomic_float	.\glcorearb.h	5661;"	d
GL_NV_shader_atomic_float64	.\glcorearb.h	5665;"	d
GL_NV_shader_atomic_fp16_vector	.\glcorearb.h	5669;"	d
GL_NV_shader_atomic_int64	.\glcorearb.h	5673;"	d
GL_NV_shader_buffer_load	.\glcorearb.h	5677;"	d
GL_NV_shader_buffer_store	.\glcorearb.h	5714;"	d
GL_NV_shader_subgroup_partitioned	.\glcorearb.h	5719;"	d
GL_NV_shader_texture_footprint	.\glcorearb.h	5724;"	d
GL_NV_shader_thread_group	.\glcorearb.h	5728;"	d
GL_NV_shader_thread_shuffle	.\glcorearb.h	5735;"	d
GL_NV_shading_rate_image	.\glcorearb.h	5739;"	d
GL_NV_stereo_view_rendering	.\glcorearb.h	5780;"	d
GL_NV_texture_barrier	.\glcorearb.h	5784;"	d
GL_NV_texture_rectangle_compressed	.\glcorearb.h	5792;"	d
GL_NV_uniform_buffer_unified_memory	.\glcorearb.h	5796;"	d
GL_NV_vertex_attrib_integer_64bit	.\glcorearb.h	5803;"	d
GL_NV_vertex_buffer_unified_memory	.\glcorearb.h	5847;"	d
GL_NV_viewport_array2	.\glcorearb.h	5902;"	d
GL_NV_viewport_swizzle	.\glcorearb.h	5906;"	d
GL_OBJECT_TYPE	.\glcorearb.h	1511;"	d
GL_OFFSET	.\glcorearb.h	2407;"	d
GL_ONE	.\glcorearb.h	94;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	.\glcorearb.h	568;"	d
GL_ONE_MINUS_CONSTANT_COLOR	.\glcorearb.h	566;"	d
GL_ONE_MINUS_DST_ALPHA	.\glcorearb.h	100;"	d
GL_ONE_MINUS_DST_COLOR	.\glcorearb.h	102;"	d
GL_ONE_MINUS_SRC1_ALPHA	.\glcorearb.h	1593;"	d
GL_ONE_MINUS_SRC1_COLOR	.\glcorearb.h	1592;"	d
GL_ONE_MINUS_SRC_ALPHA	.\glcorearb.h	98;"	d
GL_ONE_MINUS_SRC_COLOR	.\glcorearb.h	96;"	d
GL_OR	.\glcorearb.h	202;"	d
GL_OR_INVERTED	.\glcorearb.h	208;"	d
GL_OR_REVERSE	.\glcorearb.h	206;"	d
GL_OUT_OF_MEMORY	.\glcorearb.h	118;"	d
GL_OVERLAY_KHR	.\glcorearb.h	3834;"	d
GL_OVERLAY_NV	.\glcorearb.h	4861;"	d
GL_OVR_multiview	.\glcorearb.h	5926;"	d
GL_OVR_multiview2	.\glcorearb.h	5938;"	d
GL_PACK_ALIGNMENT	.\glcorearb.h	174;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	.\glcorearb.h	2070;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	.\glcorearb.h	2069;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	.\glcorearb.h	2071;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	.\glcorearb.h	2068;"	d
GL_PACK_IMAGE_HEIGHT	.\glcorearb.h	421;"	d
GL_PACK_LSB_FIRST	.\glcorearb.h	170;"	d
GL_PACK_ROW_LENGTH	.\glcorearb.h	171;"	d
GL_PACK_SKIP_IMAGES	.\glcorearb.h	420;"	d
GL_PACK_SKIP_PIXELS	.\glcorearb.h	173;"	d
GL_PACK_SKIP_ROWS	.\glcorearb.h	172;"	d
GL_PACK_SWAP_BYTES	.\glcorearb.h	169;"	d
GL_PARAMETER_BUFFER	.\glcorearb.h	2846;"	d
GL_PARAMETER_BUFFER_ARB	.\glcorearb.h	3295;"	d
GL_PARAMETER_BUFFER_BINDING	.\glcorearb.h	2847;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	.\glcorearb.h	3296;"	d
GL_PATCHES	.\glcorearb.h	1708;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	.\glcorearb.h	1710;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	.\glcorearb.h	1711;"	d
GL_PATCH_VERTICES	.\glcorearb.h	1709;"	d
GL_PATH_CLIENT_LENGTH_NV	.\glcorearb.h	5354;"	d
GL_PATH_COMMAND_COUNT_NV	.\glcorearb.h	5376;"	d
GL_PATH_COMPUTED_LENGTH_NV	.\glcorearb.h	5379;"	d
GL_PATH_COORD_COUNT_NV	.\glcorearb.h	5377;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	.\glcorearb.h	5402;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	.\glcorearb.h	5378;"	d
GL_PATH_DASH_CAPS_NV	.\glcorearb.h	5350;"	d
GL_PATH_DASH_OFFSET_NV	.\glcorearb.h	5353;"	d
GL_PATH_DASH_OFFSET_RESET_NV	.\glcorearb.h	5403;"	d
GL_PATH_END_CAPS_NV	.\glcorearb.h	5345;"	d
GL_PATH_ERROR_POSITION_NV	.\glcorearb.h	5390;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	.\glcorearb.h	5380;"	d
GL_PATH_FILL_COVER_MODE_NV	.\glcorearb.h	5357;"	d
GL_PATH_FILL_MASK_NV	.\glcorearb.h	5356;"	d
GL_PATH_FILL_MODE_NV	.\glcorearb.h	5355;"	d
GL_PATH_FORMAT_PS_NV	.\glcorearb.h	5340;"	d
GL_PATH_FORMAT_SVG_NV	.\glcorearb.h	5339;"	d
GL_PATH_GEN_COEFF_NV	.\glcorearb.h	5395;"	d
GL_PATH_GEN_COMPONENTS_NV	.\glcorearb.h	5396;"	d
GL_PATH_GEN_MODE_NV	.\glcorearb.h	5394;"	d
GL_PATH_INITIAL_DASH_CAP_NV	.\glcorearb.h	5351;"	d
GL_PATH_INITIAL_END_CAP_NV	.\glcorearb.h	5346;"	d
GL_PATH_JOIN_STYLE_NV	.\glcorearb.h	5348;"	d
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV	.\glcorearb.h	5485;"	d
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV	.\glcorearb.h	5489;"	d
GL_PATH_MITER_LIMIT_NV	.\glcorearb.h	5349;"	d
GL_PATH_MODELVIEW_MATRIX_NV	.\glcorearb.h	5484;"	d
GL_PATH_MODELVIEW_NV	.\glcorearb.h	5482;"	d
GL_PATH_MODELVIEW_STACK_DEPTH_NV	.\glcorearb.h	5483;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	.\glcorearb.h	5362;"	d
GL_PATH_PROJECTION_MATRIX_NV	.\glcorearb.h	5488;"	d
GL_PATH_PROJECTION_NV	.\glcorearb.h	5481;"	d
GL_PATH_PROJECTION_STACK_DEPTH_NV	.\glcorearb.h	5487;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	.\glcorearb.h	5400;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	.\glcorearb.h	5401;"	d
GL_PATH_STENCIL_FUNC_NV	.\glcorearb.h	5397;"	d
GL_PATH_STENCIL_REF_NV	.\glcorearb.h	5398;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	.\glcorearb.h	5399;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	.\glcorearb.h	5381;"	d
GL_PATH_STROKE_COVER_MODE_NV	.\glcorearb.h	5358;"	d
GL_PATH_STROKE_MASK_NV	.\glcorearb.h	5359;"	d
GL_PATH_STROKE_WIDTH_NV	.\glcorearb.h	5344;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	.\glcorearb.h	5352;"	d
GL_PATH_TERMINAL_END_CAP_NV	.\glcorearb.h	5347;"	d
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV	.\glcorearb.h	5486;"	d
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV	.\glcorearb.h	5490;"	d
GL_PERCENTAGE_AMD	.\glcorearb.h	3967;"	d
GL_PERFMON_RESULT_AMD	.\glcorearb.h	3970;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	.\glcorearb.h	3968;"	d
GL_PERFMON_RESULT_SIZE_AMD	.\glcorearb.h	3969;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	.\glcorearb.h	4725;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	.\glcorearb.h	4724;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	.\glcorearb.h	4723;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	.\glcorearb.h	4721;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	.\glcorearb.h	4722;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	.\glcorearb.h	4728;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	.\glcorearb.h	4716;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	.\glcorearb.h	4717;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	.\glcorearb.h	4715;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	.\glcorearb.h	4727;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	.\glcorearb.h	4719;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	.\glcorearb.h	4718;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	.\glcorearb.h	4720;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	.\glcorearb.h	4714;"	d
GL_PERFQUERY_FLUSH_INTEL	.\glcorearb.h	4713;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	.\glcorearb.h	4711;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	.\glcorearb.h	4729;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	.\glcorearb.h	4726;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	.\glcorearb.h	4710;"	d
GL_PERFQUERY_WAIT_INTEL	.\glcorearb.h	4712;"	d
GL_PINLIGHT_NV	.\glcorearb.h	4862;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	.\glcorearb.h	2109;"	d
GL_PIXEL_PACK_BUFFER	.\glcorearb.h	948;"	d
GL_PIXEL_PACK_BUFFER_ARB	.\glcorearb.h	3392;"	d
GL_PIXEL_PACK_BUFFER_BINDING	.\glcorearb.h	950;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	.\glcorearb.h	3394;"	d
GL_PIXEL_UNPACK_BUFFER	.\glcorearb.h	949;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	.\glcorearb.h	3393;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	.\glcorearb.h	951;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	.\glcorearb.h	3395;"	d
GL_PLUS_CLAMPED_ALPHA_NV	.\glcorearb.h	4863;"	d
GL_PLUS_CLAMPED_NV	.\glcorearb.h	4864;"	d
GL_PLUS_DARKER_NV	.\glcorearb.h	4865;"	d
GL_PLUS_NV	.\glcorearb.h	4866;"	d
GL_POINT	.\glcorearb.h	223;"	d
GL_POINTS	.\glcorearb.h	77;"	d
GL_POINT_FADE_THRESHOLD_SIZE	.\glcorearb.h	551;"	d
GL_POINT_SIZE	.\glcorearb.h	121;"	d
GL_POINT_SIZE_GRANULARITY	.\glcorearb.h	123;"	d
GL_POINT_SIZE_RANGE	.\glcorearb.h	122;"	d
GL_POINT_SPRITE_COORD_ORIGIN	.\glcorearb.h	750;"	d
GL_POLYGON_MODE	.\glcorearb.h	128;"	d
GL_POLYGON_OFFSET_CLAMP	.\glcorearb.h	2859;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	.\glcorearb.h	4591;"	d
GL_POLYGON_OFFSET_COMMAND_NV	.\glcorearb.h	4924;"	d
GL_POLYGON_OFFSET_FACTOR	.\glcorearb.h	354;"	d
GL_POLYGON_OFFSET_FILL	.\glcorearb.h	353;"	d
GL_POLYGON_OFFSET_LINE	.\glcorearb.h	352;"	d
GL_POLYGON_OFFSET_POINT	.\glcorearb.h	351;"	d
GL_POLYGON_OFFSET_UNITS	.\glcorearb.h	350;"	d
GL_POLYGON_SMOOTH	.\glcorearb.h	129;"	d
GL_POLYGON_SMOOTH_HINT	.\glcorearb.h	162;"	d
GL_PRIMITIVES_GENERATED	.\glcorearb.h	1028;"	d
GL_PRIMITIVES_SUBMITTED	.\glcorearb.h	2850;"	d
GL_PRIMITIVES_SUBMITTED_ARB	.\glcorearb.h	3379;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	.\glcorearb.h	2888;"	d
GL_PRIMITIVE_RESTART	.\glcorearb.h	1412;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	.\glcorearb.h	2215;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	.\glcorearb.h	2554;"	d
GL_PRIMITIVE_RESTART_INDEX	.\glcorearb.h	1413;"	d
GL_PROGRAM	.\glcorearb.h	2266;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	.\glcorearb.h	3462;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	.\glcorearb.h	5627;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	.\glcorearb.h	3460;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	.\glcorearb.h	5625;"	d
GL_PROGRAM_BINARY_FORMATS	.\glcorearb.h	1862;"	d
GL_PROGRAM_BINARY_LENGTH	.\glcorearb.h	1860;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	.\glcorearb.h	1859;"	d
GL_PROGRAM_INPUT	.\glcorearb.h	2383;"	d
GL_PROGRAM_MATRIX_EXT	.\glcorearb.h	4050;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	.\glcorearb.h	4052;"	d
GL_PROGRAM_OBJECT_EXT	.\glcorearb.h	4023;"	d
GL_PROGRAM_OUTPUT	.\glcorearb.h	2384;"	d
GL_PROGRAM_PIPELINE	.\glcorearb.h	2268;"	d
GL_PROGRAM_PIPELINE_BINDING	.\glcorearb.h	1871;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	.\glcorearb.h	4022;"	d
GL_PROGRAM_POINT_SIZE	.\glcorearb.h	1488;"	d
GL_PROGRAM_POINT_SIZE_ARB	.\glcorearb.h	3148;"	d
GL_PROGRAM_SEPARABLE	.\glcorearb.h	1869;"	d
GL_PROVOKING_VERTEX	.\glcorearb.h	1508;"	d
GL_PROXY_TEXTURE_1D	.\glcorearb.h	363;"	d
GL_PROXY_TEXTURE_1D_ARRAY	.\glcorearb.h	1012;"	d
GL_PROXY_TEXTURE_2D	.\glcorearb.h	364;"	d
GL_PROXY_TEXTURE_2D_ARRAY	.\glcorearb.h	1014;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	.\glcorearb.h	1530;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	1532;"	d
GL_PROXY_TEXTURE_3D	.\glcorearb.h	425;"	d
GL_PROXY_TEXTURE_CUBE_MAP	.\glcorearb.h	513;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	.\glcorearb.h	1674;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	.\glcorearb.h	3693;"	d
GL_PROXY_TEXTURE_RECTANGLE	.\glcorearb.h	1401;"	d
GL_QUADRATIC_CURVE_TO_NV	.\glcorearb.h	5415;"	d
GL_QUADS	.\glcorearb.h	84;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	.\glcorearb.h	1505;"	d
GL_QUERY	.\glcorearb.h	2267;"	d
GL_QUERY_BUFFER	.\glcorearb.h	2567;"	d
GL_QUERY_BUFFER_BARRIER_BIT	.\glcorearb.h	2568;"	d
GL_QUERY_BUFFER_BINDING	.\glcorearb.h	2569;"	d
GL_QUERY_BY_REGION_NO_WAIT	.\glcorearb.h	1079;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	.\glcorearb.h	2604;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	.\glcorearb.h	4976;"	d
GL_QUERY_BY_REGION_WAIT	.\glcorearb.h	1078;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	.\glcorearb.h	2603;"	d
GL_QUERY_BY_REGION_WAIT_NV	.\glcorearb.h	4975;"	d
GL_QUERY_COUNTER_BITS	.\glcorearb.h	602;"	d
GL_QUERY_NO_WAIT	.\glcorearb.h	1077;"	d
GL_QUERY_NO_WAIT_INVERTED	.\glcorearb.h	2602;"	d
GL_QUERY_NO_WAIT_NV	.\glcorearb.h	4974;"	d
GL_QUERY_OBJECT_EXT	.\glcorearb.h	4026;"	d
GL_QUERY_RESULT	.\glcorearb.h	604;"	d
GL_QUERY_RESULT_AVAILABLE	.\glcorearb.h	605;"	d
GL_QUERY_RESULT_NO_WAIT	.\glcorearb.h	2570;"	d
GL_QUERY_TARGET	.\glcorearb.h	2608;"	d
GL_QUERY_WAIT	.\glcorearb.h	1076;"	d
GL_QUERY_WAIT_INVERTED	.\glcorearb.h	2601;"	d
GL_QUERY_WAIT_NV	.\glcorearb.h	4973;"	d
GL_R11F_G11F_B10F	.\glcorearb.h	1017;"	d
GL_R16	.\glcorearb.h	1194;"	d
GL_R16F	.\glcorearb.h	1197;"	d
GL_R16I	.\glcorearb.h	1203;"	d
GL_R16UI	.\glcorearb.h	1204;"	d
GL_R16_SNORM	.\glcorearb.h	1407;"	d
GL_R32F	.\glcorearb.h	1198;"	d
GL_R32I	.\glcorearb.h	1205;"	d
GL_R32UI	.\glcorearb.h	1206;"	d
GL_R3_G3_B2	.\glcorearb.h	365;"	d
GL_R8	.\glcorearb.h	1193;"	d
GL_R8I	.\glcorearb.h	1201;"	d
GL_R8UI	.\glcorearb.h	1202;"	d
GL_R8_SNORM	.\glcorearb.h	1403;"	d
GL_RASTERIZER_DISCARD	.\glcorearb.h	1030;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	.\glcorearb.h	4607;"	d
GL_RASTER_MULTISAMPLE_EXT	.\glcorearb.h	4604;"	d
GL_RASTER_SAMPLES_EXT	.\glcorearb.h	4605;"	d
GL_READ_BUFFER	.\glcorearb.h	154;"	d
GL_READ_FRAMEBUFFER	.\glcorearb.h	1112;"	d
GL_READ_FRAMEBUFFER_BINDING	.\glcorearb.h	1114;"	d
GL_READ_ONLY	.\glcorearb.h	611;"	d
GL_READ_PIXELS	.\glcorearb.h	2312;"	d
GL_READ_PIXELS_FORMAT	.\glcorearb.h	2313;"	d
GL_READ_PIXELS_TYPE	.\glcorearb.h	2314;"	d
GL_READ_WRITE	.\glcorearb.h	613;"	d
GL_RECT_NV	.\glcorearb.h	5434;"	d
GL_RED	.\glcorearb.h	217;"	d
GL_RED_INTEGER	.\glcorearb.h	1049;"	d
GL_RED_NV	.\glcorearb.h	4867;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	.\glcorearb.h	2422;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	.\glcorearb.h	2421;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	.\glcorearb.h	2420;"	d
GL_REFERENCED_BY_MESH_SHADER_NV	.\glcorearb.h	5315;"	d
GL_REFERENCED_BY_TASK_SHADER_NV	.\glcorearb.h	5316;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	.\glcorearb.h	2418;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	.\glcorearb.h	2419;"	d
GL_REFERENCED_BY_VERTEX_SHADER	.\glcorearb.h	2417;"	d
GL_RELATIVE_ARC_TO_NV	.\glcorearb.h	5439;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	.\glcorearb.h	5478;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	.\glcorearb.h	5418;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	.\glcorearb.h	5412;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	.\glcorearb.h	5428;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	.\glcorearb.h	5430;"	d
GL_RELATIVE_LINE_TO_NV	.\glcorearb.h	5410;"	d
GL_RELATIVE_MOVE_TO_NV	.\glcorearb.h	5408;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	.\glcorearb.h	5416;"	d
GL_RELATIVE_RECT_NV	.\glcorearb.h	5472;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	.\glcorearb.h	5467;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	.\glcorearb.h	5469;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	.\glcorearb.h	5471;"	d
GL_RELATIVE_ROUNDED_RECT_NV	.\glcorearb.h	5465;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	.\glcorearb.h	5424;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	.\glcorearb.h	5426;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	.\glcorearb.h	5422;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	.\glcorearb.h	5420;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	.\glcorearb.h	5414;"	d
GL_RENDERBUFFER	.\glcorearb.h	1163;"	d
GL_RENDERBUFFER_ALPHA_SIZE	.\glcorearb.h	1174;"	d
GL_RENDERBUFFER_BINDING	.\glcorearb.h	1111;"	d
GL_RENDERBUFFER_BLUE_SIZE	.\glcorearb.h	1173;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	.\glcorearb.h	5107;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	.\glcorearb.h	5106;"	d
GL_RENDERBUFFER_DEPTH_SIZE	.\glcorearb.h	1175;"	d
GL_RENDERBUFFER_GREEN_SIZE	.\glcorearb.h	1172;"	d
GL_RENDERBUFFER_HEIGHT	.\glcorearb.h	1165;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	.\glcorearb.h	1166;"	d
GL_RENDERBUFFER_RED_SIZE	.\glcorearb.h	1171;"	d
GL_RENDERBUFFER_SAMPLES	.\glcorearb.h	1115;"	d
GL_RENDERBUFFER_STENCIL_SIZE	.\glcorearb.h	1176;"	d
GL_RENDERBUFFER_STORAGE_SAMPLES_AMD	.\glcorearb.h	3948;"	d
GL_RENDERBUFFER_WIDTH	.\glcorearb.h	1164;"	d
GL_RENDERER	.\glcorearb.h	231;"	d
GL_REPEAT	.\glcorearb.h	244;"	d
GL_REPLACE	.\glcorearb.h	227;"	d
GL_REPRESENTATIVE_FRAGMENT_TEST_NV	.\glcorearb.h	5617;"	d
GL_RESET_NOTIFICATION_STRATEGY	.\glcorearb.h	2612;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	.\glcorearb.h	3429;"	d
GL_RESTART_PATH_NV	.\glcorearb.h	5431;"	d
GL_RG	.\glcorearb.h	1191;"	d
GL_RG16	.\glcorearb.h	1196;"	d
GL_RG16F	.\glcorearb.h	1199;"	d
GL_RG16I	.\glcorearb.h	1209;"	d
GL_RG16UI	.\glcorearb.h	1210;"	d
GL_RG16_SNORM	.\glcorearb.h	1408;"	d
GL_RG32F	.\glcorearb.h	1200;"	d
GL_RG32I	.\glcorearb.h	1211;"	d
GL_RG32UI	.\glcorearb.h	1212;"	d
GL_RG8	.\glcorearb.h	1195;"	d
GL_RG8I	.\glcorearb.h	1207;"	d
GL_RG8UI	.\glcorearb.h	1208;"	d
GL_RG8_SNORM	.\glcorearb.h	1404;"	d
GL_RGB	.\glcorearb.h	221;"	d
GL_RGB10	.\glcorearb.h	369;"	d
GL_RGB10_A2	.\glcorearb.h	376;"	d
GL_RGB10_A2UI	.\glcorearb.h	1597;"	d
GL_RGB12	.\glcorearb.h	370;"	d
GL_RGB16	.\glcorearb.h	371;"	d
GL_RGB16F	.\glcorearb.h	1003;"	d
GL_RGB16I	.\glcorearb.h	1046;"	d
GL_RGB16UI	.\glcorearb.h	1040;"	d
GL_RGB16_SNORM	.\glcorearb.h	1409;"	d
GL_RGB32F	.\glcorearb.h	1001;"	d
GL_RGB32I	.\glcorearb.h	1044;"	d
GL_RGB32UI	.\glcorearb.h	1038;"	d
GL_RGB4	.\glcorearb.h	366;"	d
GL_RGB5	.\glcorearb.h	367;"	d
GL_RGB565	.\glcorearb.h	1858;"	d
GL_RGB5_A1	.\glcorearb.h	374;"	d
GL_RGB8	.\glcorearb.h	368;"	d
GL_RGB8I	.\glcorearb.h	1048;"	d
GL_RGB8UI	.\glcorearb.h	1042;"	d
GL_RGB8_SNORM	.\glcorearb.h	1405;"	d
GL_RGB9_E5	.\glcorearb.h	1019;"	d
GL_RGBA	.\glcorearb.h	222;"	d
GL_RGBA12	.\glcorearb.h	377;"	d
GL_RGBA16	.\glcorearb.h	378;"	d
GL_RGBA16F	.\glcorearb.h	1002;"	d
GL_RGBA16I	.\glcorearb.h	1045;"	d
GL_RGBA16UI	.\glcorearb.h	1039;"	d
GL_RGBA16_SNORM	.\glcorearb.h	1410;"	d
GL_RGBA2	.\glcorearb.h	372;"	d
GL_RGBA32F	.\glcorearb.h	1000;"	d
GL_RGBA32I	.\glcorearb.h	1043;"	d
GL_RGBA32UI	.\glcorearb.h	1037;"	d
GL_RGBA4	.\glcorearb.h	373;"	d
GL_RGBA8	.\glcorearb.h	375;"	d
GL_RGBA8I	.\glcorearb.h	1047;"	d
GL_RGBA8UI	.\glcorearb.h	1041;"	d
GL_RGBA8_SNORM	.\glcorearb.h	1406;"	d
GL_RGBA_INTEGER	.\glcorearb.h	1053;"	d
GL_RGB_422_APPLE	.\glcorearb.h	3999;"	d
GL_RGB_INTEGER	.\glcorearb.h	1052;"	d
GL_RGB_RAW_422_APPLE	.\glcorearb.h	4002;"	d
GL_RG_INTEGER	.\glcorearb.h	1192;"	d
GL_RIGHT	.\glcorearb.h	112;"	d
GL_ROUNDED_RECT2_NV	.\glcorearb.h	5466;"	d
GL_ROUNDED_RECT4_NV	.\glcorearb.h	5468;"	d
GL_ROUNDED_RECT8_NV	.\glcorearb.h	5470;"	d
GL_ROUNDED_RECT_NV	.\glcorearb.h	5464;"	d
GL_ROUND_NV	.\glcorearb.h	5383;"	d
GL_SAMPLER	.\glcorearb.h	2269;"	d
GL_SAMPLER_1D	.\glcorearb.h	730;"	d
GL_SAMPLER_1D_ARRAY	.\glcorearb.h	1056;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	.\glcorearb.h	1058;"	d
GL_SAMPLER_1D_SHADOW	.\glcorearb.h	734;"	d
GL_SAMPLER_2D	.\glcorearb.h	731;"	d
GL_SAMPLER_2D_ARRAY	.\glcorearb.h	1057;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	.\glcorearb.h	1059;"	d
GL_SAMPLER_2D_MULTISAMPLE	.\glcorearb.h	1537;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	1540;"	d
GL_SAMPLER_2D_RECT	.\glcorearb.h	1388;"	d
GL_SAMPLER_2D_RECT_SHADOW	.\glcorearb.h	1389;"	d
GL_SAMPLER_2D_SHADOW	.\glcorearb.h	735;"	d
GL_SAMPLER_3D	.\glcorearb.h	732;"	d
GL_SAMPLER_BINDING	.\glcorearb.h	1596;"	d
GL_SAMPLER_BUFFER	.\glcorearb.h	1390;"	d
GL_SAMPLER_CUBE	.\glcorearb.h	733;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	.\glcorearb.h	1675;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	.\glcorearb.h	3694;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	.\glcorearb.h	1676;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	.\glcorearb.h	3695;"	d
GL_SAMPLER_CUBE_SHADOW	.\glcorearb.h	1060;"	d
GL_SAMPLES	.\glcorearb.h	502;"	d
GL_SAMPLES_PASSED	.\glcorearb.h	626;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	.\glcorearb.h	498;"	d
GL_SAMPLE_ALPHA_TO_ONE	.\glcorearb.h	499;"	d
GL_SAMPLE_BUFFERS	.\glcorearb.h	501;"	d
GL_SAMPLE_COVERAGE	.\glcorearb.h	500;"	d
GL_SAMPLE_COVERAGE_INVERT	.\glcorearb.h	504;"	d
GL_SAMPLE_COVERAGE_VALUE	.\glcorearb.h	503;"	d
GL_SAMPLE_LOCATION_ARB	.\glcorearb.h	3461;"	d
GL_SAMPLE_LOCATION_NV	.\glcorearb.h	5626;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	.\glcorearb.h	3459;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	.\glcorearb.h	5624;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	.\glcorearb.h	3458;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	.\glcorearb.h	5623;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	.\glcorearb.h	3457;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	.\glcorearb.h	5622;"	d
GL_SAMPLE_MASK	.\glcorearb.h	1526;"	d
GL_SAMPLE_MASK_VALUE	.\glcorearb.h	1527;"	d
GL_SAMPLE_POSITION	.\glcorearb.h	1525;"	d
GL_SAMPLE_SHADING	.\glcorearb.h	1668;"	d
GL_SAMPLE_SHADING_ARB	.\glcorearb.h	3477;"	d
GL_SCISSOR_BOX	.\glcorearb.h	155;"	d
GL_SCISSOR_BOX_EXCLUSIVE_NV	.\glcorearb.h	5647;"	d
GL_SCISSOR_COMMAND_NV	.\glcorearb.h	4927;"	d
GL_SCISSOR_TEST	.\glcorearb.h	156;"	d
GL_SCISSOR_TEST_EXCLUSIVE_NV	.\glcorearb.h	5646;"	d
GL_SCREEN_KHR	.\glcorearb.h	3833;"	d
GL_SCREEN_NV	.\glcorearb.h	4868;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	.\glcorearb.h	5857;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	.\glcorearb.h	5867;"	d
GL_SEPARATE_ATTRIBS	.\glcorearb.h	1034;"	d
GL_SET	.\glcorearb.h	210;"	d
GL_SHADER	.\glcorearb.h	2265;"	d
GL_SHADER_BINARY_FORMATS	.\glcorearb.h	1853;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V	.\glcorearb.h	2844;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	.\glcorearb.h	3184;"	d
GL_SHADER_COMPILER	.\glcorearb.h	1852;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	.\glcorearb.h	5715;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	.\glcorearb.h	2107;"	d
GL_SHADER_IMAGE_ATOMIC	.\glcorearb.h	2337;"	d
GL_SHADER_IMAGE_LOAD	.\glcorearb.h	2335;"	d
GL_SHADER_IMAGE_STORE	.\glcorearb.h	2336;"	d
GL_SHADER_INCLUDE_ARB	.\glcorearb.h	3567;"	d
GL_SHADER_OBJECT_EXT	.\glcorearb.h	4024;"	d
GL_SHADER_SOURCE_LENGTH	.\glcorearb.h	744;"	d
GL_SHADER_STORAGE_BARRIER_BIT	.\glcorearb.h	2442;"	d
GL_SHADER_STORAGE_BLOCK	.\glcorearb.h	2386;"	d
GL_SHADER_STORAGE_BUFFER	.\glcorearb.h	2428;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	.\glcorearb.h	2429;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	.\glcorearb.h	2441;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	.\glcorearb.h	2431;"	d
GL_SHADER_STORAGE_BUFFER_START	.\glcorearb.h	2430;"	d
GL_SHADER_TYPE	.\glcorearb.h	716;"	d
GL_SHADING_LANGUAGE_VERSION	.\glcorearb.h	748;"	d
GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV	.\glcorearb.h	5752;"	d
GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV	.\glcorearb.h	5743;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV	.\glcorearb.h	5744;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV	.\glcorearb.h	5745;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV	.\glcorearb.h	5746;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV	.\glcorearb.h	5747;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV	.\glcorearb.h	5748;"	d
GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV	.\glcorearb.h	5742;"	d
GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV	.\glcorearb.h	5749;"	d
GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV	.\glcorearb.h	5750;"	d
GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV	.\glcorearb.h	5751;"	d
GL_SHADING_RATE_IMAGE_BINDING_NV	.\glcorearb.h	5753;"	d
GL_SHADING_RATE_IMAGE_NV	.\glcorearb.h	5740;"	d
GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV	.\glcorearb.h	5756;"	d
GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV	.\glcorearb.h	5755;"	d
GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV	.\glcorearb.h	5754;"	d
GL_SHADING_RATE_NO_INVOCATIONS_NV	.\glcorearb.h	5741;"	d
GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV	.\glcorearb.h	5758;"	d
GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV	.\glcorearb.h	5759;"	d
GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV	.\glcorearb.h	5760;"	d
GL_SHARED_EDGE_NV	.\glcorearb.h	5612;"	d
GL_SHORT	.\glcorearb.h	188;"	d
GL_SIGNALED	.\glcorearb.h	1518;"	d
GL_SIGNED_NORMALIZED	.\glcorearb.h	1411;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	.\glcorearb.h	2342;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	.\glcorearb.h	2344;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	.\glcorearb.h	2343;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	.\glcorearb.h	2345;"	d
GL_SKIP_DECODE_EXT	.\glcorearb.h	4669;"	d
GL_SKIP_MISSING_GLYPH_NV	.\glcorearb.h	5388;"	d
GL_SMALL_CCW_ARC_TO_NV	.\glcorearb.h	5423;"	d
GL_SMALL_CW_ARC_TO_NV	.\glcorearb.h	5425;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	.\glcorearb.h	5421;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	.\glcorearb.h	448;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	.\glcorearb.h	447;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	.\glcorearb.h	446;"	d
GL_SMOOTH_POINT_SIZE_RANGE	.\glcorearb.h	445;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	.\glcorearb.h	5419;"	d
GL_SM_COUNT_NV	.\glcorearb.h	5731;"	d
GL_SOFTLIGHT_KHR	.\glcorearb.h	3840;"	d
GL_SOFTLIGHT_NV	.\glcorearb.h	4869;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	.\glcorearb.h	3593;"	d
GL_SPARSE_STORAGE_BIT_ARB	.\glcorearb.h	3592;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	.\glcorearb.h	3616;"	d
GL_SPIR_V_BINARY	.\glcorearb.h	2845;"	d
GL_SPIR_V_BINARY_ARB	.\glcorearb.h	3185;"	d
GL_SPIR_V_EXTENSIONS	.\glcorearb.h	2860;"	d
GL_SQUARE_NV	.\glcorearb.h	5382;"	d
GL_SR8_EXT	.\glcorearb.h	4662;"	d
GL_SRC1_ALPHA	.\glcorearb.h	627;"	d
GL_SRC1_COLOR	.\glcorearb.h	1591;"	d
GL_SRC_ALPHA	.\glcorearb.h	97;"	d
GL_SRC_ALPHA_SATURATE	.\glcorearb.h	103;"	d
GL_SRC_ATOP_NV	.\glcorearb.h	4870;"	d
GL_SRC_COLOR	.\glcorearb.h	95;"	d
GL_SRC_IN_NV	.\glcorearb.h	4871;"	d
GL_SRC_NV	.\glcorearb.h	4872;"	d
GL_SRC_OUT_NV	.\glcorearb.h	4873;"	d
GL_SRC_OVER_NV	.\glcorearb.h	4874;"	d
GL_SRGB	.\glcorearb.h	958;"	d
GL_SRGB8	.\glcorearb.h	959;"	d
GL_SRGB8_ALPHA8	.\glcorearb.h	961;"	d
GL_SRGB_ALPHA	.\glcorearb.h	960;"	d
GL_SRGB_DECODE_ARB	.\glcorearb.h	3320;"	d
GL_SRGB_READ	.\glcorearb.h	2323;"	d
GL_SRGB_WRITE	.\glcorearb.h	2324;"	d
GL_STACK_OVERFLOW	.\glcorearb.h	193;"	d
GL_STACK_UNDERFLOW	.\glcorearb.h	194;"	d
GL_STANDARD_FONT_FORMAT_NV	.\glcorearb.h	5480;"	d
GL_STANDARD_FONT_NAME_NV	.\glcorearb.h	5341;"	d
GL_STATIC_COPY	.\glcorearb.h	622;"	d
GL_STATIC_DRAW	.\glcorearb.h	620;"	d
GL_STATIC_READ	.\glcorearb.h	621;"	d
GL_STENCIL	.\glcorearb.h	214;"	d
GL_STENCIL_ATTACHMENT	.\glcorearb.h	1161;"	d
GL_STENCIL_BACK_FAIL	.\glcorearb.h	685;"	d
GL_STENCIL_BACK_FUNC	.\glcorearb.h	684;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	.\glcorearb.h	686;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	.\glcorearb.h	687;"	d
GL_STENCIL_BACK_REF	.\glcorearb.h	753;"	d
GL_STENCIL_BACK_VALUE_MASK	.\glcorearb.h	754;"	d
GL_STENCIL_BACK_WRITEMASK	.\glcorearb.h	755;"	d
GL_STENCIL_BUFFER_BIT	.\glcorearb.h	73;"	d
GL_STENCIL_CLEAR_VALUE	.\glcorearb.h	139;"	d
GL_STENCIL_COMPONENTS	.\glcorearb.h	2305;"	d
GL_STENCIL_FAIL	.\glcorearb.h	142;"	d
GL_STENCIL_FUNC	.\glcorearb.h	140;"	d
GL_STENCIL_INDEX	.\glcorearb.h	215;"	d
GL_STENCIL_INDEX1	.\glcorearb.h	1167;"	d
GL_STENCIL_INDEX16	.\glcorearb.h	1170;"	d
GL_STENCIL_INDEX4	.\glcorearb.h	1168;"	d
GL_STENCIL_INDEX8	.\glcorearb.h	1169;"	d
GL_STENCIL_PASS_DEPTH_FAIL	.\glcorearb.h	143;"	d
GL_STENCIL_PASS_DEPTH_PASS	.\glcorearb.h	144;"	d
GL_STENCIL_REF	.\glcorearb.h	145;"	d
GL_STENCIL_REF_COMMAND_NV	.\glcorearb.h	4922;"	d
GL_STENCIL_RENDERABLE	.\glcorearb.h	2308;"	d
GL_STENCIL_SAMPLES_NV	.\glcorearb.h	5089;"	d
GL_STENCIL_TEST	.\glcorearb.h	138;"	d
GL_STENCIL_VALUE_MASK	.\glcorearb.h	141;"	d
GL_STENCIL_WRITEMASK	.\glcorearb.h	146;"	d
GL_STEREO	.\glcorearb.h	160;"	d
GL_STREAM_COPY	.\glcorearb.h	619;"	d
GL_STREAM_DRAW	.\glcorearb.h	617;"	d
GL_STREAM_READ	.\glcorearb.h	618;"	d
GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR	.\glcorearb.h	3898;"	d
GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR	.\glcorearb.h	3899;"	d
GL_SUBGROUP_FEATURE_BASIC_BIT_KHR	.\glcorearb.h	3896;"	d
GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR	.\glcorearb.h	3902;"	d
GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV	.\glcorearb.h	5720;"	d
GL_SUBGROUP_FEATURE_QUAD_BIT_KHR	.\glcorearb.h	3903;"	d
GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR	.\glcorearb.h	3900;"	d
GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR	.\glcorearb.h	3901;"	d
GL_SUBGROUP_FEATURE_VOTE_BIT_KHR	.\glcorearb.h	3897;"	d
GL_SUBGROUP_QUAD_ALL_STAGES_KHR	.\glcorearb.h	3895;"	d
GL_SUBGROUP_SIZE_KHR	.\glcorearb.h	3892;"	d
GL_SUBGROUP_SUPPORTED_FEATURES_KHR	.\glcorearb.h	3894;"	d
GL_SUBGROUP_SUPPORTED_STAGES_KHR	.\glcorearb.h	3893;"	d
GL_SUBPIXEL_BITS	.\glcorearb.h	177;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	.\glcorearb.h	4988;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	.\glcorearb.h	4989;"	d
GL_SUPERSAMPLE_SCALE_X_NV	.\glcorearb.h	5224;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	.\glcorearb.h	5225;"	d
GL_SUPPORTED_MULTISAMPLE_MODES_AMD	.\glcorearb.h	3953;"	d
GL_SYNC_CL_EVENT_ARB	.\glcorearb.h	2961;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	.\glcorearb.h	2962;"	d
GL_SYNC_CONDITION	.\glcorearb.h	1512;"	d
GL_SYNC_FENCE	.\glcorearb.h	1515;"	d
GL_SYNC_FLAGS	.\glcorearb.h	1514;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	.\glcorearb.h	1524;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	.\glcorearb.h	1516;"	d
GL_SYNC_STATUS	.\glcorearb.h	1513;"	d
GL_SYSTEM_FONT_NAME_NV	.\glcorearb.h	5342;"	d
GL_TASK_SHADER_BIT_NV	.\glcorearb.h	5318;"	d
GL_TASK_SHADER_NV	.\glcorearb.h	5278;"	d
GL_TASK_SUBROUTINE_NV	.\glcorearb.h	5320;"	d
GL_TASK_SUBROUTINE_UNIFORM_NV	.\glcorearb.h	5322;"	d
GL_TASK_WORK_GROUP_SIZE_NV	.\glcorearb.h	5309;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	.\glcorearb.h	4910;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	.\glcorearb.h	1712;"	d
GL_TESS_CONTROL_SHADER	.\glcorearb.h	1739;"	d
GL_TESS_CONTROL_SHADER_BIT	.\glcorearb.h	1866;"	d
GL_TESS_CONTROL_SHADER_PATCHES	.\glcorearb.h	2852;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	.\glcorearb.h	3381;"	d
GL_TESS_CONTROL_SUBROUTINE	.\glcorearb.h	2388;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	.\glcorearb.h	2394;"	d
GL_TESS_CONTROL_TEXTURE	.\glcorearb.h	2327;"	d
GL_TESS_EVALUATION_SHADER	.\glcorearb.h	1738;"	d
GL_TESS_EVALUATION_SHADER_BIT	.\glcorearb.h	1867;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS	.\glcorearb.h	2853;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	.\glcorearb.h	3382;"	d
GL_TESS_EVALUATION_SUBROUTINE	.\glcorearb.h	2389;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	.\glcorearb.h	2395;"	d
GL_TESS_EVALUATION_TEXTURE	.\glcorearb.h	2328;"	d
GL_TESS_GEN_MODE	.\glcorearb.h	1713;"	d
GL_TESS_GEN_POINT_MODE	.\glcorearb.h	1716;"	d
GL_TESS_GEN_SPACING	.\glcorearb.h	1714;"	d
GL_TESS_GEN_VERTEX_ORDER	.\glcorearb.h	1715;"	d
GL_TEXTURE	.\glcorearb.h	211;"	d
GL_TEXTURE0	.\glcorearb.h	464;"	d
GL_TEXTURE1	.\glcorearb.h	465;"	d
GL_TEXTURE10	.\glcorearb.h	474;"	d
GL_TEXTURE11	.\glcorearb.h	475;"	d
GL_TEXTURE12	.\glcorearb.h	476;"	d
GL_TEXTURE13	.\glcorearb.h	477;"	d
GL_TEXTURE14	.\glcorearb.h	478;"	d
GL_TEXTURE15	.\glcorearb.h	479;"	d
GL_TEXTURE16	.\glcorearb.h	480;"	d
GL_TEXTURE17	.\glcorearb.h	481;"	d
GL_TEXTURE18	.\glcorearb.h	482;"	d
GL_TEXTURE19	.\glcorearb.h	483;"	d
GL_TEXTURE2	.\glcorearb.h	466;"	d
GL_TEXTURE20	.\glcorearb.h	484;"	d
GL_TEXTURE21	.\glcorearb.h	485;"	d
GL_TEXTURE22	.\glcorearb.h	486;"	d
GL_TEXTURE23	.\glcorearb.h	487;"	d
GL_TEXTURE24	.\glcorearb.h	488;"	d
GL_TEXTURE25	.\glcorearb.h	489;"	d
GL_TEXTURE26	.\glcorearb.h	490;"	d
GL_TEXTURE27	.\glcorearb.h	491;"	d
GL_TEXTURE28	.\glcorearb.h	492;"	d
GL_TEXTURE29	.\glcorearb.h	493;"	d
GL_TEXTURE3	.\glcorearb.h	467;"	d
GL_TEXTURE30	.\glcorearb.h	494;"	d
GL_TEXTURE31	.\glcorearb.h	495;"	d
GL_TEXTURE4	.\glcorearb.h	468;"	d
GL_TEXTURE5	.\glcorearb.h	469;"	d
GL_TEXTURE6	.\glcorearb.h	470;"	d
GL_TEXTURE7	.\glcorearb.h	471;"	d
GL_TEXTURE8	.\glcorearb.h	472;"	d
GL_TEXTURE9	.\glcorearb.h	473;"	d
GL_TEXTURE_1D	.\glcorearb.h	178;"	d
GL_TEXTURE_1D_ARRAY	.\glcorearb.h	1011;"	d
GL_TEXTURE_2D	.\glcorearb.h	179;"	d
GL_TEXTURE_2D_ARRAY	.\glcorearb.h	1013;"	d
GL_TEXTURE_2D_MULTISAMPLE	.\glcorearb.h	1529;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	1531;"	d
GL_TEXTURE_3D	.\glcorearb.h	424;"	d
GL_TEXTURE_ALPHA_SIZE	.\glcorearb.h	361;"	d
GL_TEXTURE_ALPHA_TYPE	.\glcorearb.h	1106;"	d
GL_TEXTURE_BASE_LEVEL	.\glcorearb.h	443;"	d
GL_TEXTURE_BINDING_1D	.\glcorearb.h	355;"	d
GL_TEXTURE_BINDING_1D_ARRAY	.\glcorearb.h	1015;"	d
GL_TEXTURE_BINDING_2D	.\glcorearb.h	356;"	d
GL_TEXTURE_BINDING_2D_ARRAY	.\glcorearb.h	1016;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	.\glcorearb.h	1533;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	1534;"	d
GL_TEXTURE_BINDING_3D	.\glcorearb.h	419;"	d
GL_TEXTURE_BINDING_BUFFER	.\glcorearb.h	1397;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	.\glcorearb.h	3660;"	d
GL_TEXTURE_BINDING_CUBE_MAP	.\glcorearb.h	506;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	.\glcorearb.h	1673;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	.\glcorearb.h	3692;"	d
GL_TEXTURE_BINDING_RECTANGLE	.\glcorearb.h	1400;"	d
GL_TEXTURE_BLUE_SIZE	.\glcorearb.h	360;"	d
GL_TEXTURE_BLUE_TYPE	.\glcorearb.h	1105;"	d
GL_TEXTURE_BORDER_COLOR	.\glcorearb.h	182;"	d
GL_TEXTURE_BUFFER	.\glcorearb.h	1395;"	d
GL_TEXTURE_BUFFER_ARB	.\glcorearb.h	3658;"	d
GL_TEXTURE_BUFFER_BINDING	.\glcorearb.h	2555;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	.\glcorearb.h	1398;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	.\glcorearb.h	3661;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	.\glcorearb.h	3662;"	d
GL_TEXTURE_BUFFER_OFFSET	.\glcorearb.h	2445;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	.\glcorearb.h	2447;"	d
GL_TEXTURE_BUFFER_SIZE	.\glcorearb.h	2446;"	d
GL_TEXTURE_COMPARE_FUNC	.\glcorearb.h	562;"	d
GL_TEXTURE_COMPARE_MODE	.\glcorearb.h	561;"	d
GL_TEXTURE_COMPRESSED	.\glcorearb.h	519;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	.\glcorearb.h	2347;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	.\glcorearb.h	2348;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	.\glcorearb.h	2346;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	.\glcorearb.h	518;"	d
GL_TEXTURE_COMPRESSION_HINT	.\glcorearb.h	517;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	.\glcorearb.h	5855;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	.\glcorearb.h	5865;"	d
GL_TEXTURE_CUBE_MAP	.\glcorearb.h	505;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	.\glcorearb.h	1672;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	.\glcorearb.h	3691;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	.\glcorearb.h	508;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	.\glcorearb.h	510;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	.\glcorearb.h	512;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	.\glcorearb.h	507;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	.\glcorearb.h	509;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	.\glcorearb.h	511;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	.\glcorearb.h	1509;"	d
GL_TEXTURE_DEPTH	.\glcorearb.h	426;"	d
GL_TEXTURE_DEPTH_SIZE	.\glcorearb.h	560;"	d
GL_TEXTURE_DEPTH_TYPE	.\glcorearb.h	1107;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	.\glcorearb.h	2106;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	.\glcorearb.h	1536;"	d
GL_TEXTURE_GATHER	.\glcorearb.h	2333;"	d
GL_TEXTURE_GATHER_SHADOW	.\glcorearb.h	2334;"	d
GL_TEXTURE_GREEN_SIZE	.\glcorearb.h	359;"	d
GL_TEXTURE_GREEN_TYPE	.\glcorearb.h	1104;"	d
GL_TEXTURE_HEIGHT	.\glcorearb.h	181;"	d
GL_TEXTURE_IMAGE_FORMAT	.\glcorearb.h	2315;"	d
GL_TEXTURE_IMAGE_TYPE	.\glcorearb.h	2316;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	.\glcorearb.h	2171;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	.\glcorearb.h	2452;"	d
GL_TEXTURE_INTERNAL_FORMAT	.\glcorearb.h	357;"	d
GL_TEXTURE_LOD_BIAS	.\glcorearb.h	557;"	d
GL_TEXTURE_MAG_FILTER	.\glcorearb.h	240;"	d
GL_TEXTURE_MAX_ANISOTROPY	.\glcorearb.h	2862;"	d
GL_TEXTURE_MAX_LEVEL	.\glcorearb.h	444;"	d
GL_TEXTURE_MAX_LOD	.\glcorearb.h	442;"	d
GL_TEXTURE_MIN_FILTER	.\glcorearb.h	241;"	d
GL_TEXTURE_MIN_LOD	.\glcorearb.h	441;"	d
GL_TEXTURE_RECTANGLE	.\glcorearb.h	1399;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	.\glcorearb.h	3706;"	d
GL_TEXTURE_REDUCTION_MODE_EXT	.\glcorearb.h	4656;"	d
GL_TEXTURE_RED_SIZE	.\glcorearb.h	358;"	d
GL_TEXTURE_RED_TYPE	.\glcorearb.h	1103;"	d
GL_TEXTURE_SAMPLES	.\glcorearb.h	1535;"	d
GL_TEXTURE_SHADOW	.\glcorearb.h	2332;"	d
GL_TEXTURE_SHARED_SIZE	.\glcorearb.h	1021;"	d
GL_TEXTURE_SPARSE_ARB	.\glcorearb.h	3606;"	d
GL_TEXTURE_SRGB_DECODE_EXT	.\glcorearb.h	4667;"	d
GL_TEXTURE_STENCIL_SIZE	.\glcorearb.h	1102;"	d
GL_TEXTURE_SWIZZLE_A	.\glcorearb.h	1601;"	d
GL_TEXTURE_SWIZZLE_B	.\glcorearb.h	1600;"	d
GL_TEXTURE_SWIZZLE_G	.\glcorearb.h	1599;"	d
GL_TEXTURE_SWIZZLE_R	.\glcorearb.h	1598;"	d
GL_TEXTURE_SWIZZLE_RGBA	.\glcorearb.h	1602;"	d
GL_TEXTURE_TARGET	.\glcorearb.h	2607;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	.\glcorearb.h	2110;"	d
GL_TEXTURE_VIEW	.\glcorearb.h	2350;"	d
GL_TEXTURE_VIEW_MIN_LAYER	.\glcorearb.h	2450;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	.\glcorearb.h	2448;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	.\glcorearb.h	2451;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	.\glcorearb.h	2449;"	d
GL_TEXTURE_WIDTH	.\glcorearb.h	180;"	d
GL_TEXTURE_WRAP_R	.\glcorearb.h	427;"	d
GL_TEXTURE_WRAP_S	.\glcorearb.h	242;"	d
GL_TEXTURE_WRAP_T	.\glcorearb.h	243;"	d
GL_TIMEOUT_EXPIRED	.\glcorearb.h	1520;"	d
GL_TIMEOUT_IGNORED	.\glcorearb.h	1523;"	d
GL_TIMESTAMP	.\glcorearb.h	1604;"	d
GL_TIME_ELAPSED	.\glcorearb.h	1603;"	d
GL_TOP_LEVEL_ARRAY_SIZE	.\glcorearb.h	2423;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	.\glcorearb.h	2424;"	d
GL_TRANSFORM_FEEDBACK	.\glcorearb.h	1740;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	.\glcorearb.h	2062;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	.\glcorearb.h	2113;"	d
GL_TRANSFORM_FEEDBACK_BINDING	.\glcorearb.h	1743;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	.\glcorearb.h	1035;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	.\glcorearb.h	1742;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	.\glcorearb.h	1036;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	.\glcorearb.h	2565;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	.\glcorearb.h	1023;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	.\glcorearb.h	1741;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	.\glcorearb.h	1027;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	.\glcorearb.h	1026;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	.\glcorearb.h	2566;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW	.\glcorearb.h	2864;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	.\glcorearb.h	3788;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	.\glcorearb.h	2063;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	.\glcorearb.h	1029;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW	.\glcorearb.h	2865;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	.\glcorearb.h	3789;"	d
GL_TRANSFORM_FEEDBACK_VARYING	.\glcorearb.h	2399;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	.\glcorearb.h	1025;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	.\glcorearb.h	1022;"	d
GL_TRANSLATE_2D_NV	.\glcorearb.h	5367;"	d
GL_TRANSLATE_3D_NV	.\glcorearb.h	5368;"	d
GL_TRANSLATE_X_NV	.\glcorearb.h	5365;"	d
GL_TRANSLATE_Y_NV	.\glcorearb.h	5366;"	d
GL_TRANSPOSE_AFFINE_2D_NV	.\glcorearb.h	5371;"	d
GL_TRANSPOSE_AFFINE_3D_NV	.\glcorearb.h	5372;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	.\glcorearb.h	4051;"	d
GL_TRIANGLES	.\glcorearb.h	81;"	d
GL_TRIANGLES_ADJACENCY	.\glcorearb.h	1486;"	d
GL_TRIANGLES_ADJACENCY_ARB	.\glcorearb.h	3146;"	d
GL_TRIANGLE_FAN	.\glcorearb.h	83;"	d
GL_TRIANGLE_STRIP	.\glcorearb.h	82;"	d
GL_TRIANGLE_STRIP_ADJACENCY	.\glcorearb.h	1487;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	.\glcorearb.h	3147;"	d
GL_TRIANGULAR_NV	.\glcorearb.h	5384;"	d
GL_TRUE	.\glcorearb.h	76;"	d
GL_TYPE	.\glcorearb.h	2405;"	d
GL_UNCORRELATED_NV	.\glcorearb.h	4875;"	d
GL_UNDEFINED_VERTEX	.\glcorearb.h	1877;"	d
GL_UNIFORM	.\glcorearb.h	2381;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	.\glcorearb.h	4920;"	d
GL_UNIFORM_ARRAY_STRIDE	.\glcorearb.h	1437;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	.\glcorearb.h	2101;"	d
GL_UNIFORM_BARRIER_BIT	.\glcorearb.h	2105;"	d
GL_UNIFORM_BLOCK	.\glcorearb.h	2382;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	.\glcorearb.h	1443;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	.\glcorearb.h	1444;"	d
GL_UNIFORM_BLOCK_BINDING	.\glcorearb.h	1440;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	.\glcorearb.h	1441;"	d
GL_UNIFORM_BLOCK_INDEX	.\glcorearb.h	1435;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	.\glcorearb.h	1442;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	.\glcorearb.h	2231;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	.\glcorearb.h	1447;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	.\glcorearb.h	1446;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV	.\glcorearb.h	5313;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV	.\glcorearb.h	5314;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	.\glcorearb.h	1736;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	.\glcorearb.h	1737;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	.\glcorearb.h	1445;"	d
GL_UNIFORM_BUFFER	.\glcorearb.h	1416;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	.\glcorearb.h	5798;"	d
GL_UNIFORM_BUFFER_BINDING	.\glcorearb.h	1417;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	.\glcorearb.h	5799;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	.\glcorearb.h	1429;"	d
GL_UNIFORM_BUFFER_SIZE	.\glcorearb.h	1419;"	d
GL_UNIFORM_BUFFER_START	.\glcorearb.h	1418;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	.\glcorearb.h	5797;"	d
GL_UNIFORM_IS_ROW_MAJOR	.\glcorearb.h	1439;"	d
GL_UNIFORM_MATRIX_STRIDE	.\glcorearb.h	1438;"	d
GL_UNIFORM_NAME_LENGTH	.\glcorearb.h	1434;"	d
GL_UNIFORM_OFFSET	.\glcorearb.h	1436;"	d
GL_UNIFORM_SIZE	.\glcorearb.h	1433;"	d
GL_UNIFORM_TYPE	.\glcorearb.h	1432;"	d
GL_UNKNOWN_CONTEXT_RESET	.\glcorearb.h	2611;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	.\glcorearb.h	3428;"	d
GL_UNPACK_ALIGNMENT	.\glcorearb.h	168;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	.\glcorearb.h	2066;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	.\glcorearb.h	2065;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	.\glcorearb.h	2067;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	.\glcorearb.h	2064;"	d
GL_UNPACK_IMAGE_HEIGHT	.\glcorearb.h	423;"	d
GL_UNPACK_LSB_FIRST	.\glcorearb.h	164;"	d
GL_UNPACK_ROW_LENGTH	.\glcorearb.h	165;"	d
GL_UNPACK_SKIP_IMAGES	.\glcorearb.h	422;"	d
GL_UNPACK_SKIP_PIXELS	.\glcorearb.h	167;"	d
GL_UNPACK_SKIP_ROWS	.\glcorearb.h	166;"	d
GL_UNPACK_SWAP_BYTES	.\glcorearb.h	163;"	d
GL_UNSIGNALED	.\glcorearb.h	1517;"	d
GL_UNSIGNED_BYTE	.\glcorearb.h	187;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	.\glcorearb.h	429;"	d
GL_UNSIGNED_BYTE_3_3_2	.\glcorearb.h	414;"	d
GL_UNSIGNED_INT	.\glcorearb.h	191;"	d
GL_UNSIGNED_INT16_NV	.\glcorearb.h	5140;"	d
GL_UNSIGNED_INT16_VEC2_NV	.\glcorearb.h	5141;"	d
GL_UNSIGNED_INT16_VEC3_NV	.\glcorearb.h	5142;"	d
GL_UNSIGNED_INT16_VEC4_NV	.\glcorearb.h	5143;"	d
GL_UNSIGNED_INT64_AMD	.\glcorearb.h	3966;"	d
GL_UNSIGNED_INT64_ARB	.\glcorearb.h	2912;"	d
GL_UNSIGNED_INT64_NV	.\glcorearb.h	5124;"	d
GL_UNSIGNED_INT64_VEC2_ARB	.\glcorearb.h	3206;"	d
GL_UNSIGNED_INT64_VEC2_NV	.\glcorearb.h	5144;"	d
GL_UNSIGNED_INT64_VEC3_ARB	.\glcorearb.h	3207;"	d
GL_UNSIGNED_INT64_VEC3_NV	.\glcorearb.h	5145;"	d
GL_UNSIGNED_INT64_VEC4_ARB	.\glcorearb.h	3208;"	d
GL_UNSIGNED_INT64_VEC4_NV	.\glcorearb.h	5146;"	d
GL_UNSIGNED_INT8_NV	.\glcorearb.h	5136;"	d
GL_UNSIGNED_INT8_VEC2_NV	.\glcorearb.h	5137;"	d
GL_UNSIGNED_INT8_VEC3_NV	.\glcorearb.h	5138;"	d
GL_UNSIGNED_INT8_VEC4_NV	.\glcorearb.h	5139;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	.\glcorearb.h	1018;"	d
GL_UNSIGNED_INT_10_10_10_2	.\glcorearb.h	418;"	d
GL_UNSIGNED_INT_24_8	.\glcorearb.h	1100;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	.\glcorearb.h	435;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	.\glcorearb.h	1020;"	d
GL_UNSIGNED_INT_8_8_8_8	.\glcorearb.h	417;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	.\glcorearb.h	434;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	.\glcorearb.h	2102;"	d
GL_UNSIGNED_INT_IMAGE_1D	.\glcorearb.h	2145;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	.\glcorearb.h	2151;"	d
GL_UNSIGNED_INT_IMAGE_2D	.\glcorearb.h	2146;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	.\glcorearb.h	2152;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	.\glcorearb.h	2154;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	2155;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	.\glcorearb.h	2148;"	d
GL_UNSIGNED_INT_IMAGE_3D	.\glcorearb.h	2147;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	.\glcorearb.h	2150;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	.\glcorearb.h	2149;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	.\glcorearb.h	2153;"	d
GL_UNSIGNED_INT_SAMPLER_1D	.\glcorearb.h	1070;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	.\glcorearb.h	1074;"	d
GL_UNSIGNED_INT_SAMPLER_2D	.\glcorearb.h	1071;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	.\glcorearb.h	1075;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	.\glcorearb.h	1539;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	.\glcorearb.h	1542;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	.\glcorearb.h	1393;"	d
GL_UNSIGNED_INT_SAMPLER_3D	.\glcorearb.h	1072;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	.\glcorearb.h	1394;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	.\glcorearb.h	1073;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	.\glcorearb.h	1678;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	.\glcorearb.h	3697;"	d
GL_UNSIGNED_INT_VEC2	.\glcorearb.h	1061;"	d
GL_UNSIGNED_INT_VEC3	.\glcorearb.h	1062;"	d
GL_UNSIGNED_INT_VEC4	.\glcorearb.h	1063;"	d
GL_UNSIGNED_NORMALIZED	.\glcorearb.h	1108;"	d
GL_UNSIGNED_SHORT	.\glcorearb.h	189;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	.\glcorearb.h	433;"	d
GL_UNSIGNED_SHORT_4_4_4_4	.\glcorearb.h	415;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	.\glcorearb.h	432;"	d
GL_UNSIGNED_SHORT_5_5_5_1	.\glcorearb.h	416;"	d
GL_UNSIGNED_SHORT_5_6_5	.\glcorearb.h	430;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	.\glcorearb.h	431;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	.\glcorearb.h	4000;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	.\glcorearb.h	4001;"	d
GL_UPPER_LEFT	.\glcorearb.h	752;"	d
GL_USE_MISSING_GLYPH_NV	.\glcorearb.h	5389;"	d
GL_UTF16_NV	.\glcorearb.h	5374;"	d
GL_UTF8_NV	.\glcorearb.h	5373;"	d
GL_VALIDATE_STATUS	.\glcorearb.h	739;"	d
GL_VENDOR	.\glcorearb.h	230;"	d
GL_VERSION	.\glcorearb.h	232;"	d
GL_VERSION_1_0	.\glcorearb.h	60;"	d
GL_VERSION_1_1	.\glcorearb.h	346;"	d
GL_VERSION_1_2	.\glcorearb.h	413;"	d
GL_VERSION_1_3	.\glcorearb.h	463;"	d
GL_VERSION_1_4	.\glcorearb.h	546;"	d
GL_VERSION_1_5	.\glcorearb.h	597;"	d
GL_VERSION_2_0	.\glcorearb.h	671;"	d
GL_VERSION_2_1	.\glcorearb.h	947;"	d
GL_VERSION_3_0	.\glcorearb.h	981;"	d
GL_VERSION_3_1	.\glcorearb.h	1387;"	d
GL_VERSION_3_2	.\glcorearb.h	1478;"	d
GL_VERSION_3_3	.\glcorearb.h	1589;"	d
GL_VERSION_4_0	.\glcorearb.h	1667;"	d
GL_VERSION_4_1	.\glcorearb.h	1842;"	d
GL_VERSION_4_2	.\glcorearb.h	2059;"	d
GL_VERSION_4_3	.\glcorearb.h	2201;"	d
GL_VERSION_4_4	.\glcorearb.h	2552;"	d
GL_VERSION_4_5	.\glcorearb.h	2595;"	d
GL_VERSION_4_6	.\glcorearb.h	2843;"	d
GL_VERTEX_ARRAY	.\glcorearb.h	379;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	.\glcorearb.h	5851;"	d
GL_VERTEX_ARRAY_BINDING	.\glcorearb.h	1213;"	d
GL_VERTEX_ARRAY_LENGTH_NV	.\glcorearb.h	5861;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	.\glcorearb.h	4027;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	.\glcorearb.h	5850;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	.\glcorearb.h	2103;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	.\glcorearb.h	610;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	.\glcorearb.h	1590;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	.\glcorearb.h	3307;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	.\glcorearb.h	677;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	.\glcorearb.h	1004;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	.\glcorearb.h	5860;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	.\glcorearb.h	2204;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	.\glcorearb.h	707;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	.\glcorearb.h	683;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	.\glcorearb.h	678;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	.\glcorearb.h	679;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	.\glcorearb.h	680;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	.\glcorearb.h	5848;"	d
GL_VERTEX_ATTRIB_BINDING	.\glcorearb.h	2453;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	.\glcorearb.h	2454;"	d
GL_VERTEX_BINDING_BUFFER	.\glcorearb.h	2460;"	d
GL_VERTEX_BINDING_DIVISOR	.\glcorearb.h	2455;"	d
GL_VERTEX_BINDING_OFFSET	.\glcorearb.h	2456;"	d
GL_VERTEX_BINDING_STRIDE	.\glcorearb.h	2457;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	.\glcorearb.h	682;"	d
GL_VERTEX_SHADER	.\glcorearb.h	710;"	d
GL_VERTEX_SHADER_BIT	.\glcorearb.h	1863;"	d
GL_VERTEX_SHADER_INVOCATIONS	.\glcorearb.h	2851;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	.\glcorearb.h	3380;"	d
GL_VERTEX_SUBROUTINE	.\glcorearb.h	2387;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	.\glcorearb.h	2393;"	d
GL_VERTEX_TEXTURE	.\glcorearb.h	2326;"	d
GL_VERTICAL_LINE_TO_NV	.\glcorearb.h	5413;"	d
GL_VERTICES_SUBMITTED	.\glcorearb.h	2849;"	d
GL_VERTICES_SUBMITTED_ARB	.\glcorearb.h	3378;"	d
GL_VIEWPORT	.\glcorearb.h	147;"	d
GL_VIEWPORT_BOUNDS_RANGE	.\glcorearb.h	1874;"	d
GL_VIEWPORT_COMMAND_NV	.\glcorearb.h	4926;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	.\glcorearb.h	1876;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	.\glcorearb.h	4899;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	.\glcorearb.h	4900;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	.\glcorearb.h	4901;"	d
GL_VIEWPORT_SUBPIXEL_BITS	.\glcorearb.h	1873;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	.\glcorearb.h	5914;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	.\glcorearb.h	5908;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	.\glcorearb.h	5910;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	.\glcorearb.h	5912;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	.\glcorearb.h	5913;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	.\glcorearb.h	5907;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	.\glcorearb.h	5909;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	.\glcorearb.h	5911;"	d
GL_VIEWPORT_SWIZZLE_W_NV	.\glcorearb.h	5918;"	d
GL_VIEWPORT_SWIZZLE_X_NV	.\glcorearb.h	5915;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	.\glcorearb.h	5916;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	.\glcorearb.h	5917;"	d
GL_VIEW_CLASS_128_BITS	.\glcorearb.h	2365;"	d
GL_VIEW_CLASS_16_BITS	.\glcorearb.h	2371;"	d
GL_VIEW_CLASS_24_BITS	.\glcorearb.h	2370;"	d
GL_VIEW_CLASS_32_BITS	.\glcorearb.h	2369;"	d
GL_VIEW_CLASS_48_BITS	.\glcorearb.h	2368;"	d
GL_VIEW_CLASS_64_BITS	.\glcorearb.h	2367;"	d
GL_VIEW_CLASS_8_BITS	.\glcorearb.h	2372;"	d
GL_VIEW_CLASS_96_BITS	.\glcorearb.h	2366;"	d
GL_VIEW_CLASS_ASTC_10x10_RGBA	.\glcorearb.h	3337;"	d
GL_VIEW_CLASS_ASTC_10x5_RGBA	.\glcorearb.h	3334;"	d
GL_VIEW_CLASS_ASTC_10x6_RGBA	.\glcorearb.h	3335;"	d
GL_VIEW_CLASS_ASTC_10x8_RGBA	.\glcorearb.h	3336;"	d
GL_VIEW_CLASS_ASTC_12x10_RGBA	.\glcorearb.h	3338;"	d
GL_VIEW_CLASS_ASTC_12x12_RGBA	.\glcorearb.h	3339;"	d
GL_VIEW_CLASS_ASTC_4x4_RGBA	.\glcorearb.h	3326;"	d
GL_VIEW_CLASS_ASTC_5x4_RGBA	.\glcorearb.h	3327;"	d
GL_VIEW_CLASS_ASTC_5x5_RGBA	.\glcorearb.h	3328;"	d
GL_VIEW_CLASS_ASTC_6x5_RGBA	.\glcorearb.h	3329;"	d
GL_VIEW_CLASS_ASTC_6x6_RGBA	.\glcorearb.h	3330;"	d
GL_VIEW_CLASS_ASTC_8x5_RGBA	.\glcorearb.h	3331;"	d
GL_VIEW_CLASS_ASTC_8x6_RGBA	.\glcorearb.h	3332;"	d
GL_VIEW_CLASS_ASTC_8x8_RGBA	.\glcorearb.h	3333;"	d
GL_VIEW_CLASS_BPTC_FLOAT	.\glcorearb.h	2380;"	d
GL_VIEW_CLASS_BPTC_UNORM	.\glcorearb.h	2379;"	d
GL_VIEW_CLASS_EAC_R11	.\glcorearb.h	3321;"	d
GL_VIEW_CLASS_EAC_RG11	.\glcorearb.h	3322;"	d
GL_VIEW_CLASS_ETC2_EAC_RGBA	.\glcorearb.h	3325;"	d
GL_VIEW_CLASS_ETC2_RGB	.\glcorearb.h	3323;"	d
GL_VIEW_CLASS_ETC2_RGBA	.\glcorearb.h	3324;"	d
GL_VIEW_CLASS_RGTC1_RED	.\glcorearb.h	2377;"	d
GL_VIEW_CLASS_RGTC2_RG	.\glcorearb.h	2378;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	.\glcorearb.h	2373;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	.\glcorearb.h	2374;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	.\glcorearb.h	2375;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	.\glcorearb.h	2376;"	d
GL_VIEW_COMPATIBILITY_CLASS	.\glcorearb.h	2351;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	.\glcorearb.h	3607;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	.\glcorearb.h	3610;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	.\glcorearb.h	3611;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	.\glcorearb.h	3612;"	d
GL_VIVIDLIGHT_NV	.\glcorearb.h	4876;"	d
GL_WAIT_FAILED	.\glcorearb.h	1522;"	d
GL_WARPS_PER_SM_NV	.\glcorearb.h	5730;"	d
GL_WARP_SIZE_NV	.\glcorearb.h	5729;"	d
GL_WEIGHTED_AVERAGE_ARB	.\glcorearb.h	3707;"	d
GL_WEIGHTED_AVERAGE_EXT	.\glcorearb.h	4657;"	d
GL_WINDOW_RECTANGLE_EXT	.\glcorearb.h	4680;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	.\glcorearb.h	4681;"	d
GL_WRITE_ONLY	.\glcorearb.h	612;"	d
GL_XOR	.\glcorearb.h	201;"	d
GL_XOR_NV	.\glcorearb.h	4877;"	d
GL_ZERO	.\glcorearb.h	93;"	d
GL_ZERO_TO_ONE	.\glcorearb.h	2598;"	d
GLbitfield	.\glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t
GLboolean	.\glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t
GLbyte	.\glcorearb.h	/^typedef khronos_int8_t GLbyte;$/;"	t
GLchar	.\glcorearb.h	/^typedef char GLchar;$/;"	t
GLclampd	.\glcorearb.h	/^typedef double GLclampd;$/;"	t
GLclampf	.\glcorearb.h	/^typedef khronos_float_t GLclampf;$/;"	t
GLdouble	.\glcorearb.h	/^typedef double GLdouble;$/;"	t
GLeglImageOES	.\glcorearb.h	/^typedef void *GLeglImageOES;$/;"	t
GLenum	.\glcorearb.h	/^typedef unsigned int GLenum;$/;"	t
GLfloat	.\glcorearb.h	/^typedef khronos_float_t GLfloat;$/;"	t
GLhalf	.\glcorearb.h	/^typedef khronos_uint16_t GLhalf;$/;"	t
GLint	.\glcorearb.h	/^typedef int GLint;$/;"	t
GLint64	.\glcorearb.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLint64EXT	.\glcorearb.h	/^typedef khronos_int64_t GLint64EXT;$/;"	t
GLintptr	.\glcorearb.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLshort	.\glcorearb.h	/^typedef khronos_int16_t GLshort;$/;"	t
GLsizei	.\glcorearb.h	/^typedef int GLsizei;$/;"	t
GLsizeiptr	.\glcorearb.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t
GLsync	.\glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	.\glcorearb.h	/^typedef khronos_uint8_t GLubyte;$/;"	t
GLuint	.\glcorearb.h	/^typedef unsigned int GLuint;$/;"	t
GLuint64	.\glcorearb.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLuint64EXT	.\glcorearb.h	/^typedef khronos_uint64_t GLuint64EXT;$/;"	t
GLushort	.\glcorearb.h	/^typedef khronos_uint16_t GLushort;$/;"	t
GLvoid	.\glcorearb.h	/^typedef void GLvoid;$/;"	t
HGPUNV	.\wglext.h	/^DECLARE_HANDLE(HGPUNV);$/;"	v
HPBUFFERARB	.\wglext.h	/^DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFEREXT	.\wglext.h	/^DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HPVIDEODEV	.\wglext.h	/^DECLARE_HANDLE(HPVIDEODEV);$/;"	v
HVIDEOINPUTDEVICENV	.\wglext.h	/^DECLARE_HANDLE(HVIDEOINPUTDEVICENV);$/;"	v
HVIDEOOUTPUTDEVICENV	.\wglext.h	/^DECLARE_HANDLE(HVIDEOOUTPUTDEVICENV);$/;"	v
PFNGLACTIVEPROGRAMEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVETEXTUREPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);$/;"	t
PFNGLATTACHSHADERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINPERFQUERYINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERBASEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERSBASEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);$/;"	t
PFNGLBINDBUFFERSRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDIMAGETEXTURESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDSAMPLERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);$/;"	t
PFNGLBINDSHADINGRATEIMAGENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSHADINGRATEIMAGENVPROC) (GLuint texture);$/;"	t
PFNGLBINDTEXTUREPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTURESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDTEXTUREUNITPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBINDVERTEXBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLBLENDBARRIERKHRPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t
PFNGLBLENDBARRIERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t
PFNGLBLENDCOLORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDPARAMETERINVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITNAMEDFRAMEBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERATTACHMEMORYNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offset);$/;"	t
PFNGLBUFFERDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLBUFFERPAGECOMMITMENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLBUFFERPAGECOMMITMENTMEMNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);$/;"	t
PFNGLBUFFERSTORAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCALLCOMMANDLISTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARBUFFERDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERFIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARDEPTHDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARDEPTHPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t
PFNGLCLEARSTENCILPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t
PFNGLCLEARTEXIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARTEXSUBIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIPCONTROLPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t
PFNGLCOLORFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORMASKIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLCOMMANDLISTSEGMENTSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t
PFNGLCOMPILECOMMANDLISTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t
PFNGLCOPYTEXIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOVERAGEMODULATIONNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t
PFNGLCOVERAGEMODULATIONTABLENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);$/;"	t
PFNGLCOVERFILLPATHINSTANCEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERFILLPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERSTROKEPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCREATEBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLCREATECOMMANDLISTSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);$/;"	t
PFNGLCREATEFRAMEBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLCREATEPERFQUERYINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t
PFNGLCREATEPROGRAMPIPELINESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLCREATEPROGRAMPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATEQUERIESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATERENDERBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLCREATESAMPLERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t
PFNGLCREATESHADERPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);$/;"	t
PFNGLCREATESTATESNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	.\glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);$/;"	t
PFNGLCREATETEXTURESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t
PFNGLCREATETRANSFORMFEEDBACKSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATEVERTEXARRAYSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLCULLFACEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDELETEBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETECOMMANDLISTSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETEPATHSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPERFQUERYINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEQUERIESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESHADERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESTATESNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);$/;"	t
PFNGLDELETESYNCPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDEPTHBOUNDSDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t
PFNGLDEPTHFUNCPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t
PFNGLDEPTHMASKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t
PFNGLDEPTHRANGEARRAYDVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYDVNVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLDEPTHRANGEFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEINDEXEDDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDDNVPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble n, GLdouble f);$/;"	t
PFNGLDETACHSHADERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDISABLECLIENTSTATEIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWARRAYSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);$/;"	t
PFNGLDRAWBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWCOMMANDSADDRESSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWELEMENTSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWMESHTASKSINDIRECTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect);$/;"	t
PFNGLDRAWMESHTASKSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWMESHTASKSNVPROC) (GLuint first, GLuint count);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLDRAWVKIMAGENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES image, const GLint* attrib_list);$/;"	t
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImageOES image, const GLint* attrib_list);$/;"	t
PFNGLENABLECLIENTSTATEIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDPERFMONITORAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDPERFQUERYINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLENDQUERYINDEXEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLEVALUATEDEPTHVALUESARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);$/;"	t
PFNGLFENCESYNCPROC	.\glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINISHPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFRAGMENTCOVERAGECOLORNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIMESAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIMESAPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRONTFACEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t
PFNGLGENBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENPATHSNVPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENQUERIESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENTEXTURESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATTRIBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETCOMMANDHEADERNVPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);$/;"	t
PFNGLGETDOUBLEI_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);$/;"	t
PFNGLGETERRORPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t
PFNGLGETFIRSTPERFQUERYIDINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t
PFNGLGETFLOATI_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t
PFNGLGETIMAGEHANDLEARBPROC	.\glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETIMAGEHANDLENVPROC	.\glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETINTEGER64I_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);$/;"	t
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);$/;"	t
PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) (GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNEXTPERFQUERYIDINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNTEXIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMDVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETNUNIFORMUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTLABELEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETPATHCOMMANDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t
PFNGLGETPATHCOORDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t
PFNGLGETPATHDASHARRAYNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t
PFNGLGETPATHLENGTHNVPROC	.\glcorearb.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	t
PFNGLGETPATHMETRICRANGENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHMETRICSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHPARAMETERFVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHPARAMETERIVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHSPACINGNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	t
PFNGLGETPERFCOUNTERINFOINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPERFQUERYDATAINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten);$/;"	t
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);$/;"	t
PFNGLGETPERFQUERYINFOINTELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);$/;"	t
PFNGLGETPOINTERI_VEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t
PFNGLGETPOINTERVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t
PFNGLGETPROGRAMBINARYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEFVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETQUERYBUFFEROBJECTI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERINFOLOGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHADINGRATEIMAGEPALETTENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint entry, GLenum *rate);$/;"	t
PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) (GLenum rate, GLuint samples, GLuint index, GLint *location);$/;"	t
PFNGLGETSTAGEINDEXNVPROC	.\glcorearb.h	/^typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t
PFNGLGETSTRINGIPROC	.\glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSTRINGPROC	.\glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXLEVELPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREHANDLEARBPROC	.\glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREHANDLENVPROC	.\glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXTUREIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	.\glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLENVPROC	.\glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESUBIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI_VPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	.\glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMDVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *params);$/;"	t
PFNGLGETUNIFORMI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	.\glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *params);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVERTEXARRAYINDEXED64IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);$/;"	t
PFNGLGETVERTEXARRAYINDEXEDIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVKPROCADDRNVPROC	.\glcorearb.h	/^typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);$/;"	t
PFNGLHINTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLINDEXFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINSERTEVENTMARKEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLINTERPOLATEPATHSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLISBUFFERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISCOMMANDLISTNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t
PFNGLISFRAMEBUFFERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISIMAGEHANDLERESIDENTARBPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISIMAGEHANDLERESIDENTNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISPATHNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t
PFNGLISPOINTINFILLPATHNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	t
PFNGLISPOINTINSTROKEPATHNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSHADERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSTATENVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);$/;"	t
PFNGLISSYNCPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTARBPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVERTEXARRAYPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLLABELOBJECTEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	t
PFNGLLINEWIDTHPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t
PFNGLLINKPROGRAMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLLOGICOPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAPBUFFERPROC	.\glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	.\glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	.\glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERPROC	.\glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	.\glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEPROC	.\glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXLOAD3X2FNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOAD3X3FNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X2FNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X3FNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);$/;"	t
PFNGLMEMORYBARRIERBYREGIONPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) (GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLNAMEDBUFFERATTACHMEMORYNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) (GLuint buffer, GLuint memory, GLuint64 offset);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERSTORAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSTORAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDBUFFERSUBDATAPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDSTRINGARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNORMALFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLOBJECTLABELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLPATCHPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPATHCOMMANDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOORDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOVERDEPTHFUNCNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t
PFNGLPATHDASHARRAYNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	t
PFNGLPATHGLYPHINDEXARRAYNVPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHINDEXRANGENVPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);$/;"	t
PFNGLPATHGLYPHRANGENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	.\glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHPARAMETERFNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t
PFNGLPATHPARAMETERFVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);$/;"	t
PFNGLPATHPARAMETERINVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t
PFNGLPATHPARAMETERIVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);$/;"	t
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPATHSTENCILFUNCNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLPATHSTRINGNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);$/;"	t
PFNGLPATHSUBCOMMANDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHSUBCOORDSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELSTOREFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELSTOREIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTALONGPATHNVPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	t
PFNGLPOINTPARAMETERFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTSIZEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t
PFNGLPOLYGONMODEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLPOLYGONOFFSETCLAMPEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	t
PFNGLPOLYGONOFFSETCLAMPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	t
PFNGLPOLYGONOFFSETPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPOPDEBUGGROUPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPOPGROUPMARKEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPROGRAMBINARYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	t
PFNGLPROGRAMUNIFORM1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROVOKINGVERTEXPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHGROUPMARKEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLQUERYCOUNTERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLRASTERSAMPLESEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);$/;"	t
PFNGLREADBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);$/;"	t
PFNGLREADNPIXELSARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADNPIXELSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADPIXELSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRESETMEMORYOBJECTPARAMETERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) (GLuint memory, GLenum pname);$/;"	t
PFNGLRESOLVEDEPTHVALUESNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCISSORARRAYVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSOREXCLUSIVEARRAYVNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSOREXCLUSIVENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVENVPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSCISSORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSHADERBINARYPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);$/;"	t
PFNGLSHADERSOURCEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSHADINGRATEIMAGEBARRIERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEBARRIERNVPROC) (GLboolean synchronize);$/;"	t
PFNGLSHADINGRATEIMAGEPALETTENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint first, GLsizei count, const GLenum *rates);$/;"	t
PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) (GLenum rate, GLuint samples, const GLint *locations);$/;"	t
PFNGLSHADINGRATESAMPLEORDERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERNVPROC) (GLenum order);$/;"	t
PFNGLSIGNALVKFENCENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t
PFNGLSIGNALVKSEMAPHORENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLSPECIALIZESHADERARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	t
PFNGLSPECIALIZESHADERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	t
PFNGLSTATECAPTURENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILFILLPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t
PFNGLSTENCILFUNCPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILSTROKEPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSUBPIXELPRECISIONBIASNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t
PFNGLTEXATTACHMEMORYNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXBUFFERARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXPAGECOMMITMENTARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXPAGECOMMITMENTMEMNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);$/;"	t
PFNGLTEXPARAMETERFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXSTORAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSUBIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREATTACHMEMORYNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREATTACHMEMORYNVPROC) (GLuint texture, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBARRIERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREBUFFERRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREVIEWPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMPATHNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLUNIFORM1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t
PFNGLUNIFORM1I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t
PFNGLUNIFORM1I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM1I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM1IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t
PFNGLUNIFORM1UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t
PFNGLUNIFORM1UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM1UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM1UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLUNIFORM2I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLUNIFORM2I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM2I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM2IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLUNIFORM2UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLUNIFORM2UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM2UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM2UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLUNIFORM3I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLUNIFORM3I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM3I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM3IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLUNIFORM3UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLUNIFORM3UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM3UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM3UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4I64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLUNIFORM4I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLUNIFORM4I64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM4I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM4IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLUNIFORM4UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLUNIFORM4UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM4UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM4UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMHANDLEUI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMHANDLEUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMUI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNMAPBUFFERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPNAMEDBUFFERPROC	.\glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLUSEPROGRAMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVERTEXARRAYATTRIBBINDINGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYATTRIBFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBIFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBLFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYBINDINGDIVISORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYELEMENTBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXATTRIB1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1SPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2SPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3SPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64ARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64VARBPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4I64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4I64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4UI64NVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4UI64VNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXFORMATNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVIEWPORTARRAYVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVIEWPORTPOSITIONWSCALENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloat ycoeff);$/;"	t
PFNGLVIEWPORTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLVIEWPORTSWIZZLENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);$/;"	t
PFNGLWAITSYNCPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITVKSEMAPHORENVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLWEIGHTPATHSNVPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	t
PFNGLWINDOWRECTANGLESEXTPROC	.\glcorearb.h	/^typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint *box);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	.\wglext.h	/^typedef void *(WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	.\wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDSWAPBARRIERNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDSWAPBARRIERNVPROC) (GLuint group, GLuint barrier);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLBINDVIDEOCAPTUREDEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOCAPTUREDEVICENVPROC) (UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);$/;"	t
PFNWGLBINDVIDEODEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);$/;"	t
PFNWGLBINDVIDEOIMAGENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	t
PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC	.\wglext.h	/^typedef VOID (WINAPI * PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC) (HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCOPYIMAGESUBDATANVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLCOPYIMAGESUBDATANVPROC) (HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNWGLCREATEAFFINITYDCNVPROC	.\wglext.h	/^typedef HDC (WINAPI * PFNWGLCREATEAFFINITYDCNVPROC) (const HGPUNV *phGpuList);$/;"	t
PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC	.\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC) (UINT id);$/;"	t
PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC	.\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (UINT id, HGLRC hShareContext, const int *attribList);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	.\wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATECONTEXTATTRIBSARBPROC	.\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC, HGLRC hShareContext, const int *attribList);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	.\wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	.\wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	.\wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	.\wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLDELAYBEFORESWAPNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELAYBEFORESWAPNVPROC) (HDC hDC, GLfloat seconds);$/;"	t
PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC) (HGLRC hglrc);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	.\wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDELETEDCNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELETEDCNVPROC) (HDC hdc);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	.\wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLDXCLOSEDEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXCLOSEDEVICENVPROC) (HANDLE hDevice);$/;"	t
PFNWGLDXLOCKOBJECTSNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	t
PFNWGLDXOBJECTACCESSNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);$/;"	t
PFNWGLDXOPENDEVICENVPROC	.\wglext.h	/^typedef HANDLE (WINAPI * PFNWGLDXOPENDEVICENVPROC) (void *dxDevice);$/;"	t
PFNWGLDXREGISTEROBJECTNVPROC	.\wglext.h	/^typedef HANDLE (WINAPI * PFNWGLDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);$/;"	t
PFNWGLDXSETRESOURCESHAREHANDLENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);$/;"	t
PFNWGLDXUNLOCKOBJECTSNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	t
PFNWGLDXUNREGISTEROBJECTNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC	.\wglext.h	/^typedef UINT (WINAPI * PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC) (HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);$/;"	t
PFNWGLENUMERATEVIDEODEVICESNVPROC	.\wglext.h	/^typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);$/;"	t
PFNWGLENUMGPUDEVICESNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUDEVICESNVPROC) (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);$/;"	t
PFNWGLENUMGPUSFROMAFFINITYDCNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSFROMAFFINITYDCNVPROC) (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);$/;"	t
PFNWGLENUMGPUSNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSNVPROC) (UINT iGpuIndex, HGPUNV *phGpu);$/;"	t
PFNWGLFREEMEMORYNVPROC	.\wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGETCONTEXTGPUIDAMDPROC	.\wglext.h	/^typedef UINT (WINAPI * PFNWGLGETCONTEXTGPUIDAMDPROC) (HGLRC hglrc);$/;"	t
PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC	.\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	.\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	.\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	.\wglext.h	/^typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	.\wglext.h	/^typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t
PFNWGLGETGPUIDSAMDPROC	.\wglext.h	/^typedef UINT (WINAPI * PFNWGLGETGPUIDSAMDPROC) (UINT maxCount, UINT *ids);$/;"	t
PFNWGLGETGPUINFOAMDPROC	.\wglext.h	/^typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, INT property, GLenum dataType, UINT size, void *data);$/;"	t
PFNWGLGETMSCRATEOMLPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	.\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	.\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	.\wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLGETVIDEODEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEODEVICENVPROC) (HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);$/;"	t
PFNWGLGETVIDEOINFONVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t
PFNWGLJOINSWAPGROUPNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLJOINSWAPGROUPNVPROC) (HDC hDC, GLuint group);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	.\wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);$/;"	t
PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	t
PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLQUERYCURRENTCONTEXTNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYCURRENTCONTEXTNVPROC) (int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYFRAMECOUNTNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMECOUNTNVPROC) (HDC hDC, GLuint *count);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	t
PFNWGLQUERYMAXSWAPGROUPSNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYMAXSWAPGROUPSNVPROC) (HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYSWAPGROUPNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYSWAPGROUPNVPROC) (HDC hDC, GLuint *group, GLuint *barrier);$/;"	t
PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	.\wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	.\wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	t
PFNWGLRELEASEVIDEODEVICENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV hVideoDevice);$/;"	t
PFNWGLRELEASEVIDEOIMAGENVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	t
PFNWGLRESETFRAMECOUNTNVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESETFRAMECOUNTNVPROC) (HDC hDC);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSENDPBUFFERTOVIDEONVPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	t
PFNWGLSETSTEREOEMITTERSTATE3DLPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	.\wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	.\wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLWAITFORMSCOMLPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	.\wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PGPU_DEVICE	.\wglext.h	/^typedef struct _GPU_DEVICE *PGPU_DEVICE;$/;"	t	typeref:struct:_GPU_DEVICE
WGL_3DFX_multisample	.\wglext.h	272;"	d
WGL_3DL_stereo_control	.\wglext.h	278;"	d
WGL_ACCELERATION_ARB	.\wglext.h	156;"	d
WGL_ACCELERATION_EXT	.\wglext.h	430;"	d
WGL_ACCESS_READ_ONLY_NV	.\wglext.h	616;"	d
WGL_ACCESS_READ_WRITE_NV	.\wglext.h	617;"	d
WGL_ACCESS_WRITE_DISCARD_NV	.\wglext.h	618;"	d
WGL_ACCUM_ALPHA_BITS_ARB	.\wglext.h	190;"	d
WGL_ACCUM_ALPHA_BITS_EXT	.\wglext.h	460;"	d
WGL_ACCUM_BITS_ARB	.\wglext.h	186;"	d
WGL_ACCUM_BITS_EXT	.\wglext.h	456;"	d
WGL_ACCUM_BLUE_BITS_ARB	.\wglext.h	189;"	d
WGL_ACCUM_BLUE_BITS_EXT	.\wglext.h	459;"	d
WGL_ACCUM_GREEN_BITS_ARB	.\wglext.h	188;"	d
WGL_ACCUM_GREEN_BITS_EXT	.\wglext.h	458;"	d
WGL_ACCUM_RED_BITS_ARB	.\wglext.h	187;"	d
WGL_ACCUM_RED_BITS_EXT	.\wglext.h	457;"	d
WGL_ALPHA_BITS_ARB	.\wglext.h	184;"	d
WGL_ALPHA_BITS_EXT	.\wglext.h	454;"	d
WGL_ALPHA_SHIFT_ARB	.\wglext.h	185;"	d
WGL_ALPHA_SHIFT_EXT	.\wglext.h	455;"	d
WGL_AMD_gpu_association	.\wglext.h	290;"	d
WGL_ARB_buffer_region	.\wglext.h	35;"	d
WGL_ARB_context_flush_control	.\wglext.h	53;"	d
WGL_ARB_create_context	.\wglext.h	60;"	d
WGL_ARB_create_context_no_error	.\wglext.h	75;"	d
WGL_ARB_create_context_profile	.\wglext.h	80;"	d
WGL_ARB_create_context_robustness	.\wglext.h	88;"	d
WGL_ARB_extensions_string	.\wglext.h	96;"	d
WGL_ARB_framebuffer_sRGB	.\wglext.h	104;"	d
WGL_ARB_make_current_read	.\wglext.h	109;"	d
WGL_ARB_multisample	.\wglext.h	121;"	d
WGL_ARB_pbuffer	.\wglext.h	127;"	d
WGL_ARB_pixel_format	.\wglext.h	152;"	d
WGL_ARB_pixel_format_float	.\wglext.h	213;"	d
WGL_ARB_render_texture	.\wglext.h	218;"	d
WGL_ARB_robustness_application_isolation	.\wglext.h	263;"	d
WGL_ARB_robustness_share_group_isolation	.\wglext.h	268;"	d
WGL_ATI_pixel_format_float	.\wglext.h	324;"	d
WGL_ATI_render_texture_rectangle	.\wglext.h	329;"	d
WGL_AUX0_ARB	.\wglext.h	242;"	d
WGL_AUX1_ARB	.\wglext.h	243;"	d
WGL_AUX2_ARB	.\wglext.h	244;"	d
WGL_AUX3_ARB	.\wglext.h	245;"	d
WGL_AUX4_ARB	.\wglext.h	246;"	d
WGL_AUX5_ARB	.\wglext.h	247;"	d
WGL_AUX6_ARB	.\wglext.h	248;"	d
WGL_AUX7_ARB	.\wglext.h	249;"	d
WGL_AUX8_ARB	.\wglext.h	250;"	d
WGL_AUX9_ARB	.\wglext.h	251;"	d
WGL_AUX_BUFFERS_ARB	.\wglext.h	193;"	d
WGL_AUX_BUFFERS_EXT	.\wglext.h	463;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	.\wglext.h	37;"	d
WGL_BACK_LEFT_ARB	.\wglext.h	240;"	d
WGL_BACK_RIGHT_ARB	.\wglext.h	241;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	.\wglext.h	730;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	.\wglext.h	731;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	.\wglext.h	665;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	.\wglext.h	664;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	.\wglext.h	663;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	.\wglext.h	662;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	.\wglext.h	740;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	.\wglext.h	739;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	.\wglext.h	220;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	.\wglext.h	219;"	d
WGL_BIND_TO_VIDEO_RGBA_NV	.\wglext.h	795;"	d
WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV	.\wglext.h	796;"	d
WGL_BIND_TO_VIDEO_RGB_NV	.\wglext.h	794;"	d
WGL_BLUE_BITS_ARB	.\wglext.h	182;"	d
WGL_BLUE_BITS_EXT	.\wglext.h	452;"	d
WGL_BLUE_SHIFT_ARB	.\wglext.h	183;"	d
WGL_BLUE_SHIFT_EXT	.\wglext.h	453;"	d
WGL_COLORSPACE_EXT	.\wglext.h	335;"	d
WGL_COLORSPACE_LINEAR_EXT	.\wglext.h	337;"	d
WGL_COLORSPACE_SRGB_EXT	.\wglext.h	336;"	d
WGL_COLOR_BITS_ARB	.\wglext.h	177;"	d
WGL_COLOR_BITS_EXT	.\wglext.h	447;"	d
WGL_COLOR_SAMPLES_NV	.\wglext.h	711;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	.\wglext.h	83;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	.\wglext.h	82;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	.\wglext.h	61;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	.\wglext.h	342;"	d
WGL_CONTEXT_ES_PROFILE_BIT_EXT	.\wglext.h	347;"	d
WGL_CONTEXT_FLAGS_ARB	.\wglext.h	66;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	.\wglext.h	62;"	d
WGL_CONTEXT_LAYER_PLANE_ARB	.\wglext.h	65;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	.\wglext.h	63;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	.\wglext.h	64;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV	.\wglext.h	703;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV	.\wglext.h	704;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV	.\wglext.h	705;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_NV	.\wglext.h	701;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV	.\wglext.h	702;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	.\wglext.h	76;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	.\wglext.h	81;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	.\wglext.h	54;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	.\wglext.h	56;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	.\wglext.h	55;"	d
WGL_CONTEXT_RESET_ISOLATION_BIT_ARB	.\wglext.h	264;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	.\wglext.h	91;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	.\wglext.h	89;"	d
WGL_COVERAGE_SAMPLES_NV	.\wglext.h	710;"	d
WGL_CUBE_MAP_FACE_ARB	.\wglext.h	231;"	d
WGL_DEPTH_BITS_ARB	.\wglext.h	191;"	d
WGL_DEPTH_BITS_EXT	.\wglext.h	461;"	d
WGL_DEPTH_BUFFER_BIT_ARB	.\wglext.h	38;"	d
WGL_DEPTH_COMPONENT_NV	.\wglext.h	734;"	d
WGL_DEPTH_FLOAT_EXT	.\wglext.h	352;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	.\wglext.h	732;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	.\wglext.h	503;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	.\wglext.h	504;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	.\wglext.h	505;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	.\wglext.h	506;"	d
WGL_DOUBLE_BUFFER_ARB	.\wglext.h	174;"	d
WGL_DOUBLE_BUFFER_EXT	.\wglext.h	444;"	d
WGL_DRAW_TO_BITMAP_ARB	.\wglext.h	155;"	d
WGL_DRAW_TO_BITMAP_EXT	.\wglext.h	429;"	d
WGL_DRAW_TO_PBUFFER_ARB	.\wglext.h	129;"	d
WGL_DRAW_TO_PBUFFER_EXT	.\wglext.h	402;"	d
WGL_DRAW_TO_WINDOW_ARB	.\wglext.h	154;"	d
WGL_DRAW_TO_WINDOW_EXT	.\wglext.h	428;"	d
WGL_EXT_colorspace	.\wglext.h	334;"	d
WGL_EXT_create_context_es2_profile	.\wglext.h	341;"	d
WGL_EXT_create_context_es_profile	.\wglext.h	346;"	d
WGL_EXT_depth_float	.\wglext.h	351;"	d
WGL_EXT_display_color_table	.\wglext.h	356;"	d
WGL_EXT_extensions_string	.\wglext.h	370;"	d
WGL_EXT_framebuffer_sRGB	.\wglext.h	378;"	d
WGL_EXT_make_current_read	.\wglext.h	383;"	d
WGL_EXT_multisample	.\wglext.h	394;"	d
WGL_EXT_pbuffer	.\wglext.h	400;"	d
WGL_EXT_pixel_format	.\wglext.h	426;"	d
WGL_EXT_pixel_format_packed_float	.\wglext.h	483;"	d
WGL_EXT_swap_control	.\wglext.h	488;"	d
WGL_EXT_swap_control_tear	.\wglext.h	498;"	d
WGL_FLOAT_COMPONENTS_NV	.\wglext.h	661;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	.\wglext.h	105;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT	.\wglext.h	379;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	.\wglext.h	36;"	d
WGL_FRONT_LEFT_ARB	.\wglext.h	238;"	d
WGL_FRONT_RIGHT_ARB	.\wglext.h	239;"	d
WGL_FULL_ACCELERATION_ARB	.\wglext.h	196;"	d
WGL_FULL_ACCELERATION_EXT	.\wglext.h	466;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	.\wglext.h	518;"	d
WGL_GAMMA_TABLE_SIZE_I3D	.\wglext.h	517;"	d
WGL_GENERIC_ACCELERATION_ARB	.\wglext.h	195;"	d
WGL_GENERIC_ACCELERATION_EXT	.\wglext.h	465;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	.\wglext.h	538;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	.\wglext.h	537;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	.\wglext.h	541;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	.\wglext.h	539;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	.\wglext.h	540;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D	.\wglext.h	535;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D	.\wglext.h	534;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D	.\wglext.h	536;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	.\wglext.h	533;"	d
WGL_GPU_CLOCK_AMD	.\wglext.h	296;"	d
WGL_GPU_FASTEST_TARGET_GPUS_AMD	.\wglext.h	294;"	d
WGL_GPU_NUM_PIPES_AMD	.\wglext.h	297;"	d
WGL_GPU_NUM_RB_AMD	.\wglext.h	299;"	d
WGL_GPU_NUM_SIMD_AMD	.\wglext.h	298;"	d
WGL_GPU_NUM_SPI_AMD	.\wglext.h	300;"	d
WGL_GPU_OPENGL_VERSION_STRING_AMD	.\wglext.h	293;"	d
WGL_GPU_RAM_AMD	.\wglext.h	295;"	d
WGL_GPU_RENDERER_STRING_AMD	.\wglext.h	292;"	d
WGL_GPU_VENDOR_AMD	.\wglext.h	291;"	d
WGL_GREEN_BITS_ARB	.\wglext.h	180;"	d
WGL_GREEN_BITS_EXT	.\wglext.h	450;"	d
WGL_GREEN_SHIFT_ARB	.\wglext.h	181;"	d
WGL_GREEN_SHIFT_EXT	.\wglext.h	451;"	d
WGL_I3D_digital_video_control	.\wglext.h	502;"	d
WGL_I3D_gamma	.\wglext.h	516;"	d
WGL_I3D_genlock	.\wglext.h	532;"	d
WGL_I3D_image_buffer	.\wglext.h	571;"	d
WGL_I3D_swap_frame_lock	.\wglext.h	587;"	d
WGL_I3D_swap_frame_usage	.\wglext.h	601;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	.\wglext.h	573;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	.\wglext.h	572;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	.\wglext.h	90;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	.\wglext.h	132;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	.\wglext.h	405;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	.\wglext.h	130;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	.\wglext.h	403;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	.\wglext.h	131;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	.\wglext.h	404;"	d
WGL_MIPMAP_LEVEL_ARB	.\wglext.h	230;"	d
WGL_MIPMAP_TEXTURE_ARB	.\wglext.h	223;"	d
WGL_NEED_PALETTE_ARB	.\wglext.h	157;"	d
WGL_NEED_PALETTE_EXT	.\wglext.h	431;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	.\wglext.h	158;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	.\wglext.h	432;"	d
WGL_NO_ACCELERATION_ARB	.\wglext.h	194;"	d
WGL_NO_ACCELERATION_EXT	.\wglext.h	464;"	d
WGL_NO_RESET_NOTIFICATION_ARB	.\wglext.h	92;"	d
WGL_NO_TEXTURE_ARB	.\wglext.h	226;"	d
WGL_NUMBER_OVERLAYS_ARB	.\wglext.h	161;"	d
WGL_NUMBER_OVERLAYS_EXT	.\wglext.h	435;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	.\wglext.h	153;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	.\wglext.h	427;"	d
WGL_NUMBER_UNDERLAYS_ARB	.\wglext.h	162;"	d
WGL_NUMBER_UNDERLAYS_EXT	.\wglext.h	436;"	d
WGL_NUM_VIDEO_CAPTURE_SLOTS_NV	.\wglext.h	776;"	d
WGL_NUM_VIDEO_SLOTS_NV	.\wglext.h	717;"	d
WGL_NV_DX_interop	.\wglext.h	615;"	d
WGL_NV_DX_interop2	.\wglext.h	640;"	d
WGL_NV_copy_image	.\wglext.h	644;"	d
WGL_NV_delay_before_swap	.\wglext.h	652;"	d
WGL_NV_float_buffer	.\wglext.h	660;"	d
WGL_NV_gpu_affinity	.\wglext.h	673;"	d
WGL_NV_multigpu_context	.\wglext.h	700;"	d
WGL_NV_multisample_coverage	.\wglext.h	709;"	d
WGL_NV_present_video	.\wglext.h	715;"	d
WGL_NV_render_depth_texture	.\wglext.h	729;"	d
WGL_NV_render_texture_rectangle	.\wglext.h	738;"	d
WGL_NV_swap_group	.\wglext.h	745;"	d
WGL_NV_vertex_array_range	.\wglext.h	763;"	d
WGL_NV_video_capture	.\wglext.h	773;"	d
WGL_NV_video_output	.\wglext.h	792;"	d
WGL_OML_sync_control	.\wglext.h	824;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	.\wglext.h	407;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	.\wglext.h	406;"	d
WGL_PBUFFER_HEIGHT_ARB	.\wglext.h	135;"	d
WGL_PBUFFER_HEIGHT_EXT	.\wglext.h	410;"	d
WGL_PBUFFER_LARGEST_ARB	.\wglext.h	133;"	d
WGL_PBUFFER_LARGEST_EXT	.\wglext.h	408;"	d
WGL_PBUFFER_LOST_ARB	.\wglext.h	136;"	d
WGL_PBUFFER_WIDTH_ARB	.\wglext.h	134;"	d
WGL_PBUFFER_WIDTH_EXT	.\wglext.h	409;"	d
WGL_PIXEL_TYPE_ARB	.\wglext.h	176;"	d
WGL_PIXEL_TYPE_EXT	.\wglext.h	446;"	d
WGL_RED_BITS_ARB	.\wglext.h	178;"	d
WGL_RED_BITS_EXT	.\wglext.h	448;"	d
WGL_RED_SHIFT_ARB	.\wglext.h	179;"	d
WGL_RED_SHIFT_EXT	.\wglext.h	449;"	d
WGL_SAMPLES_3DFX	.\wglext.h	274;"	d
WGL_SAMPLES_ARB	.\wglext.h	123;"	d
WGL_SAMPLES_EXT	.\wglext.h	396;"	d
WGL_SAMPLE_BUFFERS_3DFX	.\wglext.h	273;"	d
WGL_SAMPLE_BUFFERS_ARB	.\wglext.h	122;"	d
WGL_SAMPLE_BUFFERS_EXT	.\wglext.h	395;"	d
WGL_SHARE_ACCUM_ARB	.\wglext.h	171;"	d
WGL_SHARE_ACCUM_EXT	.\wglext.h	441;"	d
WGL_SHARE_DEPTH_ARB	.\wglext.h	169;"	d
WGL_SHARE_DEPTH_EXT	.\wglext.h	439;"	d
WGL_SHARE_STENCIL_ARB	.\wglext.h	170;"	d
WGL_SHARE_STENCIL_EXT	.\wglext.h	440;"	d
WGL_STENCIL_BITS_ARB	.\wglext.h	192;"	d
WGL_STENCIL_BITS_EXT	.\wglext.h	462;"	d
WGL_STENCIL_BUFFER_BIT_ARB	.\wglext.h	39;"	d
WGL_STEREO_ARB	.\wglext.h	175;"	d
WGL_STEREO_EMITTER_DISABLE_3DL	.\wglext.h	280;"	d
WGL_STEREO_EMITTER_ENABLE_3DL	.\wglext.h	279;"	d
WGL_STEREO_EXT	.\wglext.h	445;"	d
WGL_STEREO_POLARITY_INVERT_3DL	.\wglext.h	282;"	d
WGL_STEREO_POLARITY_NORMAL_3DL	.\wglext.h	281;"	d
WGL_SUPPORT_GDI_ARB	.\wglext.h	172;"	d
WGL_SUPPORT_GDI_EXT	.\wglext.h	442;"	d
WGL_SUPPORT_OPENGL_ARB	.\wglext.h	173;"	d
WGL_SUPPORT_OPENGL_EXT	.\wglext.h	443;"	d
WGL_SWAP_COPY_ARB	.\wglext.h	198;"	d
WGL_SWAP_COPY_EXT	.\wglext.h	468;"	d
WGL_SWAP_EXCHANGE_ARB	.\wglext.h	197;"	d
WGL_SWAP_EXCHANGE_EXT	.\wglext.h	467;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	.\wglext.h	159;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	.\wglext.h	433;"	d
WGL_SWAP_METHOD_ARB	.\wglext.h	160;"	d
WGL_SWAP_METHOD_EXT	.\wglext.h	434;"	d
WGL_SWAP_UNDEFINED_ARB	.\wglext.h	199;"	d
WGL_SWAP_UNDEFINED_EXT	.\wglext.h	469;"	d
WGL_TEXTURE_1D_ARB	.\wglext.h	228;"	d
WGL_TEXTURE_2D_ARB	.\wglext.h	229;"	d
WGL_TEXTURE_CUBE_MAP_ARB	.\wglext.h	227;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	.\wglext.h	233;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	.\wglext.h	235;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	.\wglext.h	237;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	.\wglext.h	232;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	.\wglext.h	234;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	.\wglext.h	236;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	.\wglext.h	733;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	.\wglext.h	669;"	d
WGL_TEXTURE_FLOAT_RGB_NV	.\wglext.h	668;"	d
WGL_TEXTURE_FLOAT_RG_NV	.\wglext.h	667;"	d
WGL_TEXTURE_FLOAT_R_NV	.\wglext.h	666;"	d
WGL_TEXTURE_FORMAT_ARB	.\wglext.h	221;"	d
WGL_TEXTURE_RECTANGLE_ATI	.\wglext.h	330;"	d
WGL_TEXTURE_RECTANGLE_NV	.\wglext.h	741;"	d
WGL_TEXTURE_RGBA_ARB	.\wglext.h	225;"	d
WGL_TEXTURE_RGB_ARB	.\wglext.h	224;"	d
WGL_TEXTURE_TARGET_ARB	.\wglext.h	222;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	.\wglext.h	167;"	d
WGL_TRANSPARENT_ARB	.\wglext.h	163;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	.\wglext.h	166;"	d
WGL_TRANSPARENT_EXT	.\wglext.h	437;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	.\wglext.h	165;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	.\wglext.h	168;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	.\wglext.h	164;"	d
WGL_TRANSPARENT_VALUE_EXT	.\wglext.h	438;"	d
WGL_TYPE_COLORINDEX_ARB	.\wglext.h	201;"	d
WGL_TYPE_COLORINDEX_EXT	.\wglext.h	471;"	d
WGL_TYPE_RGBA_ARB	.\wglext.h	200;"	d
WGL_TYPE_RGBA_EXT	.\wglext.h	470;"	d
WGL_TYPE_RGBA_FLOAT_ARB	.\wglext.h	214;"	d
WGL_TYPE_RGBA_FLOAT_ATI	.\wglext.h	325;"	d
WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT	.\wglext.h	484;"	d
WGL_UNIQUE_ID_NV	.\wglext.h	775;"	d
WGL_VIDEO_OUT_ALPHA_NV	.\wglext.h	798;"	d
WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV	.\wglext.h	800;"	d
WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV	.\wglext.h	801;"	d
WGL_VIDEO_OUT_COLOR_NV	.\wglext.h	797;"	d
WGL_VIDEO_OUT_DEPTH_NV	.\wglext.h	799;"	d
WGL_VIDEO_OUT_FIELD_1	.\wglext.h	803;"	d
WGL_VIDEO_OUT_FIELD_2	.\wglext.h	804;"	d
WGL_VIDEO_OUT_FRAME	.\wglext.h	802;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_1_2	.\wglext.h	805;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_2_1	.\wglext.h	806;"	d
WGL_WGLEXT_VERSION	.\wglext.h	23;"	d
WIN32_LEAN_AND_MEAN	.\glcorearb.h	20;"	d
WIN32_LEAN_AND_MEAN	.\wglext.h	19;"	d
_GPU_DEVICE	.\wglext.h	/^struct _GPU_DEVICE {$/;"	s
_GPU_DEVICE::DeviceName	.\wglext.h	/^    CHAR   DeviceName[32];$/;"	m	struct:_GPU_DEVICE
_GPU_DEVICE::DeviceString	.\wglext.h	/^    CHAR   DeviceString[128];$/;"	m	struct:_GPU_DEVICE
_GPU_DEVICE::Flags	.\wglext.h	/^    DWORD  Flags;$/;"	m	struct:_GPU_DEVICE
_GPU_DEVICE::cb	.\wglext.h	/^    DWORD  cb;$/;"	m	struct:_GPU_DEVICE
_GPU_DEVICE::rcVirtualScreen	.\wglext.h	/^    RECT   rcVirtualScreen;$/;"	m	struct:_GPU_DEVICE
__gl_glcorearb_h_	.\glcorearb.h	2;"	d
__wgl_wglext_h_	.\wglext.h	2;"	d
cb	.\wglext.h	/^    DWORD  cb;$/;"	m	struct:_GPU_DEVICE
glActiveProgramEXT	.\glcorearb.h	/^GLAPI void APIENTRY glActiveProgramEXT (GLuint program);$/;"	p
glActiveShaderProgram	.\glcorearb.h	/^GLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);$/;"	p
glActiveTexture	.\glcorearb.h	/^GLAPI void APIENTRY glActiveTexture (GLenum texture);$/;"	p
glApplyFramebufferAttachmentCMAAINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glApplyFramebufferAttachmentCMAAINTEL (void);$/;"	p
glAttachShader	.\glcorearb.h	/^GLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p
glBeginConditionalRender	.\glcorearb.h	/^GLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);$/;"	p
glBeginConditionalRenderNV	.\glcorearb.h	/^GLAPI void APIENTRY glBeginConditionalRenderNV (GLuint id, GLenum mode);$/;"	p
glBeginPerfMonitorAMD	.\glcorearb.h	/^GLAPI void APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p
glBeginPerfQueryINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glBeginPerfQueryINTEL (GLuint queryHandle);$/;"	p
glBeginQuery	.\glcorearb.h	/^GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);$/;"	p
glBeginQueryIndexed	.\glcorearb.h	/^GLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);$/;"	p
glBeginTransformFeedback	.\glcorearb.h	/^GLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);$/;"	p
glBindAttribLocation	.\glcorearb.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);$/;"	p
glBindBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p
glBindBufferBase	.\glcorearb.h	/^GLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);$/;"	p
glBindBufferRange	.\glcorearb.h	/^GLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p
glBindBuffersBase	.\glcorearb.h	/^GLAPI void APIENTRY glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);$/;"	p
glBindBuffersRange	.\glcorearb.h	/^GLAPI void APIENTRY glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);$/;"	p
glBindFragDataLocation	.\glcorearb.h	/^GLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);$/;"	p
glBindFragDataLocationIndexed	.\glcorearb.h	/^GLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	p
glBindFramebuffer	.\glcorearb.h	/^GLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p
glBindImageTexture	.\glcorearb.h	/^GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	p
glBindImageTextures	.\glcorearb.h	/^GLAPI void APIENTRY glBindImageTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	p
glBindMultiTextureEXT	.\glcorearb.h	/^GLAPI void APIENTRY glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);$/;"	p
glBindProgramPipeline	.\glcorearb.h	/^GLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);$/;"	p
glBindRenderbuffer	.\glcorearb.h	/^GLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p
glBindSampler	.\glcorearb.h	/^GLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);$/;"	p
glBindSamplers	.\glcorearb.h	/^GLAPI void APIENTRY glBindSamplers (GLuint first, GLsizei count, const GLuint *samplers);$/;"	p
glBindShadingRateImageNV	.\glcorearb.h	/^GLAPI void APIENTRY glBindShadingRateImageNV (GLuint texture);$/;"	p
glBindTexture	.\glcorearb.h	/^GLAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);$/;"	p
glBindTextureUnit	.\glcorearb.h	/^GLAPI void APIENTRY glBindTextureUnit (GLuint unit, GLuint texture);$/;"	p
glBindTextures	.\glcorearb.h	/^GLAPI void APIENTRY glBindTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	p
glBindTransformFeedback	.\glcorearb.h	/^GLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);$/;"	p
glBindVertexArray	.\glcorearb.h	/^GLAPI void APIENTRY glBindVertexArray (GLuint array);$/;"	p
glBindVertexBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p
glBindVertexBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glBindVertexBuffers (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	p
glBlendBarrierKHR	.\glcorearb.h	/^GLAPI void APIENTRY glBlendBarrierKHR (void);$/;"	p
glBlendBarrierNV	.\glcorearb.h	/^GLAPI void APIENTRY glBlendBarrierNV (void);$/;"	p
glBlendColor	.\glcorearb.h	/^GLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p
glBlendEquation	.\glcorearb.h	/^GLAPI void APIENTRY glBlendEquation (GLenum mode);$/;"	p
glBlendEquationSeparate	.\glcorearb.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p
glBlendEquationSeparatei	.\glcorearb.h	/^GLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p
glBlendEquationSeparateiARB	.\glcorearb.h	/^GLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p
glBlendEquationi	.\glcorearb.h	/^GLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);$/;"	p
glBlendEquationiARB	.\glcorearb.h	/^GLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);$/;"	p
glBlendFunc	.\glcorearb.h	/^GLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$/;"	p
glBlendFuncSeparate	.\glcorearb.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p
glBlendFuncSeparatei	.\glcorearb.h	/^GLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p
glBlendFuncSeparateiARB	.\glcorearb.h	/^GLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p
glBlendFunci	.\glcorearb.h	/^GLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);$/;"	p
glBlendFunciARB	.\glcorearb.h	/^GLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);$/;"	p
glBlendParameteriNV	.\glcorearb.h	/^GLAPI void APIENTRY glBlendParameteriNV (GLenum pname, GLint value);$/;"	p
glBlitFramebuffer	.\glcorearb.h	/^GLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p
glBlitNamedFramebuffer	.\glcorearb.h	/^GLAPI void APIENTRY glBlitNamedFramebuffer (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p
glBufferAddressRangeNV	.\glcorearb.h	/^GLAPI void APIENTRY glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	p
glBufferAttachMemoryNV	.\glcorearb.h	/^GLAPI void APIENTRY glBufferAttachMemoryNV (GLenum target, GLuint memory, GLuint64 offset);$/;"	p
glBufferData	.\glcorearb.h	/^GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	p
glBufferPageCommitmentARB	.\glcorearb.h	/^GLAPI void APIENTRY glBufferPageCommitmentARB (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	p
glBufferPageCommitmentMemNV	.\glcorearb.h	/^GLAPI void APIENTRY glBufferPageCommitmentMemNV (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);$/;"	p
glBufferStorage	.\glcorearb.h	/^GLAPI void APIENTRY glBufferStorage (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	p
glBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p
glCallCommandListNV	.\glcorearb.h	/^GLAPI void APIENTRY glCallCommandListNV (GLuint list);$/;"	p
glCheckFramebufferStatus	.\glcorearb.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p
glCheckNamedFramebufferStatus	.\glcorearb.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatus (GLuint framebuffer, GLenum target);$/;"	p
glCheckNamedFramebufferStatusEXT	.\glcorearb.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);$/;"	p
glClampColor	.\glcorearb.h	/^GLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);$/;"	p
glClear	.\glcorearb.h	/^GLAPI void APIENTRY glClear (GLbitfield mask);$/;"	p
glClearBufferData	.\glcorearb.h	/^GLAPI void APIENTRY glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p
glClearBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p
glClearBufferfi	.\glcorearb.h	/^GLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	p
glClearBufferfv	.\glcorearb.h	/^GLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p
glClearBufferiv	.\glcorearb.h	/^GLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p
glClearBufferuiv	.\glcorearb.h	/^GLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p
glClearColor	.\glcorearb.h	/^GLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p
glClearDepth	.\glcorearb.h	/^GLAPI void APIENTRY glClearDepth (GLdouble depth);$/;"	p
glClearDepthdNV	.\glcorearb.h	/^GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);$/;"	p
glClearDepthf	.\glcorearb.h	/^GLAPI void APIENTRY glClearDepthf (GLfloat d);$/;"	p
glClearNamedBufferData	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedBufferData (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p
glClearNamedBufferDataEXT	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p
glClearNamedBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedBufferSubData (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p
glClearNamedBufferSubDataEXT	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p
glClearNamedFramebufferfi	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedFramebufferfi (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	p
glClearNamedFramebufferfv	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedFramebufferfv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p
glClearNamedFramebufferiv	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedFramebufferiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p
glClearNamedFramebufferuiv	.\glcorearb.h	/^GLAPI void APIENTRY glClearNamedFramebufferuiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p
glClearStencil	.\glcorearb.h	/^GLAPI void APIENTRY glClearStencil (GLint s);$/;"	p
glClearTexImage	.\glcorearb.h	/^GLAPI void APIENTRY glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);$/;"	p
glClearTexSubImage	.\glcorearb.h	/^GLAPI void APIENTRY glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);$/;"	p
glClientAttribDefaultEXT	.\glcorearb.h	/^GLAPI void APIENTRY glClientAttribDefaultEXT (GLbitfield mask);$/;"	p
glClientWaitSync	.\glcorearb.h	/^GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p
glClipControl	.\glcorearb.h	/^GLAPI void APIENTRY glClipControl (GLenum origin, GLenum depth);$/;"	p
glColorFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p
glColorMask	.\glcorearb.h	/^GLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p
glColorMaski	.\glcorearb.h	/^GLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p
glCommandListSegmentsNV	.\glcorearb.h	/^GLAPI void APIENTRY glCommandListSegmentsNV (GLuint list, GLuint segments);$/;"	p
glCompileCommandListNV	.\glcorearb.h	/^GLAPI void APIENTRY glCompileCommandListNV (GLuint list);$/;"	p
glCompileShader	.\glcorearb.h	/^GLAPI void APIENTRY glCompileShader (GLuint shader);$/;"	p
glCompileShaderIncludeARB	.\glcorearb.h	/^GLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);$/;"	p
glCompressedMultiTexImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	p
glCompressedMultiTexImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	p
glCompressedMultiTexImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	p
glCompressedMultiTexSubImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	p
glCompressedMultiTexSubImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	p
glCompressedMultiTexSubImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	p
glCompressedTexImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	p
glCompressedTexImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	p
glCompressedTexImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	p
glCompressedTexSubImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	p
glCompressedTexSubImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	p
glCompressedTexSubImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	p
glCompressedTextureImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	p
glCompressedTextureImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	p
glCompressedTextureImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	p
glCompressedTextureSubImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	p
glCompressedTextureSubImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	p
glCompressedTextureSubImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	p
glCompressedTextureSubImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	p
glCompressedTextureSubImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	p
glCompressedTextureSubImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	p
glConservativeRasterParameterfNV	.\glcorearb.h	/^GLAPI void APIENTRY glConservativeRasterParameterfNV (GLenum pname, GLfloat value);$/;"	p
glConservativeRasterParameteriNV	.\glcorearb.h	/^GLAPI void APIENTRY glConservativeRasterParameteriNV (GLenum pname, GLint param);$/;"	p
glCopyBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p
glCopyImageSubData	.\glcorearb.h	/^GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	p
glCopyMultiTexImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p
glCopyMultiTexImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p
glCopyMultiTexSubImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p
glCopyMultiTexSubImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyMultiTexSubImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyNamedBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glCopyNamedBufferSubData (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p
glCopyPathNV	.\glcorearb.h	/^GLAPI void APIENTRY glCopyPathNV (GLuint resultPath, GLuint srcPath);$/;"	p
glCopyTexImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p
glCopyTexImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p
glCopyTexSubImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p
glCopyTexSubImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyTexSubImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyTextureImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p
glCopyTextureImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p
glCopyTextureSubImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p
glCopyTextureSubImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p
glCopyTextureSubImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyTextureSubImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyTextureSubImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCopyTextureSubImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glCoverFillPathInstancedNV	.\glcorearb.h	/^GLAPI void APIENTRY glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p
glCoverFillPathNV	.\glcorearb.h	/^GLAPI void APIENTRY glCoverFillPathNV (GLuint path, GLenum coverMode);$/;"	p
glCoverStrokePathInstancedNV	.\glcorearb.h	/^GLAPI void APIENTRY glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p
glCoverStrokePathNV	.\glcorearb.h	/^GLAPI void APIENTRY glCoverStrokePathNV (GLuint path, GLenum coverMode);$/;"	p
glCoverageModulationNV	.\glcorearb.h	/^GLAPI void APIENTRY glCoverageModulationNV (GLenum components);$/;"	p
glCoverageModulationTableNV	.\glcorearb.h	/^GLAPI void APIENTRY glCoverageModulationTableNV (GLsizei n, const GLfloat *v);$/;"	p
glCreateBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glCreateBuffers (GLsizei n, GLuint *buffers);$/;"	p
glCreateCommandListsNV	.\glcorearb.h	/^GLAPI void APIENTRY glCreateCommandListsNV (GLsizei n, GLuint *lists);$/;"	p
glCreateFramebuffers	.\glcorearb.h	/^GLAPI void APIENTRY glCreateFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p
glCreatePerfQueryINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glCreatePerfQueryINTEL (GLuint queryId, GLuint *queryHandle);$/;"	p
glCreateProgram	.\glcorearb.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	p
glCreateProgramPipelines	.\glcorearb.h	/^GLAPI void APIENTRY glCreateProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p
glCreateQueries	.\glcorearb.h	/^GLAPI void APIENTRY glCreateQueries (GLenum target, GLsizei n, GLuint *ids);$/;"	p
glCreateRenderbuffers	.\glcorearb.h	/^GLAPI void APIENTRY glCreateRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p
glCreateSamplers	.\glcorearb.h	/^GLAPI void APIENTRY glCreateSamplers (GLsizei n, GLuint *samplers);$/;"	p
glCreateShader	.\glcorearb.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum type);$/;"	p
glCreateShaderProgramEXT	.\glcorearb.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramEXT (GLenum type, const GLchar *string);$/;"	p
glCreateShaderProgramv	.\glcorearb.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const*strings);$/;"	p
glCreateStatesNV	.\glcorearb.h	/^GLAPI void APIENTRY glCreateStatesNV (GLsizei n, GLuint *states);$/;"	p
glCreateSyncFromCLeventARB	.\glcorearb.h	/^GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);$/;"	p
glCreateTextures	.\glcorearb.h	/^GLAPI void APIENTRY glCreateTextures (GLenum target, GLsizei n, GLuint *textures);$/;"	p
glCreateTransformFeedbacks	.\glcorearb.h	/^GLAPI void APIENTRY glCreateTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p
glCreateVertexArrays	.\glcorearb.h	/^GLAPI void APIENTRY glCreateVertexArrays (GLsizei n, GLuint *arrays);$/;"	p
glCullFace	.\glcorearb.h	/^GLAPI void APIENTRY glCullFace (GLenum mode);$/;"	p
glDebugMessageCallback	.\glcorearb.h	/^GLAPI void APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);$/;"	p
glDebugMessageCallbackARB	.\glcorearb.h	/^GLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void *userParam);$/;"	p
glDebugMessageControl	.\glcorearb.h	/^GLAPI void APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p
glDebugMessageControlARB	.\glcorearb.h	/^GLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p
glDebugMessageInsert	.\glcorearb.h	/^GLAPI void APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p
glDebugMessageInsertARB	.\glcorearb.h	/^GLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p
glDeleteBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	p
glDeleteCommandListsNV	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteCommandListsNV (GLsizei n, const GLuint *lists);$/;"	p
glDeleteFramebuffers	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);$/;"	p
glDeleteNamedStringARB	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);$/;"	p
glDeletePathsNV	.\glcorearb.h	/^GLAPI void APIENTRY glDeletePathsNV (GLuint path, GLsizei range);$/;"	p
glDeletePerfMonitorsAMD	.\glcorearb.h	/^GLAPI void APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p
glDeletePerfQueryINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glDeletePerfQueryINTEL (GLuint queryHandle);$/;"	p
glDeleteProgram	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint program);$/;"	p
glDeleteProgramPipelines	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);$/;"	p
glDeleteQueries	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);$/;"	p
glDeleteRenderbuffers	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);$/;"	p
glDeleteSamplers	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);$/;"	p
glDeleteShader	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteShader (GLuint shader);$/;"	p
glDeleteStatesNV	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteStatesNV (GLsizei n, const GLuint *states);$/;"	p
glDeleteSync	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteSync (GLsync sync);$/;"	p
glDeleteTextures	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);$/;"	p
glDeleteTransformFeedbacks	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);$/;"	p
glDeleteVertexArrays	.\glcorearb.h	/^GLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);$/;"	p
glDepthBoundsdNV	.\glcorearb.h	/^GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);$/;"	p
glDepthFunc	.\glcorearb.h	/^GLAPI void APIENTRY glDepthFunc (GLenum func);$/;"	p
glDepthMask	.\glcorearb.h	/^GLAPI void APIENTRY glDepthMask (GLboolean flag);$/;"	p
glDepthRange	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRange (GLdouble n, GLdouble f);$/;"	p
glDepthRangeArraydvNV	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRangeArraydvNV (GLuint first, GLsizei count, const GLdouble *v);$/;"	p
glDepthRangeArrayv	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble *v);$/;"	p
glDepthRangeIndexed	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);$/;"	p
glDepthRangeIndexeddNV	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRangeIndexeddNV (GLuint index, GLdouble n, GLdouble f);$/;"	p
glDepthRangedNV	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);$/;"	p
glDepthRangef	.\glcorearb.h	/^GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);$/;"	p
glDetachShader	.\glcorearb.h	/^GLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p
glDisable	.\glcorearb.h	/^GLAPI void APIENTRY glDisable (GLenum cap);$/;"	p
glDisableClientStateIndexedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDisableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p
glDisableClientStateiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDisableClientStateiEXT (GLenum array, GLuint index);$/;"	p
glDisableIndexedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDisableIndexedEXT (GLenum target, GLuint index);$/;"	p
glDisableVertexArrayAttrib	.\glcorearb.h	/^GLAPI void APIENTRY glDisableVertexArrayAttrib (GLuint vaobj, GLuint index);$/;"	p
glDisableVertexArrayAttribEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDisableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	p
glDisableVertexArrayEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDisableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	p
glDisableVertexAttribArray	.\glcorearb.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p
glDisablei	.\glcorearb.h	/^GLAPI void APIENTRY glDisablei (GLenum target, GLuint index);$/;"	p
glDispatchCompute	.\glcorearb.h	/^GLAPI void APIENTRY glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	p
glDispatchComputeGroupSizeARB	.\glcorearb.h	/^GLAPI void APIENTRY glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);$/;"	p
glDispatchComputeIndirect	.\glcorearb.h	/^GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);$/;"	p
glDrawArrays	.\glcorearb.h	/^GLAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$/;"	p
glDrawArraysIndirect	.\glcorearb.h	/^GLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const void *indirect);$/;"	p
glDrawArraysInstanced	.\glcorearb.h	/^GLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	p
glDrawArraysInstancedARB	.\glcorearb.h	/^GLAPI void APIENTRY glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	p
glDrawArraysInstancedBaseInstance	.\glcorearb.h	/^GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	p
glDrawArraysInstancedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	p
glDrawBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glDrawBuffer (GLenum buf);$/;"	p
glDrawBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);$/;"	p
glDrawCommandsAddressNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawCommandsAddressNV (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);$/;"	p
glDrawCommandsNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawCommandsNV (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);$/;"	p
glDrawCommandsStatesAddressNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawCommandsStatesAddressNV (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	p
glDrawCommandsStatesNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawCommandsStatesNV (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	p
glDrawElements	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const void *indices);$/;"	p
glDrawElementsBaseVertex	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	p
glDrawElementsIndirect	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect);$/;"	p
glDrawElementsInstanced	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	p
glDrawElementsInstancedARB	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	p
glDrawElementsInstancedBaseInstance	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	p
glDrawElementsInstancedBaseVertex	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	p
glDrawElementsInstancedBaseVertexBaseInstance	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	p
glDrawElementsInstancedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	p
glDrawMeshTasksIndirectNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawMeshTasksIndirectNV (GLintptr indirect);$/;"	p
glDrawMeshTasksNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawMeshTasksNV (GLuint first, GLuint count);$/;"	p
glDrawRangeElements	.\glcorearb.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	p
glDrawRangeElementsBaseVertex	.\glcorearb.h	/^GLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	p
glDrawTransformFeedback	.\glcorearb.h	/^GLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);$/;"	p
glDrawTransformFeedbackInstanced	.\glcorearb.h	/^GLAPI void APIENTRY glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);$/;"	p
glDrawTransformFeedbackStream	.\glcorearb.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);$/;"	p
glDrawTransformFeedbackStreamInstanced	.\glcorearb.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	p
glDrawVkImageNV	.\glcorearb.h	/^GLAPI void APIENTRY glDrawVkImageNV (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	p
glEGLImageTargetTexStorageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEGLImageTargetTexStorageEXT (GLenum target, GLeglImageOES image, const GLint* attrib_list);$/;"	p
glEGLImageTargetTextureStorageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEGLImageTargetTextureStorageEXT (GLuint texture, GLeglImageOES image, const GLint* attrib_list);$/;"	p
glEdgeFlagFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glEdgeFlagFormatNV (GLsizei stride);$/;"	p
glEnable	.\glcorearb.h	/^GLAPI void APIENTRY glEnable (GLenum cap);$/;"	p
glEnableClientStateIndexedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEnableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p
glEnableClientStateiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEnableClientStateiEXT (GLenum array, GLuint index);$/;"	p
glEnableIndexedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEnableIndexedEXT (GLenum target, GLuint index);$/;"	p
glEnableVertexArrayAttrib	.\glcorearb.h	/^GLAPI void APIENTRY glEnableVertexArrayAttrib (GLuint vaobj, GLuint index);$/;"	p
glEnableVertexArrayAttribEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEnableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	p
glEnableVertexArrayEXT	.\glcorearb.h	/^GLAPI void APIENTRY glEnableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	p
glEnableVertexAttribArray	.\glcorearb.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p
glEnablei	.\glcorearb.h	/^GLAPI void APIENTRY glEnablei (GLenum target, GLuint index);$/;"	p
glEndConditionalRender	.\glcorearb.h	/^GLAPI void APIENTRY glEndConditionalRender (void);$/;"	p
glEndConditionalRenderNV	.\glcorearb.h	/^GLAPI void APIENTRY glEndConditionalRenderNV (void);$/;"	p
glEndPerfMonitorAMD	.\glcorearb.h	/^GLAPI void APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p
glEndPerfQueryINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glEndPerfQueryINTEL (GLuint queryHandle);$/;"	p
glEndQuery	.\glcorearb.h	/^GLAPI void APIENTRY glEndQuery (GLenum target);$/;"	p
glEndQueryIndexed	.\glcorearb.h	/^GLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);$/;"	p
glEndTransformFeedback	.\glcorearb.h	/^GLAPI void APIENTRY glEndTransformFeedback (void);$/;"	p
glEvaluateDepthValuesARB	.\glcorearb.h	/^GLAPI void APIENTRY glEvaluateDepthValuesARB (void);$/;"	p
glFenceSync	.\glcorearb.h	/^GLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);$/;"	p
glFinish	.\glcorearb.h	/^GLAPI void APIENTRY glFinish (void);$/;"	p
glFlush	.\glcorearb.h	/^GLAPI void APIENTRY glFlush (void);$/;"	p
glFlushMappedBufferRange	.\glcorearb.h	/^GLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	p
glFlushMappedNamedBufferRange	.\glcorearb.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p
glFlushMappedNamedBufferRangeEXT	.\glcorearb.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p
glFogCoordFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glFogCoordFormatNV (GLenum type, GLsizei stride);$/;"	p
glFragmentCoverageColorNV	.\glcorearb.h	/^GLAPI void APIENTRY glFragmentCoverageColorNV (GLuint color);$/;"	p
glFramebufferDrawBufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p
glFramebufferDrawBuffersEXT	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	p
glFramebufferFetchBarrierEXT	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferFetchBarrierEXT (void);$/;"	p
glFramebufferParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);$/;"	p
glFramebufferParameteriMESA	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferParameteriMESA (GLenum target, GLenum pname, GLint param);$/;"	p
glFramebufferReadBufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p
glFramebufferRenderbuffer	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p
glFramebufferSampleLocationsfvARB	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferSampleLocationsfvARB (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	p
glFramebufferSampleLocationsfvNV	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferSampleLocationsfvNV (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	p
glFramebufferTexture	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p
glFramebufferTexture1D	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p
glFramebufferTexture2D	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p
glFramebufferTexture3D	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p
glFramebufferTextureARB	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p
glFramebufferTextureFaceARB	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p
glFramebufferTextureLayer	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p
glFramebufferTextureLayerARB	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p
glFramebufferTextureMultiviewOVR	.\glcorearb.h	/^GLAPI void APIENTRY glFramebufferTextureMultiviewOVR (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);$/;"	p
glFrontFace	.\glcorearb.h	/^GLAPI void APIENTRY glFrontFace (GLenum mode);$/;"	p
glGenBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	p
glGenFramebuffers	.\glcorearb.h	/^GLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p
glGenPathsNV	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGenPathsNV (GLsizei range);$/;"	p
glGenPerfMonitorsAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p
glGenProgramPipelines	.\glcorearb.h	/^GLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p
glGenQueries	.\glcorearb.h	/^GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);$/;"	p
glGenRenderbuffers	.\glcorearb.h	/^GLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p
glGenSamplers	.\glcorearb.h	/^GLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);$/;"	p
glGenTextures	.\glcorearb.h	/^GLAPI void APIENTRY glGenTextures (GLsizei n, GLuint *textures);$/;"	p
glGenTransformFeedbacks	.\glcorearb.h	/^GLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p
glGenVertexArrays	.\glcorearb.h	/^GLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);$/;"	p
glGenerateMipmap	.\glcorearb.h	/^GLAPI void APIENTRY glGenerateMipmap (GLenum target);$/;"	p
glGenerateMultiTexMipmapEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);$/;"	p
glGenerateTextureMipmap	.\glcorearb.h	/^GLAPI void APIENTRY glGenerateTextureMipmap (GLuint texture);$/;"	p
glGenerateTextureMipmapEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGenerateTextureMipmapEXT (GLuint texture, GLenum target);$/;"	p
glGetActiveAtomicCounterBufferiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	p
glGetActiveAttrib	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p
glGetActiveSubroutineName	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	p
glGetActiveSubroutineUniformName	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	p
glGetActiveSubroutineUniformiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	p
glGetActiveUniform	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p
glGetActiveUniformBlockName	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	p
glGetActiveUniformBlockiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	p
glGetActiveUniformName	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	p
glGetActiveUniformsiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	p
glGetAttachedShaders	.\glcorearb.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	p
glGetAttribLocation	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);$/;"	p
glGetBooleanIndexedvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean *data);$/;"	p
glGetBooleani_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);$/;"	p
glGetBooleanv	.\glcorearb.h	/^GLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean *data);$/;"	p
glGetBufferParameteri64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);$/;"	p
glGetBufferParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetBufferParameterui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	p
glGetBufferPointerv	.\glcorearb.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, void **params);$/;"	p
glGetBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	p
glGetCommandHeaderNV	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGetCommandHeaderNV (GLenum tokenID, GLuint size);$/;"	p
glGetCompressedMultiTexImageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, void *img);$/;"	p
glGetCompressedTexImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, void *img);$/;"	p
glGetCompressedTextureImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetCompressedTextureImage (GLuint texture, GLint level, GLsizei bufSize, void *pixels);$/;"	p
glGetCompressedTextureImageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, void *img);$/;"	p
glGetCompressedTextureSubImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetCompressedTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);$/;"	p
glGetCoverageModulationTableNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetCoverageModulationTableNV (GLsizei bufSize, GLfloat *v);$/;"	p
glGetDebugMessageLog	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p
glGetDebugMessageLogARB	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p
glGetDoubleIndexedvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble *data);$/;"	p
glGetDoublei_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);$/;"	p
glGetDoublei_vEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetDoublei_vEXT (GLenum pname, GLuint index, GLdouble *params);$/;"	p
glGetDoublev	.\glcorearb.h	/^GLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble *data);$/;"	p
glGetError	.\glcorearb.h	/^GLAPI GLenum APIENTRY glGetError (void);$/;"	p
glGetFirstPerfQueryIdINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glGetFirstPerfQueryIdINTEL (GLuint *queryId);$/;"	p
glGetFloatIndexedvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat *data);$/;"	p
glGetFloati_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);$/;"	p
glGetFloati_vEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetFloati_vEXT (GLenum pname, GLuint index, GLfloat *params);$/;"	p
glGetFloatv	.\glcorearb.h	/^GLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat *data);$/;"	p
glGetFragDataIndex	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);$/;"	p
glGetFragDataLocation	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);$/;"	p
glGetFramebufferAttachmentParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p
glGetFramebufferParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetFramebufferParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p
glGetFramebufferParameterivMESA	.\glcorearb.h	/^GLAPI void APIENTRY glGetFramebufferParameterivMESA (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetGraphicsResetStatus	.\glcorearb.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatus (void);$/;"	p
glGetGraphicsResetStatusARB	.\glcorearb.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);$/;"	p
glGetImageHandleARB	.\glcorearb.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	p
glGetImageHandleNV	.\glcorearb.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	p
glGetInteger64i_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);$/;"	p
glGetInteger64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);$/;"	p
glGetIntegerIndexedvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint *data);$/;"	p
glGetIntegeri_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);$/;"	p
glGetIntegerui64i_vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT *result);$/;"	p
glGetIntegerui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetIntegerui64vNV (GLenum value, GLuint64EXT *result);$/;"	p
glGetIntegerv	.\glcorearb.h	/^GLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint *data);$/;"	p
glGetInternalformatSampleivNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);$/;"	p
glGetInternalformati64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);$/;"	p
glGetInternalformativ	.\glcorearb.h	/^GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);$/;"	p
glGetMemoryObjectDetachedResourcesuivNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetMemoryObjectDetachedResourcesuivNV (GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params);$/;"	p
glGetMultiTexEnvfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p
glGetMultiTexEnvivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p
glGetMultiTexGendvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	p
glGetMultiTexGenfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	p
glGetMultiTexGenivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	p
glGetMultiTexImageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	p
glGetMultiTexLevelParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p
glGetMultiTexLevelParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p
glGetMultiTexParameterIivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p
glGetMultiTexParameterIuivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	p
glGetMultiTexParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p
glGetMultiTexParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p
glGetMultisamplefv	.\glcorearb.h	/^GLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);$/;"	p
glGetNamedBufferParameteri64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferParameteri64v (GLuint buffer, GLenum pname, GLint64 *params);$/;"	p
glGetNamedBufferParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferParameteriv (GLuint buffer, GLenum pname, GLint *params);$/;"	p
glGetNamedBufferParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint *params);$/;"	p
glGetNamedBufferParameterui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	p
glGetNamedBufferPointerv	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferPointerv (GLuint buffer, GLenum pname, void **params);$/;"	p
glGetNamedBufferPointervEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, void **params);$/;"	p
glGetNamedBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	p
glGetNamedBufferSubDataEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	p
glGetNamedFramebufferAttachmentParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameteriv (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	p
glGetNamedFramebufferAttachmentParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	p
glGetNamedFramebufferParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameteriv (GLuint framebuffer, GLenum pname, GLint *param);$/;"	p
glGetNamedFramebufferParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p
glGetNamedProgramLocalParameterIivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	p
glGetNamedProgramLocalParameterIuivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	p
glGetNamedProgramLocalParameterdvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	p
glGetNamedProgramLocalParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	p
glGetNamedProgramStringEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, void *string);$/;"	p
glGetNamedProgramivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	p
glGetNamedRenderbufferParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameteriv (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	p
glGetNamedRenderbufferParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	p
glGetNamedStringARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	p
glGetNamedStringivARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	p
glGetNextPerfQueryIdINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint *nextQueryId);$/;"	p
glGetObjectLabel	.\glcorearb.h	/^GLAPI void APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p
glGetObjectLabelEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p
glGetObjectPtrLabel	.\glcorearb.h	/^GLAPI void APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p
glGetPathCommandsNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathCommandsNV (GLuint path, GLubyte *commands);$/;"	p
glGetPathCoordsNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathCoordsNV (GLuint path, GLfloat *coords);$/;"	p
glGetPathDashArrayNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathDashArrayNV (GLuint path, GLfloat *dashArray);$/;"	p
glGetPathLengthNV	.\glcorearb.h	/^GLAPI GLfloat APIENTRY glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	p
glGetPathMetricRangeNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	p
glGetPathMetricsNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	p
glGetPathParameterfvNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat *value);$/;"	p
glGetPathParameterivNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathParameterivNV (GLuint path, GLenum pname, GLint *value);$/;"	p
glGetPathSpacingNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	p
glGetPerfCounterInfoINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	p
glGetPerfMonitorCounterDataAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	p
glGetPerfMonitorCounterInfoAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	p
glGetPerfMonitorCounterStringAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	p
glGetPerfMonitorCountersAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	p
glGetPerfMonitorGroupStringAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	p
glGetPerfMonitorGroupsAMD	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	p
glGetPerfQueryDataINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten);$/;"	p
glGetPerfQueryIdByNameINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfQueryIdByNameINTEL (GLchar *queryName, GLuint *queryId);$/;"	p
glGetPerfQueryInfoINTEL	.\glcorearb.h	/^GLAPI void APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	p
glGetPointerIndexedvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetPointerIndexedvEXT (GLenum target, GLuint index, void **data);$/;"	p
glGetPointeri_vEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetPointeri_vEXT (GLenum pname, GLuint index, void **params);$/;"	p
glGetPointerv	.\glcorearb.h	/^GLAPI void APIENTRY glGetPointerv (GLenum pname, void **params);$/;"	p
glGetProgramBinary	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	p
glGetProgramInfoLog	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p
glGetProgramInterfaceiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	p
glGetProgramPipelineInfoLog	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p
glGetProgramPipelineiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);$/;"	p
glGetProgramResourceIndex	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p
glGetProgramResourceLocation	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p
glGetProgramResourceLocationIndex	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p
glGetProgramResourceName	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	p
glGetProgramResourcefvNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);$/;"	p
glGetProgramResourceiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);$/;"	p
glGetProgramStageiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	p
glGetProgramiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);$/;"	p
glGetQueryBufferObjecti64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryBufferObjecti64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p
glGetQueryBufferObjectiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryBufferObjectiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p
glGetQueryBufferObjectui64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryBufferObjectui64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p
glGetQueryBufferObjectuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryBufferObjectuiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p
glGetQueryIndexediv	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p
glGetQueryObjecti64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);$/;"	p
glGetQueryObjectiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);$/;"	p
glGetQueryObjectui64v	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);$/;"	p
glGetQueryObjectuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);$/;"	p
glGetQueryiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetRenderbufferParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetSamplerParameterIiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);$/;"	p
glGetSamplerParameterIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);$/;"	p
glGetSamplerParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);$/;"	p
glGetSamplerParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);$/;"	p
glGetShaderInfoLog	.\glcorearb.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p
glGetShaderPrecisionFormat	.\glcorearb.h	/^GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	p
glGetShaderSource	.\glcorearb.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	p
glGetShaderiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);$/;"	p
glGetShadingRateImagePaletteNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetShadingRateImagePaletteNV (GLuint viewport, GLuint entry, GLenum *rate);$/;"	p
glGetShadingRateSampleLocationivNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetShadingRateSampleLocationivNV (GLenum rate, GLuint samples, GLuint index, GLint *location);$/;"	p
glGetStageIndexNV	.\glcorearb.h	/^GLAPI GLushort APIENTRY glGetStageIndexNV (GLenum shadertype);$/;"	p
glGetString	.\glcorearb.h	/^GLAPI const GLubyte *APIENTRY glGetString (GLenum name);$/;"	p
glGetStringi	.\glcorearb.h	/^GLAPI const GLubyte *APIENTRY glGetStringi (GLenum name, GLuint index);$/;"	p
glGetSubroutineIndex	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p
glGetSubroutineUniformLocation	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p
glGetSynciv	.\glcorearb.h	/^GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);$/;"	p
glGetTexImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	p
glGetTexLevelParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p
glGetTexLevelParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p
glGetTexParameterIiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetTexParameterIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);$/;"	p
glGetTexParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p
glGetTexParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p
glGetTextureHandleARB	.\glcorearb.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleARB (GLuint texture);$/;"	p
glGetTextureHandleNV	.\glcorearb.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleNV (GLuint texture);$/;"	p
glGetTextureImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureImage (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	p
glGetTextureImageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	p
glGetTextureLevelParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfv (GLuint texture, GLint level, GLenum pname, GLfloat *params);$/;"	p
glGetTextureLevelParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p
glGetTextureLevelParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureLevelParameteriv (GLuint texture, GLint level, GLenum pname, GLint *params);$/;"	p
glGetTextureLevelParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p
glGetTextureParameterIiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterIiv (GLuint texture, GLenum pname, GLint *params);$/;"	p
glGetTextureParameterIivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p
glGetTextureParameterIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterIuiv (GLuint texture, GLenum pname, GLuint *params);$/;"	p
glGetTextureParameterIuivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	p
glGetTextureParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterfv (GLuint texture, GLenum pname, GLfloat *params);$/;"	p
glGetTextureParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	p
glGetTextureParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameteriv (GLuint texture, GLenum pname, GLint *params);$/;"	p
glGetTextureParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p
glGetTextureSamplerHandleARB	.\glcorearb.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);$/;"	p
glGetTextureSamplerHandleNV	.\glcorearb.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);$/;"	p
glGetTextureSubImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	p
glGetTransformFeedbackVarying	.\glcorearb.h	/^GLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p
glGetTransformFeedbacki64_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetTransformFeedbacki64_v (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);$/;"	p
glGetTransformFeedbacki_v	.\glcorearb.h	/^GLAPI void APIENTRY glGetTransformFeedbacki_v (GLuint xfb, GLenum pname, GLuint index, GLint *param);$/;"	p
glGetTransformFeedbackiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetTransformFeedbackiv (GLuint xfb, GLenum pname, GLint *param);$/;"	p
glGetUniformBlockIndex	.\glcorearb.h	/^GLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);$/;"	p
glGetUniformIndices	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	p
glGetUniformLocation	.\glcorearb.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);$/;"	p
glGetUniformSubroutineuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);$/;"	p
glGetUniformdv	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);$/;"	p
glGetUniformfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);$/;"	p
glGetUniformi64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformi64vARB (GLuint program, GLint location, GLint64 *params);$/;"	p
glGetUniformi64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT *params);$/;"	p
glGetUniformiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);$/;"	p
glGetUniformui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformui64vARB (GLuint program, GLint location, GLuint64 *params);$/;"	p
glGetUniformui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT *params);$/;"	p
glGetUniformuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);$/;"	p
glGetVertexArrayIndexed64iv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayIndexed64iv (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);$/;"	p
glGetVertexArrayIndexediv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayIndexediv (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	p
glGetVertexArrayIntegeri_vEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayIntegeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	p
glGetVertexArrayIntegervEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayIntegervEXT (GLuint vaobj, GLenum pname, GLint *param);$/;"	p
glGetVertexArrayPointeri_vEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayPointeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, void **param);$/;"	p
glGetVertexArrayPointervEXT	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayPointervEXT (GLuint vaobj, GLenum pname, void **param);$/;"	p
glGetVertexArrayiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexArrayiv (GLuint vaobj, GLenum pname, GLint *param);$/;"	p
glGetVertexAttribIiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);$/;"	p
glGetVertexAttribIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);$/;"	p
glGetVertexAttribLdv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p
glGetVertexAttribLi64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT *params);$/;"	p
glGetVertexAttribLui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p
glGetVertexAttribLui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p
glGetVertexAttribPointerv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer);$/;"	p
glGetVertexAttribdv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p
glGetVertexAttribfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);$/;"	p
glGetVertexAttribiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);$/;"	p
glGetVkProcAddrNV	.\glcorearb.h	/^GLAPI GLVULKANPROCNV APIENTRY glGetVkProcAddrNV (const GLchar *name);$/;"	p
glGetnCompressedTexImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetnCompressedTexImage (GLenum target, GLint lod, GLsizei bufSize, void *pixels);$/;"	p
glGetnCompressedTexImageARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	p
glGetnTexImage	.\glcorearb.h	/^GLAPI void APIENTRY glGetnTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	p
glGetnTexImageARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	p
glGetnUniformdv	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformdv (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	p
glGetnUniformdvARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	p
glGetnUniformfv	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformfv (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	p
glGetnUniformfvARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	p
glGetnUniformi64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformi64vARB (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);$/;"	p
glGetnUniformiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformiv (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p
glGetnUniformivARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p
glGetnUniformui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformui64vARB (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);$/;"	p
glGetnUniformuiv	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformuiv (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	p
glGetnUniformuivARB	.\glcorearb.h	/^GLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	p
glHint	.\glcorearb.h	/^GLAPI void APIENTRY glHint (GLenum target, GLenum mode);$/;"	p
glIndexFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glIndexFormatNV (GLenum type, GLsizei stride);$/;"	p
glInsertEventMarkerEXT	.\glcorearb.h	/^GLAPI void APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p
glInterpolatePathsNV	.\glcorearb.h	/^GLAPI void APIENTRY glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	p
glInvalidateBufferData	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateBufferData (GLuint buffer);$/;"	p
glInvalidateBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p
glInvalidateFramebuffer	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	p
glInvalidateNamedFramebufferData	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateNamedFramebufferData (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);$/;"	p
glInvalidateNamedFramebufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateNamedFramebufferSubData (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glInvalidateSubFramebuffer	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glInvalidateTexImage	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);$/;"	p
glInvalidateTexSubImage	.\glcorearb.h	/^GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	p
glIsBuffer	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);$/;"	p
glIsBufferResidentNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsBufferResidentNV (GLenum target);$/;"	p
glIsCommandListNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsCommandListNV (GLuint list);$/;"	p
glIsEnabled	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);$/;"	p
glIsEnabledIndexedEXT	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsEnabledIndexedEXT (GLenum target, GLuint index);$/;"	p
glIsEnabledi	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);$/;"	p
glIsFramebuffer	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p
glIsImageHandleResidentARB	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentARB (GLuint64 handle);$/;"	p
glIsImageHandleResidentNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentNV (GLuint64 handle);$/;"	p
glIsNamedBufferResidentNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsNamedBufferResidentNV (GLuint buffer);$/;"	p
glIsNamedStringARB	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);$/;"	p
glIsPathNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsPathNV (GLuint path);$/;"	p
glIsPointInFillPathNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	p
glIsPointInStrokePathNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);$/;"	p
glIsProgram	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint program);$/;"	p
glIsProgramPipeline	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);$/;"	p
glIsQuery	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint id);$/;"	p
glIsRenderbuffer	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p
glIsSampler	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);$/;"	p
glIsShader	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint shader);$/;"	p
glIsStateNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsStateNV (GLuint state);$/;"	p
glIsSync	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsSync (GLsync sync);$/;"	p
glIsTexture	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsTexture (GLuint texture);$/;"	p
glIsTextureHandleResidentARB	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentARB (GLuint64 handle);$/;"	p
glIsTextureHandleResidentNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentNV (GLuint64 handle);$/;"	p
glIsTransformFeedback	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);$/;"	p
glIsVertexArray	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);$/;"	p
glLabelObjectEXT	.\glcorearb.h	/^GLAPI void APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	p
glLineWidth	.\glcorearb.h	/^GLAPI void APIENTRY glLineWidth (GLfloat width);$/;"	p
glLinkProgram	.\glcorearb.h	/^GLAPI void APIENTRY glLinkProgram (GLuint program);$/;"	p
glListDrawCommandsStatesClientNV	.\glcorearb.h	/^GLAPI void APIENTRY glListDrawCommandsStatesClientNV (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	p
glLogicOp	.\glcorearb.h	/^GLAPI void APIENTRY glLogicOp (GLenum opcode);$/;"	p
glMakeBufferNonResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeBufferNonResidentNV (GLenum target);$/;"	p
glMakeBufferResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeBufferResidentNV (GLenum target, GLenum access);$/;"	p
glMakeImageHandleNonResidentARB	.\glcorearb.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentARB (GLuint64 handle);$/;"	p
glMakeImageHandleNonResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentNV (GLuint64 handle);$/;"	p
glMakeImageHandleResidentARB	.\glcorearb.h	/^GLAPI void APIENTRY glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);$/;"	p
glMakeImageHandleResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);$/;"	p
glMakeNamedBufferNonResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeNamedBufferNonResidentNV (GLuint buffer);$/;"	p
glMakeNamedBufferResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);$/;"	p
glMakeTextureHandleNonResidentARB	.\glcorearb.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentARB (GLuint64 handle);$/;"	p
glMakeTextureHandleNonResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentNV (GLuint64 handle);$/;"	p
glMakeTextureHandleResidentARB	.\glcorearb.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentARB (GLuint64 handle);$/;"	p
glMakeTextureHandleResidentNV	.\glcorearb.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentNV (GLuint64 handle);$/;"	p
glMapBuffer	.\glcorearb.h	/^GLAPI void *APIENTRY glMapBuffer (GLenum target, GLenum access);$/;"	p
glMapBufferRange	.\glcorearb.h	/^GLAPI void *APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p
glMapNamedBuffer	.\glcorearb.h	/^GLAPI void *APIENTRY glMapNamedBuffer (GLuint buffer, GLenum access);$/;"	p
glMapNamedBufferEXT	.\glcorearb.h	/^GLAPI void *APIENTRY glMapNamedBufferEXT (GLuint buffer, GLenum access);$/;"	p
glMapNamedBufferRange	.\glcorearb.h	/^GLAPI void *APIENTRY glMapNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p
glMapNamedBufferRangeEXT	.\glcorearb.h	/^GLAPI void *APIENTRY glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p
glMatrixFrustumEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p
glMatrixLoad3x2fNV	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoad3x2fNV (GLenum matrixMode, const GLfloat *m);$/;"	p
glMatrixLoad3x3fNV	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoad3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p
glMatrixLoadIdentityEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoadIdentityEXT (GLenum mode);$/;"	p
glMatrixLoadTranspose3x3fNV	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoadTranspose3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p
glMatrixLoadTransposedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoadTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p
glMatrixLoadTransposefEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p
glMatrixLoaddEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoaddEXT (GLenum mode, const GLdouble *m);$/;"	p
glMatrixLoadfEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixLoadfEXT (GLenum mode, const GLfloat *m);$/;"	p
glMatrixMult3x2fNV	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMult3x2fNV (GLenum matrixMode, const GLfloat *m);$/;"	p
glMatrixMult3x3fNV	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMult3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p
glMatrixMultTranspose3x3fNV	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMultTranspose3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p
glMatrixMultTransposedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMultTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p
glMatrixMultTransposefEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMultTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p
glMatrixMultdEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMultdEXT (GLenum mode, const GLdouble *m);$/;"	p
glMatrixMultfEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixMultfEXT (GLenum mode, const GLfloat *m);$/;"	p
glMatrixOrthoEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p
glMatrixPopEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixPopEXT (GLenum mode);$/;"	p
glMatrixPushEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixPushEXT (GLenum mode);$/;"	p
glMatrixRotatedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glMatrixRotatefEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	p
glMatrixScaledEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glMatrixScalefEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p
glMatrixTranslatedEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glMatrixTranslatefEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p
glMaxShaderCompilerThreadsARB	.\glcorearb.h	/^GLAPI void APIENTRY glMaxShaderCompilerThreadsARB (GLuint count);$/;"	p
glMaxShaderCompilerThreadsKHR	.\glcorearb.h	/^GLAPI void APIENTRY glMaxShaderCompilerThreadsKHR (GLuint count);$/;"	p
glMemoryBarrier	.\glcorearb.h	/^GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);$/;"	p
glMemoryBarrierByRegion	.\glcorearb.h	/^GLAPI void APIENTRY glMemoryBarrierByRegion (GLbitfield barriers);$/;"	p
glMinSampleShading	.\glcorearb.h	/^GLAPI void APIENTRY glMinSampleShading (GLfloat value);$/;"	p
glMinSampleShadingARB	.\glcorearb.h	/^GLAPI void APIENTRY glMinSampleShadingARB (GLfloat value);$/;"	p
glMultiDrawArrays	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	p
glMultiDrawArraysIndirect	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirect (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	p
glMultiDrawArraysIndirectBindlessCountNV	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectBindlessCountNV (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p
glMultiDrawArraysIndirectBindlessNV	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectBindlessNV (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p
glMultiDrawArraysIndirectCount	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectCount (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p
glMultiDrawArraysIndirectCountARB	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectCountARB (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p
glMultiDrawElements	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	p
glMultiDrawElementsBaseVertex	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	p
glMultiDrawElementsIndirect	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	p
glMultiDrawElementsIndirectBindlessCountNV	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectBindlessCountNV (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p
glMultiDrawElementsIndirectBindlessNV	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectBindlessNV (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p
glMultiDrawElementsIndirectCount	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectCount (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p
glMultiDrawElementsIndirectCountARB	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p
glMultiDrawMeshTasksIndirectCountNV	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawMeshTasksIndirectCountNV (GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p
glMultiDrawMeshTasksIndirectNV	.\glcorearb.h	/^GLAPI void APIENTRY glMultiDrawMeshTasksIndirectNV (GLintptr indirect, GLsizei drawcount, GLsizei stride);$/;"	p
glMultiTexBufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p
glMultiTexCoordPointerEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p
glMultiTexEnvfEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p
glMultiTexEnvfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p
glMultiTexEnviEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p
glMultiTexEnvivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p
glMultiTexGendEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	p
glMultiTexGendvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	p
glMultiTexGenfEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	p
glMultiTexGenfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	p
glMultiTexGeniEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	p
glMultiTexGenivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	p
glMultiTexImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glMultiTexImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glMultiTexImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glMultiTexParameterIivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p
glMultiTexParameterIuivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	p
glMultiTexParameterfEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p
glMultiTexParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p
glMultiTexParameteriEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p
glMultiTexParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p
glMultiTexRenderbufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	p
glMultiTexSubImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p
glMultiTexSubImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p
glMultiTexSubImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p
glNamedBufferAttachMemoryNV	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferAttachMemoryNV (GLuint buffer, GLuint memory, GLuint64 offset);$/;"	p
glNamedBufferData	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferData (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	p
glNamedBufferDataEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	p
glNamedBufferPageCommitmentARB	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferPageCommitmentARB (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	p
glNamedBufferPageCommitmentEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferPageCommitmentEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	p
glNamedBufferPageCommitmentMemNV	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferPageCommitmentMemNV (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);$/;"	p
glNamedBufferStorage	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferStorage (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	p
glNamedBufferStorageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferStorageEXT (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	p
glNamedBufferSubData	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p
glNamedBufferSubDataEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p
glNamedCopyBufferSubDataEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p
glNamedFramebufferDrawBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferDrawBuffer (GLuint framebuffer, GLenum buf);$/;"	p
glNamedFramebufferDrawBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferDrawBuffers (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	p
glNamedFramebufferParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferParameteri (GLuint framebuffer, GLenum pname, GLint param);$/;"	p
glNamedFramebufferParameteriEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint param);$/;"	p
glNamedFramebufferReadBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferReadBuffer (GLuint framebuffer, GLenum src);$/;"	p
glNamedFramebufferRenderbuffer	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbuffer (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p
glNamedFramebufferRenderbufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p
glNamedFramebufferSampleLocationsfvARB	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferSampleLocationsfvARB (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	p
glNamedFramebufferSampleLocationsfvNV	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferSampleLocationsfvNV (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	p
glNamedFramebufferTexture	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTexture (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	p
glNamedFramebufferTexture1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p
glNamedFramebufferTexture2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p
glNamedFramebufferTexture3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p
glNamedFramebufferTextureEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	p
glNamedFramebufferTextureFaceEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p
glNamedFramebufferTextureLayer	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayer (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p
glNamedFramebufferTextureLayerEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p
glNamedProgramLocalParameter4dEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p
glNamedProgramLocalParameter4dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	p
glNamedProgramLocalParameter4fEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p
glNamedProgramLocalParameter4fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	p
glNamedProgramLocalParameterI4iEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p
glNamedProgramLocalParameterI4ivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	p
glNamedProgramLocalParameterI4uiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p
glNamedProgramLocalParameterI4uivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	p
glNamedProgramLocalParameters4fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p
glNamedProgramLocalParametersI4ivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p
glNamedProgramLocalParametersI4uivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p
glNamedProgramStringEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);$/;"	p
glNamedRenderbufferStorage	.\glcorearb.h	/^GLAPI void APIENTRY glNamedRenderbufferStorage (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glNamedRenderbufferStorageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glNamedRenderbufferStorageMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisample (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glNamedRenderbufferStorageMultisampleAdvancedAMD	.\glcorearb.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleAdvancedAMD (GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glNamedRenderbufferStorageMultisampleCoverageEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glNamedRenderbufferStorageMultisampleEXT	.\glcorearb.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glNamedStringARB	.\glcorearb.h	/^GLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	p
glNormalFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glNormalFormatNV (GLenum type, GLsizei stride);$/;"	p
glObjectLabel	.\glcorearb.h	/^GLAPI void APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	p
glObjectPtrLabel	.\glcorearb.h	/^GLAPI void APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);$/;"	p
glPatchParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);$/;"	p
glPatchParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);$/;"	p
glPathCommandsNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p
glPathCoordsNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p
glPathCoverDepthFuncNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathCoverDepthFuncNV (GLenum func);$/;"	p
glPathDashArrayNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	p
glPathGlyphIndexArrayNV	.\glcorearb.h	/^GLAPI GLenum APIENTRY glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p
glPathGlyphIndexRangeNV	.\glcorearb.h	/^GLAPI GLenum APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);$/;"	p
glPathGlyphRangeNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p
glPathGlyphsNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p
glPathMemoryGlyphIndexArrayNV	.\glcorearb.h	/^GLAPI GLenum APIENTRY glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p
glPathParameterfNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);$/;"	p
glPathParameterfvNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat *value);$/;"	p
glPathParameteriNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathParameteriNV (GLuint path, GLenum pname, GLint value);$/;"	p
glPathParameterivNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathParameterivNV (GLuint path, GLenum pname, const GLint *value);$/;"	p
glPathStencilDepthOffsetNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);$/;"	p
glPathStencilFuncNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);$/;"	p
glPathStringNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathStringNV (GLuint path, GLenum format, GLsizei length, const void *pathString);$/;"	p
glPathSubCommandsNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p
glPathSubCoordsNV	.\glcorearb.h	/^GLAPI void APIENTRY glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p
glPauseTransformFeedback	.\glcorearb.h	/^GLAPI void APIENTRY glPauseTransformFeedback (void);$/;"	p
glPixelStoref	.\glcorearb.h	/^GLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);$/;"	p
glPixelStorei	.\glcorearb.h	/^GLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);$/;"	p
glPointAlongPathNV	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	p
glPointParameterf	.\glcorearb.h	/^GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	p
glPointParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	p
glPointParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);$/;"	p
glPointParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);$/;"	p
glPointSize	.\glcorearb.h	/^GLAPI void APIENTRY glPointSize (GLfloat size);$/;"	p
glPolygonMode	.\glcorearb.h	/^GLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);$/;"	p
glPolygonOffset	.\glcorearb.h	/^GLAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$/;"	p
glPolygonOffsetClamp	.\glcorearb.h	/^GLAPI void APIENTRY glPolygonOffsetClamp (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	p
glPolygonOffsetClampEXT	.\glcorearb.h	/^GLAPI void APIENTRY glPolygonOffsetClampEXT (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	p
glPopDebugGroup	.\glcorearb.h	/^GLAPI void APIENTRY glPopDebugGroup (void);$/;"	p
glPopGroupMarkerEXT	.\glcorearb.h	/^GLAPI void APIENTRY glPopGroupMarkerEXT (void);$/;"	p
glPrimitiveBoundingBoxARB	.\glcorearb.h	/^GLAPI void APIENTRY glPrimitiveBoundingBoxARB (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	p
glPrimitiveRestartIndex	.\glcorearb.h	/^GLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);$/;"	p
glProgramBinary	.\glcorearb.h	/^GLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);$/;"	p
glProgramParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);$/;"	p
glProgramParameteriARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramParameteriARB (GLuint program, GLenum pname, GLint value);$/;"	p
glProgramPathFragmentInputGenNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	p
glProgramUniform1d	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);$/;"	p
glProgramUniform1dEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);$/;"	p
glProgramUniform1dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform1dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform1f	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);$/;"	p
glProgramUniform1fEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);$/;"	p
glProgramUniform1fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform1fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform1i	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);$/;"	p
glProgramUniform1i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1i64ARB (GLuint program, GLint location, GLint64 x);$/;"	p
glProgramUniform1i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);$/;"	p
glProgramUniform1i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p
glProgramUniform1i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glProgramUniform1iEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);$/;"	p
glProgramUniform1iv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform1ivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform1ui	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);$/;"	p
glProgramUniform1ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1ui64ARB (GLuint program, GLint location, GLuint64 x);$/;"	p
glProgramUniform1ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);$/;"	p
glProgramUniform1ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glProgramUniform1ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glProgramUniform1uiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);$/;"	p
glProgramUniform1uiv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform1uivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform2d	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	p
glProgramUniform2dEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	p
glProgramUniform2dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform2dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform2f	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p
glProgramUniform2fEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p
glProgramUniform2fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform2fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform2i	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p
glProgramUniform2i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y);$/;"	p
glProgramUniform2i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	p
glProgramUniform2i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p
glProgramUniform2i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glProgramUniform2iEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p
glProgramUniform2iv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform2ivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform2ui	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p
glProgramUniform2ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y);$/;"	p
glProgramUniform2ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p
glProgramUniform2ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glProgramUniform2ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glProgramUniform2uiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p
glProgramUniform2uiv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform2uivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform3d	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	p
glProgramUniform3dEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glProgramUniform3dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform3dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform3f	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p
glProgramUniform3fEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p
glProgramUniform3fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform3fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform3i	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p
glProgramUniform3i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	p
glProgramUniform3i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p
glProgramUniform3i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p
glProgramUniform3i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glProgramUniform3iEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p
glProgramUniform3iv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform3ivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform3ui	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p
glProgramUniform3ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	p
glProgramUniform3ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p
glProgramUniform3ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glProgramUniform3ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glProgramUniform3uiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p
glProgramUniform3uiv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform3uivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform4d	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	p
glProgramUniform4dEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p
glProgramUniform4dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform4dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p
glProgramUniform4f	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p
glProgramUniform4fEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p
glProgramUniform4fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform4fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p
glProgramUniform4i	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p
glProgramUniform4i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	p
glProgramUniform4i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p
glProgramUniform4i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p
glProgramUniform4i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glProgramUniform4iEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p
glProgramUniform4iv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform4ivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p
glProgramUniform4ui	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p
glProgramUniform4ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	p
glProgramUniform4ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p
glProgramUniform4ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glProgramUniform4ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glProgramUniform4uiEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p
glProgramUniform4uiv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniform4uivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p
glProgramUniformHandleui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 value);$/;"	p
glProgramUniformHandleui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value);$/;"	p
glProgramUniformHandleui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	p
glProgramUniformHandleui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	p
glProgramUniformMatrix2dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix2dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix2fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix2fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix2x3dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix2x3dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix2x3fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix2x3fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix2x4dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix2x4dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix2x4fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix2x4fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix3dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix3dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix3fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix3fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix3x2dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix3x2dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix3x2fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix3x2fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix3x4dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix3x4dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix3x4fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix3x4fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix4dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix4dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix4fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix4fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix4x2dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix4x2dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix4x2fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix4x2fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix4x3dv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix4x3dvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glProgramUniformMatrix4x3fv	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformMatrix4x3fvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glProgramUniformui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);$/;"	p
glProgramUniformui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glProvokingVertex	.\glcorearb.h	/^GLAPI void APIENTRY glProvokingVertex (GLenum mode);$/;"	p
glPushClientAttribDefaultEXT	.\glcorearb.h	/^GLAPI void APIENTRY glPushClientAttribDefaultEXT (GLbitfield mask);$/;"	p
glPushDebugGroup	.\glcorearb.h	/^GLAPI void APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	p
glPushGroupMarkerEXT	.\glcorearb.h	/^GLAPI void APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p
glQueryCounter	.\glcorearb.h	/^GLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);$/;"	p
glRasterSamplesEXT	.\glcorearb.h	/^GLAPI void APIENTRY glRasterSamplesEXT (GLuint samples, GLboolean fixedsamplelocations);$/;"	p
glReadBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glReadBuffer (GLenum src);$/;"	p
glReadPixels	.\glcorearb.h	/^GLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);$/;"	p
glReadnPixels	.\glcorearb.h	/^GLAPI void APIENTRY glReadnPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	p
glReadnPixelsARB	.\glcorearb.h	/^GLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	p
glReleaseShaderCompiler	.\glcorearb.h	/^GLAPI void APIENTRY glReleaseShaderCompiler (void);$/;"	p
glRenderbufferStorage	.\glcorearb.h	/^GLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glRenderbufferStorageMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glRenderbufferStorageMultisampleAdvancedAMD	.\glcorearb.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleAdvancedAMD (GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glRenderbufferStorageMultisampleCoverageNV	.\glcorearb.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glResetMemoryObjectParameterNV	.\glcorearb.h	/^GLAPI void APIENTRY glResetMemoryObjectParameterNV (GLuint memory, GLenum pname);$/;"	p
glResolveDepthValuesNV	.\glcorearb.h	/^GLAPI void APIENTRY glResolveDepthValuesNV (void);$/;"	p
glResumeTransformFeedback	.\glcorearb.h	/^GLAPI void APIENTRY glResumeTransformFeedback (void);$/;"	p
glSampleCoverage	.\glcorearb.h	/^GLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);$/;"	p
glSampleMaski	.\glcorearb.h	/^GLAPI void APIENTRY glSampleMaski (GLuint maskNumber, GLbitfield mask);$/;"	p
glSamplerParameterIiv	.\glcorearb.h	/^GLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p
glSamplerParameterIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);$/;"	p
glSamplerParameterf	.\glcorearb.h	/^GLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);$/;"	p
glSamplerParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	p
glSamplerParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);$/;"	p
glSamplerParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p
glScissor	.\glcorearb.h	/^GLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glScissorArrayv	.\glcorearb.h	/^GLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);$/;"	p
glScissorExclusiveArrayvNV	.\glcorearb.h	/^GLAPI void APIENTRY glScissorExclusiveArrayvNV (GLuint first, GLsizei count, const GLint *v);$/;"	p
glScissorExclusiveNV	.\glcorearb.h	/^GLAPI void APIENTRY glScissorExclusiveNV (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glScissorIndexed	.\glcorearb.h	/^GLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	p
glScissorIndexedv	.\glcorearb.h	/^GLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);$/;"	p
glSecondaryColorFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p
glSelectPerfMonitorCountersAMD	.\glcorearb.h	/^GLAPI void APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	p
glShaderBinary	.\glcorearb.h	/^GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);$/;"	p
glShaderSource	.\glcorearb.h	/^GLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	p
glShaderStorageBlockBinding	.\glcorearb.h	/^GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	p
glShadingRateImageBarrierNV	.\glcorearb.h	/^GLAPI void APIENTRY glShadingRateImageBarrierNV (GLboolean synchronize);$/;"	p
glShadingRateImagePaletteNV	.\glcorearb.h	/^GLAPI void APIENTRY glShadingRateImagePaletteNV (GLuint viewport, GLuint first, GLsizei count, const GLenum *rates);$/;"	p
glShadingRateSampleOrderCustomNV	.\glcorearb.h	/^GLAPI void APIENTRY glShadingRateSampleOrderCustomNV (GLenum rate, GLuint samples, const GLint *locations);$/;"	p
glShadingRateSampleOrderNV	.\glcorearb.h	/^GLAPI void APIENTRY glShadingRateSampleOrderNV (GLenum order);$/;"	p
glSignalVkFenceNV	.\glcorearb.h	/^GLAPI void APIENTRY glSignalVkFenceNV (GLuint64 vkFence);$/;"	p
glSignalVkSemaphoreNV	.\glcorearb.h	/^GLAPI void APIENTRY glSignalVkSemaphoreNV (GLuint64 vkSemaphore);$/;"	p
glSpecializeShader	.\glcorearb.h	/^GLAPI void APIENTRY glSpecializeShader (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	p
glSpecializeShaderARB	.\glcorearb.h	/^GLAPI void APIENTRY glSpecializeShaderARB (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	p
glStateCaptureNV	.\glcorearb.h	/^GLAPI void APIENTRY glStateCaptureNV (GLuint state, GLenum mode);$/;"	p
glStencilFillPathInstancedNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	p
glStencilFillPathNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);$/;"	p
glStencilFunc	.\glcorearb.h	/^GLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);$/;"	p
glStencilFuncSeparate	.\glcorearb.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	p
glStencilMask	.\glcorearb.h	/^GLAPI void APIENTRY glStencilMask (GLuint mask);$/;"	p
glStencilMaskSeparate	.\glcorearb.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p
glStencilOp	.\glcorearb.h	/^GLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);$/;"	p
glStencilOpSeparate	.\glcorearb.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p
glStencilStrokePathInstancedNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	p
glStencilStrokePathNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);$/;"	p
glStencilThenCoverFillPathInstancedNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p
glStencilThenCoverFillPathNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);$/;"	p
glStencilThenCoverStrokePathInstancedNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p
glStencilThenCoverStrokePathNV	.\glcorearb.h	/^GLAPI void APIENTRY glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);$/;"	p
glSubpixelPrecisionBiasNV	.\glcorearb.h	/^GLAPI void APIENTRY glSubpixelPrecisionBiasNV (GLuint xbits, GLuint ybits);$/;"	p
glTexAttachMemoryNV	.\glcorearb.h	/^GLAPI void APIENTRY glTexAttachMemoryNV (GLenum target, GLuint memory, GLuint64 offset);$/;"	p
glTexBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p
glTexBufferARB	.\glcorearb.h	/^GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p
glTexBufferRange	.\glcorearb.h	/^GLAPI void APIENTRY glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p
glTexCoordFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p
glTexImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glTexImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glTexImage2DMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p
glTexImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glTexImage3DMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p
glTexPageCommitmentARB	.\glcorearb.h	/^GLAPI void APIENTRY glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	p
glTexPageCommitmentMemNV	.\glcorearb.h	/^GLAPI void APIENTRY glTexPageCommitmentMemNV (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);$/;"	p
glTexParameterIiv	.\glcorearb.h	/^GLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);$/;"	p
glTexParameterIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);$/;"	p
glTexParameterf	.\glcorearb.h	/^GLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);$/;"	p
glTexParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p
glTexParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);$/;"	p
glTexParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p
glTexStorage1D	.\glcorearb.h	/^GLAPI void APIENTRY glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p
glTexStorage2D	.\glcorearb.h	/^GLAPI void APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glTexStorage2DMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p
glTexStorage3D	.\glcorearb.h	/^GLAPI void APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p
glTexStorage3DMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p
glTexSubImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p
glTexSubImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p
glTexSubImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureAttachMemoryNV	.\glcorearb.h	/^GLAPI void APIENTRY glTextureAttachMemoryNV (GLuint texture, GLuint memory, GLuint64 offset);$/;"	p
glTextureBarrier	.\glcorearb.h	/^GLAPI void APIENTRY glTextureBarrier (void);$/;"	p
glTextureBarrierNV	.\glcorearb.h	/^GLAPI void APIENTRY glTextureBarrierNV (void);$/;"	p
glTextureBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glTextureBuffer (GLuint texture, GLenum internalformat, GLuint buffer);$/;"	p
glTextureBufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p
glTextureBufferRange	.\glcorearb.h	/^GLAPI void APIENTRY glTextureBufferRange (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p
glTextureBufferRangeEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p
glTextureImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p
glTexturePageCommitmentEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTexturePageCommitmentEXT (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	p
glTexturePageCommitmentMemNV	.\glcorearb.h	/^GLAPI void APIENTRY glTexturePageCommitmentMemNV (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);$/;"	p
glTextureParameterIiv	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterIiv (GLuint texture, GLenum pname, const GLint *params);$/;"	p
glTextureParameterIivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p
glTextureParameterIuiv	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterIuiv (GLuint texture, GLenum pname, const GLuint *params);$/;"	p
glTextureParameterIuivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	p
glTextureParameterf	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterf (GLuint texture, GLenum pname, GLfloat param);$/;"	p
glTextureParameterfEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	p
glTextureParameterfv	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterfv (GLuint texture, GLenum pname, const GLfloat *param);$/;"	p
glTextureParameterfvEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	p
glTextureParameteri	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameteri (GLuint texture, GLenum pname, GLint param);$/;"	p
glTextureParameteriEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	p
glTextureParameteriv	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameteriv (GLuint texture, GLenum pname, const GLint *param);$/;"	p
glTextureParameterivEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p
glTextureRenderbufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	p
glTextureStorage1D	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage1D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p
glTextureStorage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p
glTextureStorage2D	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage2D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glTextureStorage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p
glTextureStorage2DMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage2DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p
glTextureStorage2DMultisampleEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p
glTextureStorage3D	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage3D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p
glTextureStorage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p
glTextureStorage3DMultisample	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage3DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p
glTextureStorage3DMultisampleEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p
glTextureSubImage1D	.\glcorearb.h	/^GLAPI void APIENTRY glTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureSubImage1DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureSubImage2D	.\glcorearb.h	/^GLAPI void APIENTRY glTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureSubImage2DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureSubImage3D	.\glcorearb.h	/^GLAPI void APIENTRY glTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureSubImage3DEXT	.\glcorearb.h	/^GLAPI void APIENTRY glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p
glTextureView	.\glcorearb.h	/^GLAPI void APIENTRY glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	p
glTransformFeedbackBufferBase	.\glcorearb.h	/^GLAPI void APIENTRY glTransformFeedbackBufferBase (GLuint xfb, GLuint index, GLuint buffer);$/;"	p
glTransformFeedbackBufferRange	.\glcorearb.h	/^GLAPI void APIENTRY glTransformFeedbackBufferRange (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p
glTransformFeedbackVaryings	.\glcorearb.h	/^GLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	p
glTransformPathNV	.\glcorearb.h	/^GLAPI void APIENTRY glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	p
glUniform1d	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);$/;"	p
glUniform1dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p
glUniform1f	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);$/;"	p
glUniform1fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p
glUniform1i	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1i (GLint location, GLint v0);$/;"	p
glUniform1i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1i64ARB (GLint location, GLint64 x);$/;"	p
glUniform1i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1i64NV (GLint location, GLint64EXT x);$/;"	p
glUniform1i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p
glUniform1i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glUniform1iv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);$/;"	p
glUniform1ui	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);$/;"	p
glUniform1ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1ui64ARB (GLint location, GLuint64 x);$/;"	p
glUniform1ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1ui64NV (GLint location, GLuint64EXT x);$/;"	p
glUniform1ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glUniform1ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glUniform1uiv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p
glUniform2d	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);$/;"	p
glUniform2dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p
glUniform2f	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);$/;"	p
glUniform2fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p
glUniform2i	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);$/;"	p
glUniform2i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2i64ARB (GLint location, GLint64 x, GLint64 y);$/;"	p
glUniform2i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);$/;"	p
glUniform2i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p
glUniform2i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glUniform2iv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);$/;"	p
glUniform2ui	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);$/;"	p
glUniform2ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2ui64ARB (GLint location, GLuint64 x, GLuint64 y);$/;"	p
glUniform2ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p
glUniform2ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glUniform2ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glUniform2uiv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p
glUniform3d	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glUniform3dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p
glUniform3f	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p
glUniform3fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p
glUniform3i	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p
glUniform3i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3i64ARB (GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	p
glUniform3i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p
glUniform3i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p
glUniform3i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glUniform3iv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);$/;"	p
glUniform3ui	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p
glUniform3ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3ui64ARB (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	p
glUniform3ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p
glUniform3ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glUniform3ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glUniform3uiv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p
glUniform4d	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p
glUniform4dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p
glUniform4f	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p
glUniform4fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p
glUniform4i	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p
glUniform4i64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4i64ARB (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	p
glUniform4i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p
glUniform4i64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p
glUniform4i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p
glUniform4iv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);$/;"	p
glUniform4ui	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p
glUniform4ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4ui64ARB (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	p
glUniform4ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p
glUniform4ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glUniform4ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glUniform4uiv	.\glcorearb.h	/^GLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p
glUniformBlockBinding	.\glcorearb.h	/^GLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	p
glUniformHandleui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniformHandleui64ARB (GLint location, GLuint64 value);$/;"	p
glUniformHandleui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniformHandleui64NV (GLint location, GLuint64 value);$/;"	p
glUniformHandleui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glUniformHandleui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 *value);$/;"	p
glUniformMatrix2dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix2fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix2x3dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix2x3fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix2x4dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix2x4fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix3dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix3fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix3x2dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix3x2fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix3x4dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix3x4fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix4dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix4fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix4x2dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix4x2fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformMatrix4x3dv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p
glUniformMatrix4x3fv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p
glUniformSubroutinesuiv	.\glcorearb.h	/^GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	p
glUniformui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glUniformui64NV (GLint location, GLuint64EXT value);$/;"	p
glUniformui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p
glUnmapBuffer	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);$/;"	p
glUnmapNamedBuffer	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBuffer (GLuint buffer);$/;"	p
glUnmapNamedBufferEXT	.\glcorearb.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBufferEXT (GLuint buffer);$/;"	p
glUseProgram	.\glcorearb.h	/^GLAPI void APIENTRY glUseProgram (GLuint program);$/;"	p
glUseProgramStages	.\glcorearb.h	/^GLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	p
glUseShaderProgramEXT	.\glcorearb.h	/^GLAPI void APIENTRY glUseShaderProgramEXT (GLenum type, GLuint program);$/;"	p
glValidateProgram	.\glcorearb.h	/^GLAPI void APIENTRY glValidateProgram (GLuint program);$/;"	p
glValidateProgramPipeline	.\glcorearb.h	/^GLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);$/;"	p
glVertexArrayAttribBinding	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayAttribBinding (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	p
glVertexArrayAttribFormat	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayAttribFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p
glVertexArrayAttribIFormat	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayAttribIFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p
glVertexArrayAttribLFormat	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayAttribLFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p
glVertexArrayBindVertexBufferEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p
glVertexArrayBindingDivisor	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayBindingDivisor (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	p
glVertexArrayColorOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayEdgeFlagOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayEdgeFlagOffsetEXT (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayElementBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayElementBuffer (GLuint vaobj, GLuint buffer);$/;"	p
glVertexArrayFogCoordOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayFogCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayIndexOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayIndexOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayMultiTexCoordOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayMultiTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayNormalOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayNormalOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArraySecondaryColorOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArraySecondaryColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayTexCoordOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayVertexAttribBindingEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	p
glVertexArrayVertexAttribDivisorEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribDivisorEXT (GLuint vaobj, GLuint index, GLuint divisor);$/;"	p
glVertexArrayVertexAttribFormatEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p
glVertexArrayVertexAttribIFormatEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p
glVertexArrayVertexAttribIOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayVertexAttribLFormatEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p
glVertexArrayVertexAttribLOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayVertexAttribOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);$/;"	p
glVertexArrayVertexBindingDivisorEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	p
glVertexArrayVertexBuffer	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexBuffer (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p
glVertexArrayVertexBuffers	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexBuffers (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	p
glVertexArrayVertexOffsetEXT	.\glcorearb.h	/^GLAPI void APIENTRY glVertexArrayVertexOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p
glVertexAttrib1d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);$/;"	p
glVertexAttrib1dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttrib1f	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);$/;"	p
glVertexAttrib1fv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);$/;"	p
glVertexAttrib1s	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);$/;"	p
glVertexAttrib1sv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);$/;"	p
glVertexAttrib2d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);$/;"	p
glVertexAttrib2dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttrib2f	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);$/;"	p
glVertexAttrib2fv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);$/;"	p
glVertexAttrib2s	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);$/;"	p
glVertexAttrib2sv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);$/;"	p
glVertexAttrib3d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glVertexAttrib3dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttrib3f	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p
glVertexAttrib3fv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);$/;"	p
glVertexAttrib3s	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p
glVertexAttrib3sv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);$/;"	p
glVertexAttrib4Nbv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);$/;"	p
glVertexAttrib4Niv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);$/;"	p
glVertexAttrib4Nsv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);$/;"	p
glVertexAttrib4Nub	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p
glVertexAttrib4Nubv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);$/;"	p
glVertexAttrib4Nuiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);$/;"	p
glVertexAttrib4Nusv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);$/;"	p
glVertexAttrib4bv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);$/;"	p
glVertexAttrib4d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p
glVertexAttrib4dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttrib4f	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p
glVertexAttrib4fv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);$/;"	p
glVertexAttrib4iv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);$/;"	p
glVertexAttrib4s	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p
glVertexAttrib4sv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);$/;"	p
glVertexAttrib4ubv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);$/;"	p
glVertexAttrib4uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);$/;"	p
glVertexAttrib4usv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);$/;"	p
glVertexAttribBinding	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);$/;"	p
glVertexAttribDivisor	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);$/;"	p
glVertexAttribDivisorARB	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribDivisorARB (GLuint index, GLuint divisor);$/;"	p
glVertexAttribFormat	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p
glVertexAttribFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	p
glVertexAttribI1i	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);$/;"	p
glVertexAttribI1iv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);$/;"	p
glVertexAttribI1ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);$/;"	p
glVertexAttribI1uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);$/;"	p
glVertexAttribI2i	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);$/;"	p
glVertexAttribI2iv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);$/;"	p
glVertexAttribI2ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);$/;"	p
glVertexAttribI2uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);$/;"	p
glVertexAttribI3i	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);$/;"	p
glVertexAttribI3iv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);$/;"	p
glVertexAttribI3ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p
glVertexAttribI3uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);$/;"	p
glVertexAttribI4bv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);$/;"	p
glVertexAttribI4i	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p
glVertexAttribI4iv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);$/;"	p
glVertexAttribI4sv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);$/;"	p
glVertexAttribI4ubv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);$/;"	p
glVertexAttribI4ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p
glVertexAttribI4uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);$/;"	p
glVertexAttribI4usv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);$/;"	p
glVertexAttribIFormat	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p
glVertexAttribIFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p
glVertexAttribIPointer	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p
glVertexAttribL1d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);$/;"	p
glVertexAttribL1dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttribL1i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1i64NV (GLuint index, GLint64EXT x);$/;"	p
glVertexAttribL1i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1i64vNV (GLuint index, const GLint64EXT *v);$/;"	p
glVertexAttribL1ui64ARB	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);$/;"	p
glVertexAttribL1ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);$/;"	p
glVertexAttribL1ui64vARB	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT *v);$/;"	p
glVertexAttribL1ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p
glVertexAttribL2d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);$/;"	p
glVertexAttribL2dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttribL2i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	p
glVertexAttribL2i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL2i64vNV (GLuint index, const GLint64EXT *v);$/;"	p
glVertexAttribL2ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	p
glVertexAttribL2ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p
glVertexAttribL3d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p
glVertexAttribL3dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttribL3i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p
glVertexAttribL3i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL3i64vNV (GLuint index, const GLint64EXT *v);$/;"	p
glVertexAttribL3ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p
glVertexAttribL3ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p
glVertexAttribL4d	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p
glVertexAttribL4dv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);$/;"	p
glVertexAttribL4i64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p
glVertexAttribL4i64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL4i64vNV (GLuint index, const GLint64EXT *v);$/;"	p
glVertexAttribL4ui64NV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p
glVertexAttribL4ui64vNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p
glVertexAttribLFormat	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p
glVertexAttribLFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p
glVertexAttribLPointer	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p
glVertexAttribP1ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p
glVertexAttribP1uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p
glVertexAttribP2ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p
glVertexAttribP2uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p
glVertexAttribP3ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p
glVertexAttribP3uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p
glVertexAttribP4ui	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p
glVertexAttribP4uiv	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p
glVertexAttribPointer	.\glcorearb.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	p
glVertexBindingDivisor	.\glcorearb.h	/^GLAPI void APIENTRY glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);$/;"	p
glVertexFormatNV	.\glcorearb.h	/^GLAPI void APIENTRY glVertexFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p
glViewport	.\glcorearb.h	/^GLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p
glViewportArrayv	.\glcorearb.h	/^GLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);$/;"	p
glViewportIndexedf	.\glcorearb.h	/^GLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	p
glViewportIndexedfv	.\glcorearb.h	/^GLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);$/;"	p
glViewportPositionWScaleNV	.\glcorearb.h	/^GLAPI void APIENTRY glViewportPositionWScaleNV (GLuint index, GLfloat xcoeff, GLfloat ycoeff);$/;"	p
glViewportSwizzleNV	.\glcorearb.h	/^GLAPI void APIENTRY glViewportSwizzleNV (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);$/;"	p
glWaitSync	.\glcorearb.h	/^GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p
glWaitVkSemaphoreNV	.\glcorearb.h	/^GLAPI void APIENTRY glWaitVkSemaphoreNV (GLuint64 vkSemaphore);$/;"	p
glWeightPathsNV	.\glcorearb.h	/^GLAPI void APIENTRY glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	p
glWindowRectanglesEXT	.\glcorearb.h	/^GLAPI void APIENTRY glWindowRectanglesEXT (GLenum mode, GLsizei count, const GLint *box);$/;"	p
rcVirtualScreen	.\wglext.h	/^    RECT   rcVirtualScreen;$/;"	m	struct:_GPU_DEVICE
wglAllocateMemoryNV	.\wglext.h	/^void *WINAPI wglAllocateMemoryNV (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	p
wglAssociateImageBufferEventsI3D	.\wglext.h	/^BOOL WINAPI wglAssociateImageBufferEventsI3D (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	p
wglBeginFrameTrackingI3D	.\wglext.h	/^BOOL WINAPI wglBeginFrameTrackingI3D (void);$/;"	p
wglBindDisplayColorTableEXT	.\wglext.h	/^GLboolean WINAPI wglBindDisplayColorTableEXT (GLushort id);$/;"	p
wglBindSwapBarrierNV	.\wglext.h	/^BOOL WINAPI wglBindSwapBarrierNV (GLuint group, GLuint barrier);$/;"	p
wglBindTexImageARB	.\wglext.h	/^BOOL WINAPI wglBindTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);$/;"	p
wglBindVideoCaptureDeviceNV	.\wglext.h	/^BOOL WINAPI wglBindVideoCaptureDeviceNV (UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);$/;"	p
wglBindVideoDeviceNV	.\wglext.h	/^BOOL WINAPI wglBindVideoDeviceNV (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);$/;"	p
wglBindVideoImageNV	.\wglext.h	/^BOOL WINAPI wglBindVideoImageNV (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	p
wglBlitContextFramebufferAMD	.\wglext.h	/^VOID WINAPI wglBlitContextFramebufferAMD (HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p
wglChoosePixelFormatARB	.\wglext.h	/^BOOL WINAPI wglChoosePixelFormatARB (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	p
wglChoosePixelFormatEXT	.\wglext.h	/^BOOL WINAPI wglChoosePixelFormatEXT (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	p
wglCopyImageSubDataNV	.\wglext.h	/^BOOL WINAPI wglCopyImageSubDataNV (HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	p
wglCreateAffinityDCNV	.\wglext.h	/^HDC WINAPI wglCreateAffinityDCNV (const HGPUNV *phGpuList);$/;"	p
wglCreateAssociatedContextAMD	.\wglext.h	/^HGLRC WINAPI wglCreateAssociatedContextAMD (UINT id);$/;"	p
wglCreateAssociatedContextAttribsAMD	.\wglext.h	/^HGLRC WINAPI wglCreateAssociatedContextAttribsAMD (UINT id, HGLRC hShareContext, const int *attribList);$/;"	p
wglCreateBufferRegionARB	.\wglext.h	/^HANDLE WINAPI wglCreateBufferRegionARB (HDC hDC, int iLayerPlane, UINT uType);$/;"	p
wglCreateContextAttribsARB	.\wglext.h	/^HGLRC WINAPI wglCreateContextAttribsARB (HDC hDC, HGLRC hShareContext, const int *attribList);$/;"	p
wglCreateDisplayColorTableEXT	.\wglext.h	/^GLboolean WINAPI wglCreateDisplayColorTableEXT (GLushort id);$/;"	p
wglCreateImageBufferI3D	.\wglext.h	/^LPVOID WINAPI wglCreateImageBufferI3D (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	p
wglCreatePbufferARB	.\wglext.h	/^HPBUFFERARB WINAPI wglCreatePbufferARB (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	p
wglCreatePbufferEXT	.\wglext.h	/^HPBUFFEREXT WINAPI wglCreatePbufferEXT (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	p
wglDXCloseDeviceNV	.\wglext.h	/^BOOL WINAPI wglDXCloseDeviceNV (HANDLE hDevice);$/;"	p
wglDXLockObjectsNV	.\wglext.h	/^BOOL WINAPI wglDXLockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	p
wglDXObjectAccessNV	.\wglext.h	/^BOOL WINAPI wglDXObjectAccessNV (HANDLE hObject, GLenum access);$/;"	p
wglDXOpenDeviceNV	.\wglext.h	/^HANDLE WINAPI wglDXOpenDeviceNV (void *dxDevice);$/;"	p
wglDXRegisterObjectNV	.\wglext.h	/^HANDLE WINAPI wglDXRegisterObjectNV (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);$/;"	p
wglDXSetResourceShareHandleNV	.\wglext.h	/^BOOL WINAPI wglDXSetResourceShareHandleNV (void *dxObject, HANDLE shareHandle);$/;"	p
wglDXUnlockObjectsNV	.\wglext.h	/^BOOL WINAPI wglDXUnlockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	p
wglDXUnregisterObjectNV	.\wglext.h	/^BOOL WINAPI wglDXUnregisterObjectNV (HANDLE hDevice, HANDLE hObject);$/;"	p
wglDelayBeforeSwapNV	.\wglext.h	/^BOOL WINAPI wglDelayBeforeSwapNV (HDC hDC, GLfloat seconds);$/;"	p
wglDeleteAssociatedContextAMD	.\wglext.h	/^BOOL WINAPI wglDeleteAssociatedContextAMD (HGLRC hglrc);$/;"	p
wglDeleteBufferRegionARB	.\wglext.h	/^VOID WINAPI wglDeleteBufferRegionARB (HANDLE hRegion);$/;"	p
wglDeleteDCNV	.\wglext.h	/^BOOL WINAPI wglDeleteDCNV (HDC hdc);$/;"	p
wglDestroyDisplayColorTableEXT	.\wglext.h	/^VOID WINAPI wglDestroyDisplayColorTableEXT (GLushort id);$/;"	p
wglDestroyImageBufferI3D	.\wglext.h	/^BOOL WINAPI wglDestroyImageBufferI3D (HDC hDC, LPVOID pAddress);$/;"	p
wglDestroyPbufferARB	.\wglext.h	/^BOOL WINAPI wglDestroyPbufferARB (HPBUFFERARB hPbuffer);$/;"	p
wglDestroyPbufferEXT	.\wglext.h	/^BOOL WINAPI wglDestroyPbufferEXT (HPBUFFEREXT hPbuffer);$/;"	p
wglDisableFrameLockI3D	.\wglext.h	/^BOOL WINAPI wglDisableFrameLockI3D (void);$/;"	p
wglDisableGenlockI3D	.\wglext.h	/^BOOL WINAPI wglDisableGenlockI3D (HDC hDC);$/;"	p
wglEnableFrameLockI3D	.\wglext.h	/^BOOL WINAPI wglEnableFrameLockI3D (void);$/;"	p
wglEnableGenlockI3D	.\wglext.h	/^BOOL WINAPI wglEnableGenlockI3D (HDC hDC);$/;"	p
wglEndFrameTrackingI3D	.\wglext.h	/^BOOL WINAPI wglEndFrameTrackingI3D (void);$/;"	p
wglEnumGpuDevicesNV	.\wglext.h	/^BOOL WINAPI wglEnumGpuDevicesNV (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);$/;"	p
wglEnumGpusFromAffinityDCNV	.\wglext.h	/^BOOL WINAPI wglEnumGpusFromAffinityDCNV (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);$/;"	p
wglEnumGpusNV	.\wglext.h	/^BOOL WINAPI wglEnumGpusNV (UINT iGpuIndex, HGPUNV *phGpu);$/;"	p
wglEnumerateVideoCaptureDevicesNV	.\wglext.h	/^UINT WINAPI wglEnumerateVideoCaptureDevicesNV (HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);$/;"	p
wglEnumerateVideoDevicesNV	.\wglext.h	/^int WINAPI wglEnumerateVideoDevicesNV (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);$/;"	p
wglFreeMemoryNV	.\wglext.h	/^void WINAPI wglFreeMemoryNV (void *pointer);$/;"	p
wglGenlockSampleRateI3D	.\wglext.h	/^BOOL WINAPI wglGenlockSampleRateI3D (HDC hDC, UINT uRate);$/;"	p
wglGenlockSourceDelayI3D	.\wglext.h	/^BOOL WINAPI wglGenlockSourceDelayI3D (HDC hDC, UINT uDelay);$/;"	p
wglGenlockSourceEdgeI3D	.\wglext.h	/^BOOL WINAPI wglGenlockSourceEdgeI3D (HDC hDC, UINT uEdge);$/;"	p
wglGenlockSourceI3D	.\wglext.h	/^BOOL WINAPI wglGenlockSourceI3D (HDC hDC, UINT uSource);$/;"	p
wglGetContextGPUIDAMD	.\wglext.h	/^UINT WINAPI wglGetContextGPUIDAMD (HGLRC hglrc);$/;"	p
wglGetCurrentAssociatedContextAMD	.\wglext.h	/^HGLRC WINAPI wglGetCurrentAssociatedContextAMD (void);$/;"	p
wglGetCurrentReadDCARB	.\wglext.h	/^HDC WINAPI wglGetCurrentReadDCARB (void);$/;"	p
wglGetCurrentReadDCEXT	.\wglext.h	/^HDC WINAPI wglGetCurrentReadDCEXT (void);$/;"	p
wglGetDigitalVideoParametersI3D	.\wglext.h	/^BOOL WINAPI wglGetDigitalVideoParametersI3D (HDC hDC, int iAttribute, int *piValue);$/;"	p
wglGetExtensionsStringARB	.\wglext.h	/^const char *WINAPI wglGetExtensionsStringARB (HDC hdc);$/;"	p
wglGetExtensionsStringEXT	.\wglext.h	/^const char *WINAPI wglGetExtensionsStringEXT (void);$/;"	p
wglGetFrameUsageI3D	.\wglext.h	/^BOOL WINAPI wglGetFrameUsageI3D (float *pUsage);$/;"	p
wglGetGPUIDsAMD	.\wglext.h	/^UINT WINAPI wglGetGPUIDsAMD (UINT maxCount, UINT *ids);$/;"	p
wglGetGPUInfoAMD	.\wglext.h	/^INT WINAPI wglGetGPUInfoAMD (UINT id, INT property, GLenum dataType, UINT size, void *data);$/;"	p
wglGetGammaTableI3D	.\wglext.h	/^BOOL WINAPI wglGetGammaTableI3D (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	p
wglGetGammaTableParametersI3D	.\wglext.h	/^BOOL WINAPI wglGetGammaTableParametersI3D (HDC hDC, int iAttribute, int *piValue);$/;"	p
wglGetGenlockSampleRateI3D	.\wglext.h	/^BOOL WINAPI wglGetGenlockSampleRateI3D (HDC hDC, UINT *uRate);$/;"	p
wglGetGenlockSourceDelayI3D	.\wglext.h	/^BOOL WINAPI wglGetGenlockSourceDelayI3D (HDC hDC, UINT *uDelay);$/;"	p
wglGetGenlockSourceEdgeI3D	.\wglext.h	/^BOOL WINAPI wglGetGenlockSourceEdgeI3D (HDC hDC, UINT *uEdge);$/;"	p
wglGetGenlockSourceI3D	.\wglext.h	/^BOOL WINAPI wglGetGenlockSourceI3D (HDC hDC, UINT *uSource);$/;"	p
wglGetMscRateOML	.\wglext.h	/^BOOL WINAPI wglGetMscRateOML (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	p
wglGetPbufferDCARB	.\wglext.h	/^HDC WINAPI wglGetPbufferDCARB (HPBUFFERARB hPbuffer);$/;"	p
wglGetPbufferDCEXT	.\wglext.h	/^HDC WINAPI wglGetPbufferDCEXT (HPBUFFEREXT hPbuffer);$/;"	p
wglGetPixelFormatAttribfvARB	.\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribfvARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	p
wglGetPixelFormatAttribfvEXT	.\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribfvEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	p
wglGetPixelFormatAttribivARB	.\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribivARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	p
wglGetPixelFormatAttribivEXT	.\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribivEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	p
wglGetSwapIntervalEXT	.\wglext.h	/^int WINAPI wglGetSwapIntervalEXT (void);$/;"	p
wglGetSyncValuesOML	.\wglext.h	/^BOOL WINAPI wglGetSyncValuesOML (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	p
wglGetVideoDeviceNV	.\wglext.h	/^BOOL WINAPI wglGetVideoDeviceNV (HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);$/;"	p
wglGetVideoInfoNV	.\wglext.h	/^BOOL WINAPI wglGetVideoInfoNV (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);$/;"	p
wglIsEnabledFrameLockI3D	.\wglext.h	/^BOOL WINAPI wglIsEnabledFrameLockI3D (BOOL *pFlag);$/;"	p
wglIsEnabledGenlockI3D	.\wglext.h	/^BOOL WINAPI wglIsEnabledGenlockI3D (HDC hDC, BOOL *pFlag);$/;"	p
wglJoinSwapGroupNV	.\wglext.h	/^BOOL WINAPI wglJoinSwapGroupNV (HDC hDC, GLuint group);$/;"	p
wglLoadDisplayColorTableEXT	.\wglext.h	/^GLboolean WINAPI wglLoadDisplayColorTableEXT (const GLushort *table, GLuint length);$/;"	p
wglLockVideoCaptureDeviceNV	.\wglext.h	/^BOOL WINAPI wglLockVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	p
wglMakeAssociatedContextCurrentAMD	.\wglext.h	/^BOOL WINAPI wglMakeAssociatedContextCurrentAMD (HGLRC hglrc);$/;"	p
wglMakeContextCurrentARB	.\wglext.h	/^BOOL WINAPI wglMakeContextCurrentARB (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	p
wglMakeContextCurrentEXT	.\wglext.h	/^BOOL WINAPI wglMakeContextCurrentEXT (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	p
wglQueryCurrentContextNV	.\wglext.h	/^BOOL WINAPI wglQueryCurrentContextNV (int iAttribute, int *piValue);$/;"	p
wglQueryFrameCountNV	.\wglext.h	/^BOOL WINAPI wglQueryFrameCountNV (HDC hDC, GLuint *count);$/;"	p
wglQueryFrameLockMasterI3D	.\wglext.h	/^BOOL WINAPI wglQueryFrameLockMasterI3D (BOOL *pFlag);$/;"	p
wglQueryFrameTrackingI3D	.\wglext.h	/^BOOL WINAPI wglQueryFrameTrackingI3D (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	p
wglQueryGenlockMaxSourceDelayI3D	.\wglext.h	/^BOOL WINAPI wglQueryGenlockMaxSourceDelayI3D (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	p
wglQueryMaxSwapGroupsNV	.\wglext.h	/^BOOL WINAPI wglQueryMaxSwapGroupsNV (HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);$/;"	p
wglQueryPbufferARB	.\wglext.h	/^BOOL WINAPI wglQueryPbufferARB (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	p
wglQueryPbufferEXT	.\wglext.h	/^BOOL WINAPI wglQueryPbufferEXT (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	p
wglQuerySwapGroupNV	.\wglext.h	/^BOOL WINAPI wglQuerySwapGroupNV (HDC hDC, GLuint *group, GLuint *barrier);$/;"	p
wglQueryVideoCaptureDeviceNV	.\wglext.h	/^BOOL WINAPI wglQueryVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);$/;"	p
wglReleaseImageBufferEventsI3D	.\wglext.h	/^BOOL WINAPI wglReleaseImageBufferEventsI3D (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	p
wglReleasePbufferDCARB	.\wglext.h	/^int WINAPI wglReleasePbufferDCARB (HPBUFFERARB hPbuffer, HDC hDC);$/;"	p
wglReleasePbufferDCEXT	.\wglext.h	/^int WINAPI wglReleasePbufferDCEXT (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	p
wglReleaseTexImageARB	.\wglext.h	/^BOOL WINAPI wglReleaseTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);$/;"	p
wglReleaseVideoCaptureDeviceNV	.\wglext.h	/^BOOL WINAPI wglReleaseVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	p
wglReleaseVideoDeviceNV	.\wglext.h	/^BOOL WINAPI wglReleaseVideoDeviceNV (HPVIDEODEV hVideoDevice);$/;"	p
wglReleaseVideoImageNV	.\wglext.h	/^BOOL WINAPI wglReleaseVideoImageNV (HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	p
wglResetFrameCountNV	.\wglext.h	/^BOOL WINAPI wglResetFrameCountNV (HDC hDC);$/;"	p
wglRestoreBufferRegionARB	.\wglext.h	/^BOOL WINAPI wglRestoreBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	p
wglSaveBufferRegionARB	.\wglext.h	/^BOOL WINAPI wglSaveBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height);$/;"	p
wglSendPbufferToVideoNV	.\wglext.h	/^BOOL WINAPI wglSendPbufferToVideoNV (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);$/;"	p
wglSetDigitalVideoParametersI3D	.\wglext.h	/^BOOL WINAPI wglSetDigitalVideoParametersI3D (HDC hDC, int iAttribute, const int *piValue);$/;"	p
wglSetGammaTableI3D	.\wglext.h	/^BOOL WINAPI wglSetGammaTableI3D (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	p
wglSetGammaTableParametersI3D	.\wglext.h	/^BOOL WINAPI wglSetGammaTableParametersI3D (HDC hDC, int iAttribute, const int *piValue);$/;"	p
wglSetPbufferAttribARB	.\wglext.h	/^BOOL WINAPI wglSetPbufferAttribARB (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	p
wglSetStereoEmitterState3DL	.\wglext.h	/^BOOL WINAPI wglSetStereoEmitterState3DL (HDC hDC, UINT uState);$/;"	p
wglSwapBuffersMscOML	.\wglext.h	/^INT64 WINAPI wglSwapBuffersMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	p
wglSwapIntervalEXT	.\wglext.h	/^BOOL WINAPI wglSwapIntervalEXT (int interval);$/;"	p
wglSwapLayerBuffersMscOML	.\wglext.h	/^INT64 WINAPI wglSwapLayerBuffersMscOML (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	p
wglWaitForMscOML	.\wglext.h	/^BOOL WINAPI wglWaitForMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	p
wglWaitForSbcOML	.\wglext.h	/^BOOL WINAPI wglWaitForSbcOML (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	p
